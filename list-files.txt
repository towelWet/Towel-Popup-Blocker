=== Complete File Listing with Contents ===
Generated on: Sun Apr  6 03:55:22 EDT 2025
===========================================

=== File: ./test/popup-blocker.html ===
----------------------------------------
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
    <title>Popup blocking test suite :: tools.add0n.com</title>
    <base target="_self">
  </head>
  <body>
    <h1>Popup Blocker Detection</h1>
    <p>
      <ul>
        <li>Do you have a popup blocker (sync):&nbsp;<b>
        <script>
          /* eslint no-trailing-spaces: 0, eol-last: 0 */
          document.write((/\{\s*\[native code\]\s*\}/).test('' + window.open) === false);
        </script>
        </b></li>
        <li>Do you have a popup blocker (async):&nbsp;<b id="detection">
        <script type="text/javascript">
          /* eslint no-trailing-spaces: 0, eol-last: 0 */
          window.setTimeout(() => {
            document.getElementById('detection').textContent = /\{\s*\[native code\]\s*\}/.test('' + window.open) === false;
          }, 0);
        </script>
        </b></li>
        <li>Do you have a popup blocker (iframe sync):&nbsp;<b>
        <script>
          /* eslint no-trailing-spaces: 0, eol-last: 0 */
          var iframe = document.createElement('iframe');
          document.body.appendChild(iframe);
          document.write((/\{\s*\[native code\]\s*\}/).test('' + iframe.contentWindow.open) === false);
          iframe.remove();
        </script>
        </b></li>
      </ul>
    </p>
    <style>
      body {
        font-family: "Helvetica Neue",Helvetica,sans-serif;
        font-size: 13px;
      }
      h1 {
        font-weight: 400;
      }
      li {
        margin: 5px 0;
        display: flex;
        align-items: center;
      }
      iframe,
      input,
      a {
        border: none;
        background-color: #ddd;
        text-decoration: none;
        color: #000;
        display: inline-block;
        text-align: center;
        font-size: 90%;
        cursor: pointer;
        outline: none;
        margin-right: 5px;
        padding: 5px 0;
      }
      input {
        padding: 5px;
      }
      iframe:active,
      input:active,
      a:hover {
        opacity: 0.5;
      }
      li a,
      li input {
        min-width: 100px;
      }
      iframe {
        border: none;
        width: 100px;
        height: 23px;
        vertical-align: middle;
        padding: 0;
      }
    </style>
    <script>
      /* eslint no-trailing-spaces: 0, eol-last: 0 */
      'use strict';
      var pointer = window.open;

      var e1 = document.createEvent('CustomEvent');
      e1.initCustomEvent('ppp-blocker-create', false, false, {
        cmd: 'open-tab',
        url: 'about:blank'
      });
      new CustomEvent('ppp-blocker-create');

      function method1() {
        var newwindow = pointer('', 'result', 'status=1,width=700,height=500,menubar=yes');
        newwindow.document.open('text/html', 'replace');
        newwindow.document.write('<html><body>test page / 1 ...<body/><html/>');
        newwindow.document.write('<script> document.onreadystatechange = function(){   if(document.readyState=="loaded" || document.readyState=="complete") window.print(); } <' + '/script>');
        newwindow.focus();
        newwindow.location.replace('http://www.example.com/method/1');
        newwindow.document.close();
      }
      function method2() {
        var newwindow = window.open('javascript:alert("alerting from window.open")');
      }
      function method3(url, title, w, h) {
        var dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : screen.left;
        var dualScreenTop = window.screenTop !== undefined ? window.screenTop : screen.top;
        var width = window.innerWidth ?
          window.innerWidth :
          document.documentElement.clientWidth ? document.documentElement.clientWidth : screen.width;
        var height = window.innerHeight ?
          window.innerHeight :
          document.documentElement.clientHeight ? document.documentElement.clientHeight : screen.height;

        var left = ((width / 2) - (w / 2)) + dualScreenLeft;
        var top = ((height / 2) - (h / 2)) + dualScreenTop;
        var newWindow = window.open(url, title, 'scrollbars=yes, width=' + w + ', height=' + h + ', top=' + top + ', left=' + left);

        // Puts focus on the newWindow
        if (window && window.focus) {
          newWindow.focus();
        }
      }
      function method7() {
        var c = document.createElement('a');
        var d = document.createEvent('MouseEvents');
        c.href = 'https://example.com/test/7', d.initMouseEvent('click', !1, !0, window, 0, 0, 0, 0, 0, !0, !1, !1, !0, 0, null), c.dispatchEvent(d);
      }
      function method12_1() {
        var e = new MouseEvent('click', {
          button: 0,
          bubbles: true
        });
        const target = document.head.querySelector('base').target;
        document.head.querySelector('base').target = 'fake_target';
        document.getElementById('id4').dispatchEvent(e);
        document.head.querySelector('base').target = target;
      }
      function method12_2() {
        document.getElementById('id4').dispatchEvent(new MouseEvent('click', {
          button: 1
        }));
      }
      function method12_3() {
        var evt = document.createEvent('MouseEvents');
        evt.initEvent('click', true, false);
        document.getElementById('id4').target = 'fake_target';
        document.getElementById('id4').dispatchEvent(evt);
        document.getElementById('id4').removeAttribute('target');
      }
      function method12_4() {
        document.getElementById('id4').click();
      }
      function method12_5() {
        var e = new MouseEvent('click', {
          button: 0,
          ctrlKey: true,
          metaKey: true
        });

        document.getElementById('id4').dispatchEvent(e);
        e.preventDefault();
        e.stopPropagation();
      }
      function method10() {
        var a = document.createElement('a');
        a.target = '_blank';
        a.href = 'https://example.com/test/10';
        document.body.appendChild(a);
        var b = new MouseEvent('click', {
          view: window,
          bubbles: !1,
          cancelable: !1
        });
        a.dispatchEvent(b);
      }
      function method13_1() {
        var f = document.createElement('form');
        f.setAttribute('action', 'https://example.com/test/13');
        f.setAttribute('method', 'post');
        f.setAttribute('target', 'invalid_target_tag');
        document.body.appendChild(f);
        f.submit();
        document.body.removeChild(f);
        return false;
      }
      function method13_2() {
        var f = document.createElement('form');
        f.setAttribute('action', 'https://example.com/test/13');
        f.setAttribute('method', 'post');
        f.setAttribute('target', '_blank');
        document.body.appendChild(f);
        var button = document.createElement('button');
        button.type = 'submit';
        f.appendChild(button);
        f.dispatchEvent(new Event('submit', {
          bubbles: true
        }));
        document.body.removeChild(f);
        return false;
      }
      function method13_3() {
        var f = document.createElement('form');
        f.setAttribute('action', 'https://example.com/test/13');
        f.setAttribute('method', 'post');
        f.setAttribute('target', '_blank');
        document.body.appendChild(f);
        var button = document.createElement('button');
        button.type = 'submit';
        f.appendChild(button);
        button.click();
        document.body.removeChild(f);
        return false;
      }
      function method13_4() {
        var div = document.createElement('div');
        var f = document.createElement('form');
        f.setAttribute('action', 'https://example.com/test/13');
        f.setAttribute('method', 'post');
        f.setAttribute('target', '_blank');
        div.appendChild(f);
        document.body.appendChild(div);
        var button = document.createElement('button');
        button.type = 'submit';
        f.appendChild(button);
        button.dispatchEvent(new Event('click', {
          bubbles: true
        }));
        document.body.removeChild(div);
        return false;
      }
      function method14_1(e) {
        function isWindow(obj) {
            if (typeof(window.constructor) === 'undefined') {
                return obj instanceof window.constructor;
            }
            else {
                return obj.window === obj;
            }
        }
        var win = window.open('https://example.com/test/14');
        if (!isWindow(win)) {
          e.preventDefault();
          e.stopImmediatePropagation();
          e.stopPropagation();
          window.setTimeout(function() {
            window.location.href = 'https://example.com/test/14';
          }, 500);
        }
      }
      function method14_2() {
        function isWindow(obj) {
            if (typeof(window.constructor) === 'undefined') {
                return obj instanceof window.constructor;
            }
            else {
              return obj.window === obj;
            }
        }
        var win = window.open('https://example.com/test/14');
        if (!isWindow(win)) {
          window.location.href = 'https://example.com/test/14';
        }
      }

      function method16() {
        window.open('popup-blocker.html');
      }
      function method17_1() {
        var f = document.createElement('iframe');
        f.style = 'display: none;';
        document.body.appendChild(f);
        f.contentWindow.open('https://example.com/test/17/1');
      }
      function method17_2() {
        var f = document.createElement('iframe');
        f.style = 'display: none;';
        document.body.appendChild(f);
        window.setTimeout(function() {
          f.contentWindow.open('https://example.com/test/17/1');
        }, 2000);
      }
      function method17_3() {
        var f = document.createElement('iframe');
        f.style = 'display: none;';
        document.body.appendChild(f);

        var a = f.contentDocument.createElement('a');
        a.target = '_blank';
        a.href = 'https://example.com/test/17/2';
        a.click();
        document.body.appendChild(a);
      }
      function method20() {
        var a = document.createElement('a');
        a.href = 'http://example.com/method/20';
        a.target = 't4kojpe98h';
        a.click();
      }
      function method21() {
        var a = document.createElement('a');
        a.href = 'http://example.com/method/20';
        a.target = 'sub_frame';
        a.click();
      }
      function method22() {
        const iframe = document.createElement("iframe");
        iframe.src = "javascript:true";
        document.body.appendChild(iframe);
        const iframewin = iframe.contentWindow || iframe;
        iframewin.open("", "", "top=9999,left=9999,width=100,height=100");
      }
      function method23() {
        const iframe = document.createElement("iframe");
        iframe.src = 'data:text/html;charset=utf-8,' + encodeURI(`<p></p>`);
        document.body.appendChild(iframe);
        const iframewin = iframe.contentWindow || iframe;
        console.log('fire');
        iframewin.open("", "", "top=9999,left=9999,width=100,height=100");
      }

      function overwrite1() {
        try {
          Object.defineProperty(window, 'open', {
            writable: false,
            value: function() {
              alert('window.open is bypassed; still your popup-blocker should not allow popups');
            }
          });
        }
        catch (e) {
          alert('Error: ' + e.message);
        }
      }

      function overwrite2() {
        try {
          MouseEvent.prototype.preventDefault = function() {};
        }
        catch (e) {
          alert('Error: ' + e.message);
        }
      }

      function overwrite3() {
        const div = document.createElement('div');
        div.style = `
          position: fixed;
          top: 0;
          left: 50%;
          width: 100%;
          height: 100%;
          background: rgba(0, 0, 0, 0.1);
          z-index: 1000000000000000;
        `;
        div.addEventListener('click', e => {
          e.stopPropagation();
          e.preventDefault();
        });
        document.body.appendChild(div);
      }
    </script>
    <h1>Test the effectiveness of your popup blocker add-on</h1>
    <ul>
      <li><input type="button" onclick="method1()" value="Method 1/1"> opening a new about:blank popup window and then fill the content using JavaScript engine; part 1</li>
      <li><input type="button" onclick="method2()" value="Method 1/2"> window.open(javascript:...)</li>
      <li><input type="button" onclick="window.open('https://example.com/test/2/1');" value="Method 2/1"> opening a new popup tab using window.open method</li>
      <li><input type="button" onclick="pointer('https://example.com/test/2/2');" value="Method 2/2"> opening a new popup tab using a predefined pointer to window.open method</li>
      <li><input type="button" onclick="method3('https://example.com/test/3', 'new window', 600, 600)" value="Method 3"> opening a new popup window and passing arguments to it</li>
      <li><a href='https://example.com/test/4' target="_blank">Method 4</a> opening new popup window using target="_blank" method over links</li>
      <li><iframe name="sub_frame" src="./popup-blocker-iframe.html?title=Method 5/1"></iframe> redirecting tab using iframe with "base" header set to target="_parent" method</li>
      <li><iframe sandbox="allow-forms allow-popups allow-scripts allow-same-origin" src="./popup-blocker-iframe.html?title=Method 5/2"></iframe> opening a new popup tab using iframe with "base" header set to target="_parent" method when iframe is sandboxed</li>
      <li><a href='https://example.com/test/6' id="method_6">Method 6</a> opening a new popup tab using link with "base" header set to target="_blank"</li>
      <script>
        var e = document.getElementById('method_6');
        e.addEventListener('mousedown', () => {
          const target = document.head.querySelector('base').target;
          document.head.querySelector('base').target = '_blank';
          window.setTimeout(() => {
            document.head.querySelector('base').target = target;
          }, 1000);
        })
      </script>
      <li><input type="button" onclick="method7()" value="Method 7"> opening a new about:blank popup window using createEvent method</li>
      <li><a id="id1" href='https://example.com/test/8/1' target="_blank">Method 8/1</a> opening new popup window using target="_blank" method over links powered by stop propagation</li>
      <script>
        /* eslint no-trailing-spaces: 0, eol-last: 0 */
        document.getElementById('id1').addEventListener('click', function(e) {
          e.stopPropagation();
        });
      </script>
      <li><a id="id2" href='https://example.com/test/8/2' target="_blank">Method 8/2</a> opening new popup window using target="_blank" method over links powered by stop propagation</li>
      <script>
        /* eslint no-trailing-spaces: 0, eol-last: 0 */
        document.getElementById('id2').addEventListener('click', function(e) {
          e.stopImmediatePropagation();
        });
      </script>
      <li><span id="id3"> click the button to create iframe, then click on the generated link</li>
      <script>
        /* eslint no-trailing-spaces: 0, eol-last: 0 */
        var f = document.createElement('iframe');
        var elem = document.getElementById('id3');
        elem.parentNode.insertBefore(f, elem);
        f.contentDocument.write('<html><head><style>body{display: flex; align-items: center; justify-content: center; margin: 0; overflow: hidden;}</style></head><body><a href="https://example.com/test/9" target="_blank">Method 9</a>');
        f.contentDocument.write('</body></html>');
        f.contentDocument.documentElement.appendChild(document.querySelector('style').cloneNode(true));
        f.contentDocument.close();
      </script>
      <li><input type="button" onclick="method10()" value="Method 10"> creating new element and dispatching an uncancellable click event</li>
      <li>
        <form action="https://example.com/test/11" target="_blank">
          <input type=submit value="Method 11">
        </form> using form element to issue a popup
      </li>
      <div style="display: none;" id="id4-div"><a href="https://example.com/test/12" id="id4"></a></div>
      <li><input onclick="method12_1()" type="button" value="Method 12/1">generating click event (button=0) and dispatching it over a "a" element</li>
      <li><input onclick="method12_2()" type="button" value="Method 12/2">generating click event (button=1) and dispatching it over a "a" element</li>
      <li><input onclick="method12_3()" type="button" value="Method 12/3">generating click event (button=0) and dispatching it over a "a" element</li>
      <li><input onclick="method12_4()" type="button" value="Method 12/4">fire click() over a "a" element</li>
      <li><input onclick="method12_5()" type="button" value="Method 12/5">generating click event (button=0; ctrlKey = true) and dispatching it over a "a" element</li>
      <li><input onclick="method13_1(event)" type="button" value="Method 13_1">opening link through form submission</li>
      <li><input onclick="method13_2(event)" type="button" value="Method 13_2">opening link through form submission; Firefox only</li>
      <li><input onclick="method13_3(event)" type="button" value="Method 13_3">opening link through form submission</li>
      <li><input onclick="method13_4(event)" type="button" value="Method 13_4">opening link through form submission; Firefox only</li>
      <li><input style="color: #f00" onclick="method14_1(event)" type="button" value="Method 14/1">opening a popup and if it was unsuccessful, redirect current page to destination (redirect with delay). To prevent this enable "Prevent page redirection for 5 seconds after a popup is requested" in the options page.</li>
      <li><input style="color: #f00" onclick="method14_2()" type="button" value="Method 14/2">opening a popup and if it was unsuccessful, redirect current page to destination (instant redirect). To prevent this enable "Prevent page redirection for 5 seconds after a popup is requested" in the options page.</li>
      <li><a href='javascript:window.open("https://example.com/test/15");' target="_blank">Method 15</a> open a popup through direct JS execution</li>
      <li><a href='popup-blocker.html");' target="_blank">Method 16/1</a> open a popup using relative link</li>
      <li><input type="button" onclick="method16()" value="Method 16/2"> open a popup using relative link</li>
      <li><input type="button" onclick="method17_1()" value="Method 17/1"> open a popup by creating a dynamic iframe (method 1); <b>PB blocks this type even when it is disabled</b></li>
      <li><input type="button" onclick="method17_2()" value="Method 17/2"> open a popup by creating a dynamic iframe (method 1 with 2 secs delay)</li>
      <li><input type="button" onclick="method17_3()" value="Method 17/3"> open a popup by creating a dynamic iframe (method 3); <b>PB blocks this type even when it is disabled</b></li>
      <li><a href="#" target="_blank">Method 18</a>Same origin tag</li>
      <li><label><a target="_blank" href="http://example.com/method/19">Method 19</a></label></li>
      <li><input type="button" onclick="method20()" value="Method 20"> invalid target</li>
      <li><input type="button" onclick="method21()" value="Method 21"> named target (should allow)</li>
      <li><input type="button" onclick="method22()" value="Method 22"> iframe.src = "javascript:false"</li>
      <li><input type="button" onclick="method23()" value="Method 23"> iframe.src = "data:text/html;..."</li>
    </ul>
    <p>
      Click <input type="button" onclick="overwrite1();" value="here"> to overwrite "window.open" and try tests one more time.
    </p>
    <p>
      Click <input type="button" onclick="overwrite2();" value="here"> to overwrite "MouseEvent.prototype.preventDefault" and try tests one more time.
    </p>
    <p>
      Click <input type="button" onclick="overwrite3();" value="here"> to add an overlay div to prevent access to the buttons; issue a new popup to have access to the panel
    </p>

    <p>It is recommended to use <b>Popup Blocker (strict)</b> add-on for the best experience; <a href="https://chrome.google.com/webstore/detail/aefkmifgmaafnojlojpnekbpbmjiiogg">Chrome</a>, <a href="https://addons.mozilla.org/firefox/addon/popup-blocker/">Firefox</a>, and <a href="https://addons.opera.com/en/extensions/details/popup-blocker-ultimate/">Opera</a>.
    </p>

    <script>
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

      ga('create', 'UA-33732869-1', 'auto');
      ga('send', 'pageview');
    </script>
  </body>
</html>



=== File: ./test/blocking-ui.html ===
----------------------------------------
<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>Annoying popup</title>
    <script type="text/javascript">
      (function() {
        var okay_i_popped = false;
        function listener(e) {
          if (okay_i_popped) {
            e.currentTarget.removeEventListener("mousedown", listener, true);
            e.currentTarget.parentNode.removeChild(e.currentTarget);
            return;
          }
          e.preventDefault();
          e.stopPropagation();
          var win = null;
          try {
            win = window.open('about:blank', 'annoying');
          }
          catch(t) {
          }
          if (win && (typeof win === "object") && win.toString() === "[object Window]") {
            okay_i_popped = true;
            e.currentTarget.removeEventListener("mousedown", listener, true);
            e.currentTarget.parentNode.removeChild(e.currentTarget);
          }
        }
        var mylistenerdiv = null;
        function checkforlistener() {
          if (okay_i_popped) {
            return;
          }
          window.requestAnimationFrame(checkforlistener);
          if (!document.body) {
            return;
          }
          if (mylistenerdiv) {
            if (document.body.children[document.body.children.length-1] != mylistenerdiv) {
              if (mylistenerdiv && mylistenerdiv.parentNode) {
                try {
                  mylistenerdiv.parentNode.removeChild(mylistenerdiv);
                }
                catch(t) {}
              }
              mylistenerdiv = null;
            }
          }
          if (!mylistenerdiv) {
            mylistenerdiv = document.createElement('div');
            mylistenerdiv.addEventListener("mousedown", listener, true);
            document.body.appendChild(mylistenerdiv);
          }

          mylistenerdiv.style.position = "fixed";
          mylistenerdiv.style.display = "flex";
          mylistenerdiv.style['align-items'] = "center";
          mylistenerdiv.style['justify-content'] = "center";
          mylistenerdiv.style.top = "0px";
          mylistenerdiv.style.left = "0px";
          mylistenerdiv.style.bottom = "0px";
          mylistenerdiv.style.right = "0px";
          mylistenerdiv.style.background = "rgba(0,0,0,0.1)";
          mylistenerdiv.style.zIndex = 2147483649;
          mylistenerdiv.textContent = 'Blocking the UI'
        }
        window.requestAnimationFrame(checkforlistener);
      })();
    </script>
  </head>
  <body>
    <a href="#test">You want to click me</a>
  </body>
</html>



=== File: ./test/popup-blocker-iframe.html ===
----------------------------------------
<html>
  <head>
    <base target="_blank"/>
  </head>
  <body>
    <style>
      body, html {
        height: 100%;
      }
      body {
        margin: 0;
        padding: 0;
        overflow: hidden;
        font-size: 13px;
        font-family: arial,sans-serif;
        display: flex;
        align-items: center;
        justify-content: center;
      }
      a {
        border: none;
        background-color: #ddd;
        text-decoration: none;
        color: #000;
        display: inline-block;
        text-align: center;
        font-size: 90%;
        cursor: pointer;
        outline: none;
        margin-right: 5px;
        padding: 5px 0;
      }
    </style>
    <a href='https://example.com/test/5' style="color: #f00">
    <script>
      document.write(decodeURIComponent(document.location.search.substr(7)));
    </script></a>
  </body>
</html>



=== File: ./background.js ===
----------------------------------------
chrome.webRequest.onBeforeRequest.addListener(
  function(details) {
    if (details.type === 'popup') {
      return {cancel: true};
    }
  },
  {urls: ["<all_urls>"]},
  ["blocking"]
);



=== File: ./popup.html ===
----------------------------------------
<!DOCTYPE html>
<html>
<head>
  <title>Popup Blocker</title>
</head>
<body>
  <h1>Popup Blocker</h1>
  <p>Status: Active</p>
</body>
</html>



=== File: ./v2/config.js ===
----------------------------------------
'use strict';

const config = window.config = {
  'enabled': true,
  'numbers': 5,
  'timeout': 30,
  'countdown': 5,
  'default-action': 'ignore',
  'immediate-action': false,
  'simulate-allow': true,
  'aggressive': false,
  'wot': false,
  'domain': false, // allow popups from the same domain
  'badge': true,
  'badge-color': '#6e6e6e',
  'whitelist-mode': 'popup-hosts',
  // the following hostnames can issue popup on every website
  'popup-hosts': [
    'google.com', 'bing.com', 't.co', 'twitter.com', 'disqus.com', 'login.yahoo.com',
    'mail.google.com', 'doubleclick.net'
  ],
  // popup blocker is disabled in the following hostname tabs
  'top-hosts': ['github.com', 'twitter.com', 'webextension.org', 'google.com', 'www.paypal.com'],
  // these protocols are accepted
  'protocols': ['magnet:'],
  'blacklist': [],
  'silent': [],
  'issue': true,
  'block-page-redirection': false,
  'target': true,
  'version': null,
  'faqs': true,
  'last-update': 0
};

config.get = arr => new Promise(resolve => {
  const ps = arr.reduce((p, c) => {
    p[c] = config[c];
    return p;
  }, {});
  chrome.storage.local.get(ps, resolve);
});



=== File: ./v2/actions/disabled.js ===
----------------------------------------
/* global prefs */

window.enabled = false;

if (typeof prefs === 'object') {
  prefs.enabled = window.enabled;
}



=== File: ./v2/actions/enabled.js ===
----------------------------------------
/* global prefs */

if (!('enabled' in window)) { // in case disabled.js is called first
  window.enabled = true;
}

if (typeof prefs === 'object') {
  prefs.enabled = window.enabled;
}



=== File: ./v2/manifest.json ===
----------------------------------------
{
  "name": "Popup Blocker (strict)",
  "description": "__MSG_app_description__",
  "version": "0.7.1",
  "manifest_version": 2,
  "default_locale": "en",
  "permissions": [
    "storage",
    "<all_urls>"
  ],
  "background": {
    "scripts": [
      "config.js",
      "common.js"
    ]
  },
  "browser_action": {
    "default_popup": "data/popup/index.html"
  },
  "content_scripts": [{
    "matches": ["<all_urls>"],
    "js": ["data/inject/iframe.js"],
    "run_at": "document_start",
    "all_frames": false
  }],
  "homepage_url": "https://webextension.org/listing/popup-blocker.html",
  "icons": {
    "16": "data/icons/16.png",
    "32": "data/icons/32.png",
    "48": "data/icons/48.png",
    "64": "data/icons/64.png",
    "128": "data/icons/128.png",
    "256": "data/icons/256.png",
    "512": "data/icons/512.png"
  },
  "options_ui": {
    "page": "data/options/index.html",
    "chrome_style": true,
    "open_in_tab": true
  },
  "web_accessible_resources": [
    "data/ui/*"
  ],
  "commands": {
    "allow-last-request": {
      "description": "__MSG_context_item2__"
    },
    "deny-last-request": {
      "description": "__MSG_context_item3__"
    }
  },
  "applications": {
    "gecko": {
       "id": "{de22fd49-c9ab-4359-b722-b3febdc3a0b0}"
    }
  }
}



=== File: ./v2/common.js ===
----------------------------------------
/* globals config, browser */
'use strict';

const isFirefox = /Firefox/.test(navigator.userAgent) || typeof InstallTrigger !== 'undefined';

const cookie = {
  get: host => {
    const key = document.cookie.split(`${host}-wot=`);
    if (key.length > 1) {
      return key[1].split(';')[0];
    }
  },
  set: (host, cmd) => {
    const days = 10;
    const date = new Date();
    date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));

    document.cookie = `${host}-wot=${cmd}; expires=${date.toGMTString()}`;
  }
};

// observe preference changes
chrome.storage.onChanged.addListener(prefs => {
  if (prefs.badge && prefs.badge.newValue === false) {
    chrome.tabs.query({}, tabs => tabs.forEach(tab => chrome.browserAction.setBadgeText({
      tabId: tab.id,
      text: ''
    })));
  }
  // maybe multiple prefs changed
  if (prefs['badge-color']) {
    chrome.browserAction.setBadgeBackgroundColor({
      color: prefs['badge-color'].newValue
    });
  }
  //
  if (prefs.enabled) {
    action();
  }
});

chrome.runtime.onMessage.addListener((request, sender) => {
  // update badge counter
  if (request.cmd === 'popup-request') {
    const tabId = sender.tab.id;
    config.get(['badge']).then(({badge}) => {
      if (badge) {
        chrome.browserAction.getBadgeText({tabId}, text => {
          text = text ? parseInt(text) : 0;
          text = String(text + 1);
          chrome.browserAction.setBadgeText({
            tabId,
            text
          });
        });
      }
    });
  }
  else if (request.cmd === 'state') {
    if (sender.tab) {
      config.get(['enabled']).then(({enabled}) => {
        let state = 4;
        if (enabled && request.active) {
          state = 1;
        }
        else if (enabled && request.active === false) {
          state = 2;
        }
        else if (enabled === false && request.active === false) {
          state = 3;
        }
        const path = {
          16: 'data/icons/state/' + state + '/16.png',
          32: 'data/icons/state/' + state + '/32.png'
        };
        chrome.browserAction.setIcon({
          tabId: sender.tab.id,
          path
        });
        chrome.browserAction.setTitle({
          tabId: sender.tab.id,
          title: chrome.i18n.getMessage('bg_msg_state_' + state)
        });
      });
    }
  }
  else if (request.cmd === 'is-active') { // only on CORS sub-frames
    chrome.tabs.executeScript(sender.tab.id, {
      code: 'prefs.enabled'
    }, ar => {
      const lastError = chrome.runtime.lastError;
      if (lastError === undefined) {
        chrome.tabs.executeScript(sender.tab.id, {
          frameId: sender.frameId,
          code: `prefs.enabled = ${ar[0]};`
        });
      }
    });
  }
});
// popup related
chrome.runtime.onMessage.addListener((request, sender) => {
  // bouncing back to ui.js; since ui.js is loaded on its frame, we need to send the message to all frames
  if (request.cmd === 'popup-request') {
    config.get(['silent', 'issue']).then(prefs => {
      if (prefs.issue === false) {
        return;
      }
      const {hostname} = new URL(sender.tab.url);
      if (prefs.silent.indexOf(hostname) === -1) {
        chrome.tabs.sendMessage(sender.tab.id, Object.assign(request, {
          frameId: sender.frameId
        }));
      }
    });
  }
  // popup is accepted
  else if (request.cmd === 'popup-accepted') {
    if (request.url.startsWith('http') || request.url.startsWith('ftp')) {
      config.get(['simulate-allow']).then(prefs => {
        if (prefs['simulate-allow'] && request.sameContext !== true) {
          chrome.tabs.create({
            url: request.url,
            openerTabId: sender.tab.id
          });
        }
        else {
          chrome.tabs.sendMessage(sender.tab.id, request, {
            frameId: request.frameId
          });
        }
      });
    }
    else {
      chrome.tabs.sendMessage(sender.tab.id, request, {
        frameId: request.frameId
      });
    }
  }
  // open a new tab or redirect current tab
  else if (request.cmd === 'popup-redirect' || request.cmd === 'open-tab') {
    const url = request.url;
    // validating request before proceeding
    if (url.startsWith('http') || url.startsWith('ftp') || url === 'about:blank') {
      if (request.cmd === 'popup-redirect') {
        // make sure redirect prevent is off (this needs {frameId: 1} when Edge supports it)
        chrome.tabs.sendMessage(sender.tab.id, {
          cmd: 'release-beforeunload'
        }, () => {
          chrome.tabs.update(sender.tab.id, {
            url
          });
        });
      }
      else {
        chrome.tabs.create({
          url,
          active: false,
          index: sender.tab.index + 1
        });
      }
    }
  }
  else if (request.cmd === 'white-list') {
    config.get(['whitelist-mode', 'top-hosts', 'popup-hosts']).then(prefs => {
      const mode = prefs['whitelist-mode'];
      const {hostname} = new URL(mode === 'popup-hosts' ? request.url : request.parent);
      prefs[mode].push(hostname);
      prefs[mode] = prefs[mode].filter((h, i, l) => l.indexOf(h) === i);
      chrome.storage.local.set({
        [mode]: prefs[mode]
      });
      if (mode === 'top-hosts') {
        chrome.tabs.executeScript(sender.tab.id, {
          allFrames: true,
          code: `
            if (typeof prefs !== 'undefined') {
              prefs.enabled = false
            }
          `
        });
      }
    });
  }
});
// wot
chrome.runtime.onMessage.addListener((request, sender, response) => {
  if (request.cmd === 'wot') {
    const c = cookie.get(request.hostname);
    if (c) {
      return response(Number(c));
    }
    const key = atob('MjRmMTIwNDVlYjQ3Y2NmYzJkODdmNWQxOWM1MzY5NmIyZThlMjYwMg==');
    fetch(`http://api.mywot.com/0.4/public_link_json2?hosts=${request.hostname}/&key=${key}`)
      .then(r => r.json()).then(r => {
        let reputation = -1;
        try {
          reputation = r[request.hostname][0][0];
        }
        catch (e) {}
        if (r) {
          cookie.set(request.hostname, reputation);
        }
        response(reputation);
      }).catch(() => response());
    return true;
  }
});

if (chrome.commands) {
  chrome.commands.onCommand.addListener(cmd => chrome.tabs.query({
    active: true,
    currentWindow: true
  }, tabs => tabs && tabs[0] && chrome.tabs.sendMessage(tabs[0].id, {
    cmd
  })));
}

// browser action
const action = async () => {
  const prefs = await config.get(['enabled']);
  const path = {
    16: 'data/icons/' + (prefs.enabled ? '' : 'disabled/') + '16.png',
    32: 'data/icons/' + (prefs.enabled ? '' : 'disabled/') + '32.png'
  };
  chrome.browserAction.setIcon({
    path
  });
  // make sure the blocker script is injected (on FF, when disabled, blocker.js is not being injected)
  if (isFirefox) {
    if (prefs.enabled) {
      chrome.tabs.executeScript({
        code: 'typeof prefs'
      }, async a => {
        const lastError = chrome.runtime.lastError;
        if (!lastError && a && a[0] !== 'object') {
          const opts = {
            'matchAboutBlank': true,
            'runAt': 'document_start',
            'allFrames': true
          };
          for (const file of ['actions/enabled.js', 'data/inject/ff.js', 'data/inject/uncode.js', 'data/inject/blocker.js']) {
            try {
              await browser.tabs.executeScript({...opts, file});
            }
            catch (e) {}
          }
        }
      });
    }
  }
};

// on startup (run once)
{
  const once = () => {
    // icon
    action();
    // badge color
    config.get(['badge-color']).then(prefs => chrome.browserAction.setBadgeBackgroundColor({
      color: prefs['badge-color']
    }));
  };
  chrome.runtime.onInstalled.addListener(once);
  chrome.runtime.onStartup.addListener(once);
}

/* enabled */
if (isFirefox) {
  let ps = [];
  const disable = () => {
    if (ps.length) {
      ps.forEach(p => p.unregister());
      ps = [];
    }
  };
  const enable = async () => {
    disable();
    const prefs = await config.get(['blacklist', 'top-hosts']);
    const opts = {
      'matchAboutBlank': true,
      'matches': ['<all_urls>'],
      'js': [
        {file: 'actions/enabled.js'},
        {file: 'data/inject/ff.js'},
        {file: 'data/inject/uncode.js'},
        {file: 'data/inject/blocker.js'}
      ],
      'runAt': 'document_start',
      'allFrames': true
    };
    // white-list
    if (prefs.blacklist.length === 0) {
      chrome.browserAction.setIcon({
        path: {
          '16': 'data/icons/16.png',
          '32': 'data/icons/32.png'
        }
      });
      chrome.browserAction.setTitle({
        title: chrome.i18n.getMessage('bg_msg_state_1')
      });

      if (prefs['top-hosts'].length) {
        ps.push(await browser.contentScripts.register({
          ...opts,
          'js': [{file: 'actions/disabled.js'}],
          'matches': prefs['top-hosts'].map(h => `*://${h}/*`)
        }));
        ps.push(await browser.contentScripts.register(opts));
      }
      else {
        ps.push(await browser.contentScripts.register(opts));
      }
    }
    else {
      chrome.browserAction.setIcon({
        path: {
          '16': 'data/icons/state/3/16.png',
          '32': 'data/icons/state/3/32.png'
        }
      });
      chrome.browserAction.setTitle({
        title: chrome.i18n.getMessage('bg_msg_state_3')
      });

      ps.push(await browser.contentScripts.register({
        ...opts,
        matches: prefs.blacklist.map(h => `*://${h}/*`)
      }));
    }
  };
  const once = () => chrome.storage.local.get({
    'enabled': true
  }, prefs => prefs.enabled ? enable() : disable());
  once();
  chrome.storage.onChanged.addListener(ps => {
    if (ps['top-hosts'] || ps['blacklist']) {
      once();
    }
    else if (ps.enabled && ps.enabled.newValue !== ps.enabled.oldValue) {
      if (ps.enabled.newValue) {
        enable();
      }
      else if (ps.enabled) {
        disable();
      }
    }
  });
}
else {
  const disable = isEnabled => new Promise(resolve => {
    chrome.declarativeContent.onPageChanged.removeRules(undefined, () => {
      if (isEnabled) {
        return resolve();
      }
      chrome.declarativeContent.onPageChanged.addRules([{
        conditions: [
          new chrome.declarativeContent.PageStateMatcher({
            pageUrl: {
              schemes: ['file', 'http', 'https']
            }
          })
        ],
        actions: [new chrome.declarativeContent.RequestContentScript({
          js: ['actions/disabled.js'],
          allFrames: true,
          matchAboutBlank: true
        })]
      }]);
      resolve();
    });
  });
  const enable = () => disable(true).then(async () => {
    const prefs = await config.get(['blacklist', 'top-hosts']);
    // white-list
    if (prefs['top-hosts'].length) {
      chrome.declarativeContent.onPageChanged.addRules([{
        conditions: prefs['top-hosts'].map(host => new chrome.declarativeContent.PageStateMatcher({
          pageUrl: {
            hostEquals: host
          }
        })),
        actions: [new chrome.declarativeContent.RequestContentScript({
          js: ['actions/disabled.js']
        })]
      }]);
    }
  });
  const once = () => chrome.storage.local.get({
    enabled: true
  }, prefs => prefs.enabled ? enable() : disable(prefs.enabled));
  chrome.runtime.onInstalled.addListener(once);
  chrome.runtime.onStartup.addListener(once);
  chrome.storage.onChanged.addListener(ps => {
    if (ps.enabled && ps.enabled.newValue) {
      enable();
    }
    else if (ps.enabled) {
      disable(false);
    }
    else if (ps['top-hosts'] || ps['blacklist']) {
      once();
    }
  });
}

/* FAQs & Feedback */
{
  const {management, runtime: {onInstalled, setUninstallURL, getManifest}, storage, tabs} = chrome;
  if (navigator.webdriver !== true) {
    const page = getManifest().homepage_url;
    const {name, version} = getManifest();
    onInstalled.addListener(({reason, previousVersion}) => {
      management.getSelf(({installType}) => installType === 'normal' && storage.local.get({
        'faqs': true,
        'last-update': 0
      }, prefs => {
        if (reason === 'install' || (prefs.faqs && reason === 'update')) {
          const doUpdate = (Date.now() - prefs['last-update']) / 1000 / 60 / 60 / 24 > 45;
          if (doUpdate && previousVersion !== version) {
            tabs.query({active: true, currentWindow: true}, tbs => tabs.create({
              url: page + '?version=' + version + (previousVersion ? '&p=' + previousVersion : '') + '&type=' + reason,
              active: reason === 'install',
              ...(tbs && tbs.length && {index: tbs[0].index + 1})
            }));
            storage.local.set({'last-update': Date.now()});
          }
        }
      }));
    });
    setUninstallURL(page + '?rd=feedback&name=' + encodeURIComponent(name) + '&version=' + version);
  }
}



=== File: ./v2/_locales/sv/messages.json ===
----------------------------------------
{
    "app_description": {
        "message": "Strikt blockera alla popup-förfrågningar från alla webbplatser",
        "description": ""
    },
    "context_item1": {
        "message": "Testa din popup-blockerare",
        "description": ""
    },
    "context_item2": {
        "message": "Tillåt den senaste popup-förfrågan",
        "description": ""
    },
    "context_item3": {
        "message": "Neka den senaste popup-förfrågan",
        "description": ""
    },
    "context_item4": {
        "message": "Använd skuggfönster för den här fliken",
        "description": ""
    },
    "context_item5": {
        "message": "Öppna sida med alternativ",
        "description": ""
    },
    "context_item6": {
        "message": "Ignorera popup-aviseringar om möjligt",
        "description": ""
    },
    "options_item1": {
        "message": "Maximalt antal popup-förfrågningar för en enskild sida",
        "description": ""
    },
    "options_item2": {
        "message": "Tid för visning av varje popup (i sekunder)",
        "description": ""
    },
    "options_item3": {
        "message": "Blockera inte popup-förfrågningar från samma ursprung",
        "description": ""
    },
    "options_item5": {
        "message": "Visa det totala antalet blockerade förfrågningar i verktygsfältikonen",
        "description": ""
    },
    "options_item6": {
        "message": "Vitlistans destinationer:",
        "description": ""
    },
    "options_item7": {
        "message": "Vitlistans källor:",
        "description": ""
    },
    "options_item8": {
        "message": "För att den här ändringen ska träda i kraft, uppdatera fliken.",
        "description": ""
    },
    "options_item9": {
        "message": "Nedräkning för att utföra den senaste åtgärden (i sekunder)",
        "description": ""
    },
    "options_item10": {
        "message": "Använd nummer noll för att inaktivera nedräkningen för att utföra föregående åtgärd.",
        "description": ""
    },
    "options_item11": {
        "message": "Kommaseparerad lista över värdnamn som inte kommer att blockeras (dessa värdnamn kan utfärda popup-fönster på vilken webbplats som helst).",
        "description": ""
    },
    "options_item12": {
        "message": "Kommaseparerad lista över värdnamn som popup-blockeraren förlängning är helt inaktiverad på dem.",
        "description": ""
    },
    "options_item13": {
        "message": "Svartlistans källor (omvänd driftläge):",
        "description": ""
    },
    "options_item14": {
        "message": "Kommaseparerad lista över värdnamn som popup-blockeraren bara ska vara aktiv på. Detta innebär att popup-blockeraren är inaktiverad på alla andra värdnamn. För att inaktivera det här läget, rensa den svartlistans inmatning helt.",
        "description": ""
    },
    "options_item15": {
        "message": "Förhindra omdirigering av sidor i 2 sekunder efter att en popup har begärts",
        "description": ""
    },
    "options_item16": {
        "message": "Vissa webbplatser omdirigera användaren till annonssidan om popup-begäran om att visa en annons blockeras. Det här alternativet kan förhindra detta genom att inte tillåta sidomdirigering för den angivna tiden.",
        "description": ""
    },
    "options_item17": {
        "message": "Standardåtgärd vid en popup-förfrågan",
        "description": ""
    },
    "options_item18": {
        "message": "gör ingenting",
        "description": ""
    },
    "options_item19": {
        "message": "neka förfrågan",
        "description": ""
    },
    "options_item20": {
        "message": "öppna i bakgrunden",
        "description": ""
    },
    "options_item21": {
        "message": "omdirigera sida",
        "description": ""
    },
    "options_item22": {
        "message": "Bakgrundsfärg för bricka",
        "description": ""
    },
    "options_item23": {
        "message": "Ignorera popup-aviseringar när det är möjligt (rekommenderas inte)",
        "description": ""
    },
    "options_item24": {
        "message": "Detta kommer att \"ignorera\" eller \"acceptera\" en popup utan användarinteraktion (rekommenderas inte)",
        "description": ""
    },
    "options_item25": {
        "message": "Beskrivningar",
        "description": ""
    },
    "options_item26": {
        "message": "Visa Vanliga frågor-sidan vid uppdateringar",
        "description": ""
    },
    "options_item27": {
        "message": "Vitlistans protokoll:",
        "description": ""
    },
    "options_item28": {
        "message": "De listade protokollen kan öppnas i en ny webbläsarflik. Till exempel lägg till \"magnet:\" så att magnetlänkar öppnas i en webbläsarflik.",
        "description": ""
    },
    "options_item29": {
        "message": "Använd tjänsten Web of Trust (WOT) för att bestämma om popup är från ett betrott värdnamn eller inte",
        "description": ""
    },
    "options_item30": {
        "message": "Simulera knappen \"tillåt\" för att förhindra att webbläsarens interna popup-blockerare blockerar dessa förfrågningar",
        "description": ""
    },
    "options_item31": {
        "message": "När \"lita på\"-knappen trycks, lägg till värdnamn till",
        "description": ""
    },
    "options_item32": {
        "message": "Vitlistans destinationer",
        "description": ""
    },
    "options_item33": {
        "message": "Vitlistans källor",
        "description": ""
    },
    "options_item34": {
        "message": "Svartlista för aviseringar",
        "description": ""
    },
    "options_item35": {
        "message": "Kommaseparerad lista över värdnamn som popup-blockeraren inte kommer att visa aviseringar om en popup begärs",
        "description": ""
    },
    "options_support": {
        "message": "Stöd utvecklingen",
        "description": ""
    },
    "options_import": {
        "message": "Importera",
        "description": ""
    },
    "options_export": {
        "message": "Exportera",
        "description": ""
    },
    "options_reset": {
        "message": "Återställ till standardvärden",
        "description": ""
    },
    "options_save": {
        "message": "Spara",
        "description": ""
    },
    "options_msg": {
        "message": "Alternativen sparas",
        "description": ""
    },
    "ui_msg": {
        "message": "Popup begärs för",
        "description": ""
    },
    "ui_button_allow": {
        "message": "Tillåt den här popupen",
        "description": ""
    },
    "ui_button_allow_value": {
        "message": "tillåt",
        "description": ""
    },
    "ui_button_redirect": {
        "message": "Omdirigera aktuell webbplats till den nya destinationen istället för att öppna den i en ny flik eller popup",
        "description": ""
    },
    "ui_button_redirect_value": {
        "message": "omdirigera",
        "description": ""
    },
    "ui_button_background": {
        "message": "Öppna länken i en bakgrundsflik",
        "description": ""
    },
    "ui_button_background_value": {
        "message": "bakgrund",
        "description": ""
    },
    "ui_button_deny": {
        "message": "Avvisa popupen eller fliköppningen",
        "description": ""
    },
    "ui_button_deny_value": {
        "message": "neka",
        "description": ""
    },
    "ui_button_trust": {
        "message": "Vitlista den här domänen för att öppna popup-fönster",
        "description": ""
    },
    "ui_button_trust_value": {
        "message": "lita på",
        "description": ""
    },
    "bg_msg_state_1": {
        "message": "Popup Blocker (strikt) är globalt aktiverad och skyddar denna flik",
        "description": ""
    },
    "bg_msg_state_2": {
        "message": "Popup Blocker (strikt) är globalt aktiverad men skyddar inte denna flik",
        "description": ""
    },
    "bg_msg_state_3": {
        "message": "Popup Blocker (strikt) är globalt inaktiverad och skyddar inte denna flik",
        "description": ""
    },
    "bg_msg_state_4": {
        "message": "Popup Blocker (strikt) är globalt inaktiverad men skyddar denna flik",
        "description": ""
    }
}


=== File: ./v2/_locales/pt_BR/messages.json ===
----------------------------------------
{
    "app_description": {
        "message": "Estritamente bloquear todos pedidos de pop-up de qualquer site",
        "description": ""
    },
    "context_item2": {
        "message": "Permitir o último pedido de pop-up",
        "description": ""
    },
    "context_item3": {
        "message": "Negar o último pedido de pop-up",
        "description": ""
    },
    "options_item1": {
        "message": "Número máximo de solicitações de pop-up para uma única página",
        "description": ""
    },
    "options_item2": {
        "message": "Tempo limite para exibição de cada pop-up (em segundos)",
        "description": ""
    },
    "options_item3": {
        "message": "Não bloqueie solicitações pop-up da mesma origem",
        "description": ""
    },
    "options_item5": {
        "message": "Exibir o número total de solicitações bloqueadas no ícone da barra de ferramentas",
        "description": ""
    },
    "options_item6": {
        "message": "Destinos da lista branca:",
        "description": ""
    },
    "options_item7": {
        "message": "Fontes da lista branca:",
        "description": ""
    },
    "options_item8": {
        "message": "Pra essa mudança fazer efeito, atualize a aba.",
        "description": ""
    },
    "options_item9": {
        "message": "Contagem regressiva para executar a última ação (em segundos)",
        "description": ""
    },
    "options_item10": {
        "message": "Use o número zero para desativar a contagem regressiva para executar a ação anterior.",
        "description": ""
    },
    "options_item11": {
        "message": "Listas de hostnames separados por vírgula que não serão bloqueados (esses hostnames podem emitir pop-ups em qualquer site).",
        "description": ""
    },
    "options_item12": {
        "message": "Lista de hostnames separadas por vírgula que a extensão do bloqueador de pop-ups está completamente desativada.",
        "description": ""
    },
    "options_item13": {
        "message": "Fontes da lista negra (modo de operação reversa):",
        "description": ""
    },
    "options_item14": {
        "message": "Lista de hostnames separada por vírgula que o bloqueador de pop-ups apenas deve estar ativo. Isso significa que o bloqueador de pop-ups está desativado em TODOS os outros hostnames. Para desativar este modo, limpe completamente a entrada da lista negra.",
        "description": ""
    },
    "options_item15": {
        "message": "Previne o redirecionamento de página por 2 segundos após a solicitação de um pop-up",
        "description": ""
    },
    "options_item16": {
        "message": "Alguns sites redirecionam o usuário para a página de anúncio se a solicitação pop-up para exibir um anúncio estiver bloqueada. Essa opção pode evitar isso, não permitindo o redirecionamento da página pelo tempo especificado.",
        "description": ""
    },
    "options_item17": {
        "message": "Ação padrão quando um pop-up é solicitado",
        "description": ""
    },
    "options_item18": {
        "message": "Não fazer nada",
        "description": ""
    },
    "options_item19": {
        "message": "Negar solicitação",
        "description": ""
    },
    "options_item20": {
        "message": "Abrir em segundo plano",
        "description": ""
    },
    "options_item21": {
        "message": "Página de redirecionamento",
        "description": ""
    },
    "options_item22": {
        "message": "Cor do emblema de contagem",
        "description": ""
    },
    "options_item23": {
        "message": "Ignore a notificação pop-up quando possível (não recomendado)",
        "description": ""
    },
    "options_item24": {
        "message": "Isso irá \"ignorar\" ou \"aceitar\" um pop-up sem a interação do usuário (não recomendado)",
        "description": ""
    },
    "options_item25": {
        "message": "Descrições",
        "description": ""
    },
    "options_item26": {
        "message": "Exibir página de FAQs nas atualizações",
        "description": ""
    },
    "options_item27": {
        "message": "Protocolos na lista branca:",
        "description": ""
    },
    "options_item28": {
        "message": "Os protocolos listados a seguir podem ser abertos em uma nova aba do navegador. Para permitir a abertura de links magnéticos em uma nova aba adicione 'magnet:' na lista.",
        "description": ""
    },
    "options_item29": {
        "message": "Usar o serviço Web of Trust (WOT) pra decidir se as pop-ups são de um site confiável ou não",
        "description": ""
    },
    "options_item30": {
        "message": "Simular o botão 'Permitir' para previnir que o bloqueador interno de pop-up do seu navegador bloqueie esses pedidos",
        "description": ""
    },
    "options_item31": {
        "message": "Quando o botão \"Confiar\" é apertado, adicione o hostname para",
        "description": ""
    },
    "options_item32": {
        "message": "Destinos da lista branca:",
        "description": ""
    },
    "options_item33": {
        "message": "Fontes da lista branca:",
        "description": ""
    },
    "options_item34": {
        "message": "Lista negra de notificação",
        "description": ""
    },
    "options_item35": {
        "message": "Lista de hostnames separada por vírgula que o bloqueador de pop-ups não exibirá notificação se um pop-up for solicitado",
        "description": ""
    },
    "options_item36": {
        "message": "Habilitar detecção agressiva de IFrame estático",
        "description": ""
    },
    "options_item37": {
        "message": "Quando este modo está ativado, a extensão instala um observador de mutação para monitorar IFrames estáticos com atributos 'JavaScript:' src. Isso aumenta o poder de bloqueio, mas tem desvantagens de desempenho.",
        "description": ""
    },
    "options_item38": {
        "message": "Este recurso está obsoleto! Se você não quiser que esta extensão bloqueie páginas globalmente, clique com o botão direito do mouse no botão de ação e limite o acesso a sites específicos a partir do item de menu de contexto \"Isso pode ler e alterar os dados do site\".",
        "description": ""
    },
    "options_support": {
        "message": "Apoie o desinvolvimento",
        "description": ""
    },
    "options_import": {
        "message": "Importar",
        "description": ""
    },
    "options_export": {
        "message": "Exportar",
        "description": ""
    },
    "options_reset": {
        "message": "Resetar ao padrão",
        "description": ""
    },
    "options_save": {
        "message": "Salvar",
        "description": ""
    },
    "options_msg": {
        "message": "As opções foram salvas",
        "description": ""
    },
    "options_review": {
        "message": "Revisão do YouTube",
        "description": ""
    },
    "options_page": {
        "message": "Página de Perguntas Frequentes",
        "description": ""
    },
    "ui_msg": {
        "message": "O pop-up foi solicitado por",
        "description": ""
    },
    "ui_button_allow": {
        "message": "Permitir este pop-up",
        "description": ""
    },
    "ui_button_allow_value": {
        "message": "Permitir",
        "description": ""
    },
    "ui_button_redirect": {
        "message": "Redirecione a página atual para o novo destino em vez de abri-la em uma nova guia ou pop-up",
        "description": ""
    },
    "ui_button_redirect_value": {
        "message": "Redirecionar",
        "description": ""
    },
    "ui_button_background": {
        "message": "Abra o link em uma guia em segundo plano",
        "description": ""
    },
    "ui_button_background_value": {
        "message": "Segundo plano",
        "description": ""
    },
    "ui_button_deny": {
        "message": "Recusar a abertura do pop-up ou da guia",
        "description": ""
    },
    "ui_button_deny_value": {
        "message": "Negar",
        "description": ""
    },
    "ui_button_trust": {
        "message": "Permitir este domínio abrir pop-ups",
        "description": ""
    },
    "ui_button_trust_value": {
        "message": "Confiar",
        "description": ""
    },
    "bg_msg_state_1": {
        "message": "Popup Blocker (strict) está globalmente habilitado e protege esta aba",
        "description": ""
    },
    "bg_msg_state_2": {
        "message": "Popup Blocker (strict) está ativado globalmente, mas não protege esta aba",
        "description": ""
    },
    "bg_msg_state_3": {
        "message": "Popup Blocker (strict) está desabilitado globalmente e não protege esta aba",
        "description": ""
    },
    "bg_msg_state_4": {
        "message": "Popup Blocker (strict) está globalmente desativado, mas protege esta aba",
        "description": ""
    },
    "pp_enabled_g": {
        "message": "Habilitado (Global)",
        "description": ""
    },
    "pp_enabled_c": {
        "message": "Habilitado (Este nome de host)",
        "description": ""
    },
    "pp_silent": {
        "message": "Exibir Notificações",
        "description": ""
    },
    "pp_ignore": {
        "message": "Ignorar quando Possível",
        "description": ""
    },
    "pp_last_request": {
        "message": "Última Solicitação",
        "description": ""
    },
    "pp_test": {
        "message": "Testar Bloqueador",
        "description": ""
    },
    "pp_homepage": {
        "message": "Página Inicial",
        "description": ""
    },
    "pp_options": {
        "message": "Opções",
        "description": ""
    },
    "pp_shadow": {
        "message": "Usar Sombra",
        "description": ""
    },
    "pp_allow": {
        "message": "Permitir",
        "description": ""
    },
    "pp_block": {
        "message": "Bloquear",
        "description": ""
    }
}


=== File: ./v2/_locales/it/messages.json ===
----------------------------------------
{
    "app_description": {
        "message": "Blocca tutti i popup di ogni sito",
        "description": ""
    },
    "context_item1": {
        "message": "Verifica il tuo blocco di popup",
        "description": ""
    },
    "context_item2": {
        "message": "Permetti l'ultima richiesta di popup",
        "description": ""
    },
    "context_item3": {
        "message": "Rifiuta l'ultima richiesta di popup",
        "description": ""
    },
    "context_item4": {
        "message": "Utilizza una finestra shadow per questo tab",
        "description": ""
    },
    "context_item5": {
        "message": "Apri la pagina delle impostazioni",
        "description": ""
    },
    "context_item6": {
        "message": "Ignora le notifiche di popup se possibile",
        "description": ""
    },
    "options_item1": {
        "message": "Numero massimo di richieste di popup per una singola pagina",
        "description": ""
    },
    "options_item2": {
        "message": "Tempo per mostrare ogni popup (in secondi)",
        "description": ""
    },
    "options_item3": {
        "message": "Non bloccare i popup che hanno la stessa origine",
        "description": ""
    },
    "options_item5": {
        "message": "Mostra il numero di richieste bloccate nell'icona nella barra degli strumenti",
        "description": ""
    },
    "options_item6": {
        "message": "Destinazioni in whitelist:",
        "description": ""
    },
    "options_item7": {
        "message": "Fonti in whitelist:",
        "description": ""
    },
    "options_item8": {
        "message": "Perché questi cambiamenti abbiano effetto, aggiornare il tab.",
        "description": ""
    },
    "options_item9": {
        "message": "Countdown per eseguire l'ultima azione (in secondi)",
        "description": ""
    },
    "options_item10": {
        "message": "Usa il numero zero per disabilitare il countdown per eseguire l'azione precedente.",
        "description": ""
    },
    "options_item11": {
        "message": "Elenco separato da virgola dei domini che non saranno bloccati (questi domini potranno causare popup su ogni sito).",
        "description": ""
    },
    "options_item12": {
        "message": "Elenco separato da virgola dei domini in cui l'estensione per bloccare i popup sarà completamente disabilitata.",
        "description": ""
    },
    "options_item13": {
        "message": "Fonti in blacklist (modalità di funzionamento inverso):",
        "description": ""
    },
    "options_item14": {
        "message": "Elenco separato da virgola dei soli domini in cui il blocco dei popup sarà attivo. Questo significa che il blocco dei popup sarà disabilitato in TUTTI gli altri domini. Per disabilitare questa modalità, svuotare completamente il campo della blacklist.",
        "description": ""
    },
    "options_item15": {
        "message": "Impedire il redirect di una pagina per 2 secondi dopo che viene richiesto un popup",
        "description": ""
    },
    "options_item16": {
        "message": "Alcuni siti redirezionano l'utente a una pagina pubblicitaria se il popup che mostra una pubblicità viene bloccato. Questa opzioni evita questo non permettendo il redirect per un certo periodo di tempo.",
        "description": ""
    },
    "options_item17": {
        "message": "Azione di default quando viene richiesto un popup",
        "description": ""
    },
    "options_item18": {
        "message": "non fare niente",
        "description": ""
    },
    "options_item19": {
        "message": "nega richiesta",
        "description": ""
    },
    "options_item20": {
        "message": "apri in background",
        "description": ""
    },
    "options_item21": {
        "message": "pagina di redirect",
        "description": ""
    },
    "options_item22": {
        "message": "Colore di sfondo del badge",
        "description": ""
    },
    "options_item23": {
        "message": "Ignora le notifiche di popup quando possibile (non raccomandato)",
        "description": ""
    },
    "options_item24": {
        "message": "Questo \"ignorerà\" o \"accetterà\" un popup senza l'interazione dell'utente (non raccomandato)",
        "description": ""
    },
    "options_item25": {
        "message": "Descrizioni",
        "description": ""
    },
    "options_item26": {
        "message": "Mostra la pagina delle FAQ dopo l'aggiornamento",
        "description": ""
    },
    "options_item27": {
        "message": "Protocolli in whitelist:",
        "description": ""
    },
    "options_item28": {
        "message": "I protocolli elencati possono essere aperti un nuovo tab del browser. Per esempio,  aggiungi \"magnet:\" per permettere ai link magnet di essere aperti un un tab del browser.",
        "description": ""
    },
    "options_item29": {
        "message": "Usa il servizio di Web of Trust (WOT) per decidere se un popup arriva da un dominio fidato o meno.",
        "description": ""
    },
    "options_item30": {
        "message": "Simulare il bottone di \"permesso\" per prevenire al blocco dei popup del browser di bloccare queste richieste.",
        "description": ""
    },
    "options_item31": {
        "message": "Quando il bottone \"fidati\" viene premuto, aggiungere il dominio a",
        "description": ""
    },
    "options_item32": {
        "message": "Destinazioni in whitelist",
        "description": ""
    },
    "options_item33": {
        "message": "Fonti in whitelist",
        "description": ""
    },
    "options_item34": {
        "message": "Blacklist delle notifiche",
        "description": ""
    },
    "options_item35": {
        "message": "Elenco separato da virgola dei domini per cui il blocco dei popup non mostrerà notifiche quando ne verrà richiesto uno.",
        "description": ""
    },
    "options_support": {
        "message": "Supporto per lo sviluppo",
        "description": ""
    },
    "options_import": {
        "message": "Importa",
        "description": ""
    },
    "options_export": {
        "message": "Esporta",
        "description": ""
    },
    "options_reset": {
        "message": "Resetta alle impostazioni iniziali",
        "description": ""
    },
    "options_save": {
        "message": "Salva",
        "description": ""
    },
    "options_msg": {
        "message": "Le opzioni sono salvate",
        "description": ""
    },
    "ui_msg": {
        "message": "Il popup è richiesto per",
        "description": ""
    },
    "ui_button_allow": {
        "message": "Permetti questo popup",
        "description": ""
    },
    "ui_button_allow_value": {
        "message": "permetti",
        "description": ""
    },
    "ui_button_redirect": {
        "message": "Redireziona la pagina corrente alla nuova destinazione invece di aprirla in un nuovo tab o in un popup",
        "description": ""
    },
    "ui_button_redirect_value": {
        "message": "redirect",
        "description": ""
    },
    "ui_button_background": {
        "message": "Apri il link in un tab in background",
        "description": ""
    },
    "ui_button_background_value": {
        "message": "background",
        "description": ""
    },
    "ui_button_deny": {
        "message": "Rifiuta il popup o l'apertura del tab",
        "description": ""
    },
    "ui_button_deny_value": {
        "message": "rifiuta",
        "description": ""
    },
    "ui_button_trust": {
        "message": "Metti in whitelist questo dominio in modo che possa aprire i popup",
        "description": ""
    },
    "ui_button_trust_value": {
        "message": "fidati",
        "description": ""
    },
    "bg_msg_state_1": {
        "message": "Popup Blocker (strict) è abilitato globalmente e protegge questo tab",
        "description": ""
    },
    "bg_msg_state_2": {
        "message": "Popup Blocker (strict) è abilitato globalmente, ma non protegge questo tab",
        "description": ""
    },
    "bg_msg_state_3": {
        "message": "Popup Blocker (strict) è disabilitato globalmente e non protegge questo tab",
        "description": ""
    },
    "bg_msg_state_4": {
        "message": "Popup Blocker (strict) è disabilitato globalmente, ma protegge questo tab",
        "description": ""
    }
}


=== File: ./v2/_locales/zh_CN/messages.json ===
----------------------------------------
{
  "app_description": {
    "message": "严格拦截任何网站的所有弹窗请求"
  },
  "context_item1": {
    "message": "测试您的弹窗拦截器"
  },
  "context_item2": {
    "message": "允许最后的弹窗请求"
  },
  "context_item3": {
    "message": "拒绝最后的弹窗请求"
  },
  "context_item4": {
    "message": "在弹出请求上创建阴影窗口"
  },
  "options_item1": {
    "message": "单个页面最多请求多少弹窗"
  },
  "options_item2": {
    "message": "每个弹窗请求的显示超时（秒）"
  },
  "options_item3": {
    "message": "不拦截同源的弹窗请求"
  },
  "options_item4": {
    "message": "阻止在新标签页打开链接"
  },
  "options_item5": {
    "message": "工具栏图标上显示已拦截请求总量"
  },
  "options_item6": {
    "message": "白名单目的地："
  },
  "options_item7": {
    "message": "白名单源网站："
  },
  "options_item8": {
    "message": "需要刷新标签页"
  },
  "options_item9": {
    "message": "执行上次动作的倒计时（秒）"
  },
  "options_item10": {
    "message": "使用 0 禁用倒计时"
  },
  "options_item11": {
    "message": "逗号分隔不拦截的域名列表（任何网站都可以弹出这些域的窗口）"
  },
  "options_item12": {
    "message": "逗号分隔不处理的域名列表（弹窗拦截器不在这些域上运行）"
  },
  "options_item13": {
    "message": "黑名单源网站："
  },
  "options_item14": {
    "message": "逗号分隔域名列表，弹窗拦截器只在这些域上显示。这意味着其他域上不使用弹窗拦截器。"
  },
  "options_item15": {
    "message": "一个弹窗请求后，阻止页面在 2 秒内重定向"
  },
  "options_item16": {
    "message": "在某些网站上，如果弹窗广告被拦截，则页面被重定向到另一页面。此选项可以在重定向前发出提醒，您可阻止此操作。"
  },
  "options_item17": {
    "message": "弹窗请求时的默认操作"
  },
  "options_item18": {
    "message": "无动作"
  },
  "options_item19": {
    "message": "拒绝请求"
  },
  "options_item20": {
    "message": "在后台打开"
  },
  "options_item21": {
    "message": "重定向页面"
  },
  "options_item22": {
    "message": "徽章背景色"
  },
  "options_item23": {
    "message": "可能时忽略弹窗通知（不推荐）"
  },
  "options_item24": {
    "message": "没有用户交互时，这将“忽略”或“接受”一个弹窗（不推荐）"
  },
  "options_item25": {
    "message": "说明"
  },
  "options_item26": {
    "message": "更新后打开 FAQ 页面"
  },
  "options_save": {
    "message": "保存设置"
  },
  "options_msg": {
    "message": "选项已保存"
  }
}



=== File: ./v2/_locales/ar/messages.json ===
----------------------------------------
{
    "app_description": {
        "message": "حظر جميع النوافذ المنبثقه من أي موقع",
        "description": ""
    },
    "context_item1": {
        "message": "اختبر حظر النوافذ المنبثقه",
        "description": ""
    },
    "context_item2": {
        "message": "السماح لآخر طلب نافذه منبثقه بالظهور",
        "description": ""
    },
    "context_item3": {
        "message": "حظر آخر طلب للنافذه المنبثقه",
        "description": ""
    },
    "context_item4": {
        "message": "استخدم ظلال النوافذ للصفحه الحاليه",
        "description": ""
    },
    "context_item5": {
        "message": "فتح صفحه الخيارات",
        "description": ""
    },
    "context_item6": {
        "message": "تجاهل التنبيهات المنبثقه اذا امكن ",
        "description": ""
    },
    "options_item1": {
        "message": "اقصي عدد لطلبات النوافذ المنبثقه للثفحه الواحده",
        "description": ""
    },
    "options_item2": {
        "message": "الوقت اللازم لظهور كل نافذه منبثقه (بالثواني)",
        "description": ""
    },
    "options_item3": {
        "message": "لا تقم بحظر طلبات النوافذ المنبثقه لنفس الصفحات الاساسيه",
        "description": ""
    },
    "options_item5": {
        "message": "اظهار اجمالي عدد الطلبات المحظوره علي اايقونه في شريط الادوات",
        "description": ""
    },
    "options_item6": {
        "message": "وجه قائمه السماح:",
        "description": ""
    },
    "options_item7": {
        "message": "مصادر قائمه السماح:",
        "description": ""
    },
    "options_item8": {
        "message": "لتطبيق التغييرات عليك بتحديث الصفحه",
        "description": ""
    },
    "options_item9": {
        "message": "العد التنازلي لتطبيق اخر حدث (بالثواني)",
        "description": ""
    },
    "options_item10": {
        "message": "استخدم (الصفر) لتعطيل العد التنازلي لتطبيق اخر حدث",
        "description": ""
    },
    "options_item11": {
        "message": "(,)للفصل بين المواقع التي تريد عدم عمل حظر لها والتي تتسبب في حدوث مشاكل (علي كل المواقع )",
        "description": ""
    },
    "options_item12": {
        "message": "(,)للفصل بين المواقع التي تريد  عمل حظر لها بالكامل",
        "description": ""
    },
    "options_item13": {
        "message": "مصادر القائمه السوداء (وضع العمليه المعكوسه)",
        "description": ""
    },
    "options_item14": {
        "message": "(,)للفصل بين المواقع التي تريد ان تعمل عليهم فقط مع العلم انها ستكون معطله علي باقي المواقع لتعطيل هذا الوضع قم بتظيف القائمه السوداء بالكامل",
        "description": ""
    },
    "options_item15": {
        "message": "منع الصفحه من الانتقال التلقائي ل 2 (ثانيه)بعد الطلب المنبثق",
        "description": ""
    },
    "options_item16": {
        "message": "بعض المواقع توجه المستخدم لصفحات اعلانات .هذا الخيار يمنع المواقع من عمل ذلك لوقت محدد.",
        "description": ""
    },
    "options_item17": {
        "message": "الحدث الافتراضي عند ظهور نافذه منبثقه",
        "description": ""
    },
    "options_item18": {
        "message": "لا تفعل شئ",
        "description": ""
    },
    "options_item19": {
        "message": "حظر الطلب",
        "description": ""
    },
    "options_item20": {
        "message": "الفتح في الخلفيه",
        "description": ""
    },
    "options_item21": {
        "message": "توجيه الصفحه",
        "description": ""
    },
    "options_item22": {
        "message": "تمميز background-color",
        "description": ""
    },
    "options_item23": {
        "message": "تجاهل النوافذ المنبثقه اذا امكن (غير موصي به)",
        "description": ""
    },
    "options_item24": {
        "message": "هذ الخيار ل \"تجاهل\" او \"الموافقه\" للنوافقذ المنبثقه بدون تدخل المستخدم ( غير موصي به)",
        "description": ""
    },
    "options_item25": {
        "message": "الوصف",
        "description": ""
    },
    "options_item26": {
        "message": "اظهار صفحه الاسئله الشائعه ( FAQs) عند التحديث",
        "description": ""
    },
    "options_item27": {
        "message": "بروتوكولات قائمه السماح:",
        "description": ""
    },
    "options_item28": {
        "message": "قائمه البروتوكولات يمكن فتحها في نافذه تصفح جديده .وللاضافه السريعه قم باضافه 'magnet:' للسماح برورابط الملتقطه يتم فتحها في نافذه جديده",
        "description": ""
    },
    "options_item29": {
        "message": "استخدام خدمه الثقه (WOT) لتقرر السماح او لا  بالنوافذ المنبثقه اعتمادا علي  المواقع الموثوقه والامنه واتخاذ القرار المناسب",
        "description": ""
    },
    "options_item30": {
        "message": "محاكاه زر السماح 'allow' لمنع مانع النوافذ المنبثقه  الداخلي للمتصفح من حظر هذه الطلبات ",
        "description": ""
    },
    "options_item31": {
        "message": "عندما ضغط زر السماح 'trust' اضافه الموقع الي ",
        "description": ""
    },
    "options_item32": {
        "message": "وجهة قائمه السماح",
        "description": ""
    },
    "options_item33": {
        "message": "مصادر قائمه السماح",
        "description": ""
    },
    "options_item34": {
        "message": "تنبيهات قائمه الحظر",
        "description": ""
    },
    "options_item35": {
        "message": "استخدم (,)للفصل بين المواقع التي تريد الغاء التبيه لها اذا تم اظهار نافذه منبثقه",
        "description": ""
    },
    "options_support": {
        "message": "دعم المطور",
        "description": ""
    },
    "options_import": {
        "message": "استيراد",
        "description": ""
    },
    "options_export": {
        "message": "تصدير",
        "description": ""
    },
    "options_reset": {
        "message": "استعاده الافتراضيه",
        "description": ""
    },
    "options_save": {
        "message": "حفظ",
        "description": ""
    },
    "options_msg": {
        "message": "الخيارات التي تم حفظها",
        "description": ""
    },
    "ui_msg": {
        "message": "الطلب المنبثق ل ",
        "description": ""
    },
    "ui_button_allow": {
        "message": "السماح لهذا",
        "description": ""
    },
    "ui_button_allow_value": {
        "message": "اسمح",
        "description": ""
    },
    "ui_button_redirect": {
        "message": "توجيه هذه الصفحه الحاليه الي وجهة جديده بدلا من فتها في نافذه تصفح جديده",
        "description": ""
    },
    "ui_button_redirect_value": {
        "message": "إعادة توجيه",
        "description": ""
    },
    "ui_button_background": {
        "message": "فتح الرابط في نافذه جديده في الخلفيه",
        "description": ""
    },
    "ui_button_background_value": {
        "message": "في الخلفية",
        "description": ""
    },
    "ui_button_deny": {
        "message": "حظر النافذه المنبثقه او الصفحه الجديده من الفتح",
        "description": ""
    },
    "ui_button_deny_value": {
        "message": "رفض",
        "description": ""
    },
    "ui_button_trust": {
        "message": "اضافه هذا النطاق الي قائمه النوافذ المنبثقه المسموح بها",
        "description": ""
    },
    "ui_button_trust_value": {
        "message": "وثوق",
        "description": ""
    },
    "bg_msg_state_1": {
        "message": "مانع النوافذ المنبثقة مفعل بشكل عام ويحمي هذا التبويب",
        "description": ""
    },
    "bg_msg_state_2": {
        "message": "مانع النوافذ المنبثقة مفعل بشكل عام ولكن لا يحمي هذا التبويب",
        "description": ""
    },
    "bg_msg_state_3": {
        "message": "مانع النوافذ المنبثقة معطل بشكل عام ولا يحمي هذا التبويب",
        "description": ""
    },
    "bg_msg_state_4": {
        "message": "مانع النوافذ المنبثقة معطل بشكل عام ولكن يحمي هذا التبويب",
        "description": ""
    }
}


=== File: ./v2/_locales/de/messages.json ===
----------------------------------------
{
    "app_description": {
        "message": "Strikt alle Pop-up-Anfragen von jeder Webseite blockieren",
        "description": ""
    },
    "context_item1": {
        "message": "Pop-up-Blocker testen",
        "description": ""
    },
    "context_item2": {
        "message": "Letztes Pop-up zulassen",
        "description": ""
    },
    "context_item3": {
        "message": "Letztes Pop-up blockieren",
        "description": ""
    },
    "context_item4": {
        "message": "Schattenfenster für diesen Tab verwenden",
        "description": ""
    },
    "context_item5": {
        "message": "Optionen",
        "description": ""
    },
    "context_item6": {
        "message": "Pop-up-Benachrichtigungen wenn möglich unterbinden",
        "description": ""
    },
    "options_item1": {
        "message": "Maximale Anzahl von Pop-up-Anfragen von einer einzelnen Webseite",
        "description": ""
    },
    "options_item2": {
        "message": "Zeitüberschreitung für die Anzeige von Pop-up-Anfragen (in Sekunden)",
        "description": ""
    },
    "options_item3": {
        "message": "Keine Pop-up-Anfragen von der gleichen Quelle blockieren",
        "description": ""
    },
    "options_item5": {
        "message": "Gesamtanzahl der geblockten Pop-ups in der Symbolleiste anzeigen",
        "description": ""
    },
    "options_item6": {
        "message": "Whitelist Ziele:",
        "description": ""
    },
    "options_item7": {
        "message": "Whitelist Quellen:",
        "description": ""
    },
    "options_item8": {
        "message": "Aktualisiere den Tab, um die Änderungen anzuwenden.",
        "description": ""
    },
    "options_item9": {
        "message": "Countdown für das automatische Ausführen der letzten Aktion (in Sekunden)",
        "description": ""
    },
    "options_item10": {
        "message": "Verwende die Zahl 0, um den Countdown für die vorherige Aktion zu deaktivieren.",
        "description": ""
    },
    "options_item11": {
        "message": "Kommagetrennte Liste von Domains, die nicht blockiert werden (Diese Domains können auf jeder Webseite Pop-ups anzeigen)",
        "description": ""
    },
    "options_item12": {
        "message": "Kommagetrennte Liste von Domains, bei denen der Pop-up Blocker vollständig deaktiviert wird.",
        "description": ""
    },
    "options_item13": {
        "message": "Blacklist Quellen (umgekehrte Funktionsweise):",
        "description": ""
    },
    "options_item14": {
        "message": "Kommagetrennte Liste von Domains, auf denen der Pop-up Blocker ausschließlich aktiv sein soll. Dies bedeutet, dass der Pop-up Blocker auf ALLEN anderen Domains deaktiviert ist. Um diesen Modus zu deaktivieren, muss die Blacklist vollständig leer sein.",
        "description": ""
    },
    "options_item15": {
        "message": "Weiterleitungen für 2 Sekunden verhindern, nachdem ein Pop-up aufgerufen wurde",
        "description": ""
    },
    "options_item16": {
        "message": "Einige Webseiten leiten den Benutzer auf eine Werbeseite weiter, falls ein Pop-up blockiert wurde. Diese Einstellung verhindert dies, indem Weiterleitungen für eine kurze Zeit verhindert werden.",
        "description": ""
    },
    "options_item17": {
        "message": "Standardaktion bei einem neuem Pop-up",
        "description": ""
    },
    "options_item18": {
        "message": "Keine Aktion",
        "description": ""
    },
    "options_item19": {
        "message": "Blockieren",
        "description": ""
    },
    "options_item20": {
        "message": "Im Hintergrund öffnen",
        "description": ""
    },
    "options_item21": {
        "message": "Webseite weiterleiten",
        "description": ""
    },
    "options_item22": {
        "message": "Hintergrundfarbe der Benachrichtigung",
        "description": ""
    },
    "options_item23": {
        "message": "Ignoriere Pop-up Benachrichtigungen, falls möglich (nicht empfohlen)",
        "description": ""
    },
    "options_item24": {
        "message": "Dies \"ignoriert\" oder \"akzeptiert\" ein Pop-up ohne Benutzerinteraktion (nicht empfohlen)",
        "description": ""
    },
    "options_item25": {
        "message": "Beschreibungen",
        "description": ""
    },
    "options_item26": {
        "message": "FAQ-Seite bei Aktualisierungen anzeigen",
        "description": ""
    },
    "options_item27": {
        "message": "Whitelist Protokolle:",
        "description": ""
    },
    "options_item28": {
        "message": "Die aufgelisteten Protokolle können in einem neuen Tab im Browser geöffnet werden. Füge zum Beispiel 'magnet:' hinzu, um das Öffnen von magnet Links in einem Tab zu erlauben.",
        "description": ""
    },
    "options_item29": {
        "message": "Web of Trust (WOT) Service verwenden, um ein Pop-up als vertrauenswürdig oder nicht vertrauenswürdig einzustufen",
        "description": ""
    },
    "options_item30": {
        "message": "Simuliere den 'Erlauben' Button, um zu verhindern, dass der integrierte Pop-up Blocker des Browsers diese Anfragen blockiert",
        "description": ""
    },
    "options_item31": {
        "message": "Mit Klick auf 'Vertrauen' wird die Domain hinzugefügt zu",
        "description": ""
    },
    "options_item32": {
        "message": "Whitelist Ziele:",
        "description": ""
    },
    "options_item33": {
        "message": "Whitelist Quellen:",
        "description": ""
    },
    "options_item34": {
        "message": "Blacklist für Benachrichtigungen:",
        "description": ""
    },
    "options_item35": {
        "message": "Kommagetrennte Liste von Domains, bei denen der Pop-up Blocker keine Benachrichtigungen für Pop-ups anzeigt.",
        "description": ""
    },
    "options_support": {
        "message": "Entwicklung unterstützen",
        "description": ""
    },
    "options_import": {
        "message": "Importieren",
        "description": ""
    },
    "options_export": {
        "message": "Exportieren",
        "description": ""
    },
    "options_reset": {
        "message": "Auf Standard zurücksetzen",
        "description": ""
    },
    "options_save": {
        "message": "Speichern",
        "description": ""
    },
    "options_msg": {
        "message": "Einstellungen wurden gespeichert.",
        "description": ""
    },
    "ui_msg": {
        "message": "Pop-up-Anfrage von folgender Webseite",
        "description": ""
    },
    "ui_button_allow": {
        "message": "Dieses Pop-up zulassen",
        "description": ""
    },
    "ui_button_allow_value": {
        "message": "Erlauben",
        "description": ""
    },
    "ui_button_redirect": {
        "message": "Leitet die aktuelle Webseite auf das Ziel weiter, anstatt es in einem neuen Tab oder Pop-up zu öffnen",
        "description": ""
    },
    "ui_button_redirect_value": {
        "message": "Weiterleiten",
        "description": ""
    },
    "ui_button_background": {
        "message": "Öffne den Link in einem Tab im Hintergrund",
        "description": ""
    },
    "ui_button_background_value": {
        "message": "Hintergrund",
        "description": ""
    },
    "ui_button_deny": {
        "message": "Öffnen des Pop-ups oder neuen Tabs blockieren",
        "description": ""
    },
    "ui_button_deny_value": {
        "message": "Ablehnen",
        "description": ""
    },
    "ui_button_trust": {
        "message": "Füge diese Domain zu der Whitelist hinzu, um Pop-ups künftig immer zu erlauben",
        "description": ""
    },
    "ui_button_trust_value": {
        "message": "Vertrauen",
        "description": ""
    },
    "bg_msg_state_1": {
        "message": "Popup Blocker (strict) ist allgemein aktiviert und beschützt diesen Tab.",
        "description": ""
    },
    "bg_msg_state_2": {
        "message": "Popup Blocker (strict) ist allgemein aktiviert, aber beschützt diesen Tab nicht.",
        "description": ""
    },
    "bg_msg_state_3": {
        "message": "Popup Blocker (strict) ist allgemein deaktiviert und beschützt diesen Tab nicht.",
        "description": ""
    },
    "bg_msg_state_4": {
        "message": "Popup Blocker (strict) ist allgemein deaktiviert, aber beschützt diesen Tab.",
        "description": ""
    }
}


=== File: ./v2/_locales/ko/messages.json ===
----------------------------------------
{
    "options_item12": {
        "message": "쉼표로 구분된 팝업이 완벽히 차단된 호스트 이름의 목록",
        "description": ""
    },
    "options_msg": {
        "message": "옵션이 저장 됨",
        "description": ""
    },
    "options_item10": {
        "message": "카운트 다운을 비활성화 하려면 0을 입력",
        "description": ""
    },
    "context_item1": {
        "message": "팝업 차단기 테스트",
        "description": ""
    },
    "options_item3": {
        "message": "동일한 출처의 팝업 차단 요청을 차단하지 않음",
        "description": ""
    },
    "options_item16": {
        "message": "일부 웹 사이트에서 팝업 광고가 차단되면 다른 페이지로 이동하게 됩니다. 이 옵션을 사용하면 다른 페이지로 이동 되기 전에 경고가 발생합니다.",
        "description": ""
    },
    "options_item4": {
        "message": "새 탭에서 여는 링크 열기 차단",
        "description": ""
    },
    "options_item15": {
        "message": "팝업을 요청한 페이지에서 2초간 다른 페이지로 전송 방지",
        "description": ""
    },
    "app_description": {
        "message": "모든 웹 사이트의 팝업 요청을 엄격하게 차단합니다.",
        "description": ""
    },
    "options_item19": {
        "message": "요청 거부",
        "description": ""
    },
    "options_item9": {
        "message": "마지막 작업 수행을 위한 카운트 다운 (초 단위)",
        "description": ""
    },
    "options_item2": {
        "message": "각 팝업의 표시 제한 시간(초 단위)",
        "description": ""
    },
    "options_item7": {
        "message": "화이트 리스트(웹 페이지)",
        "description": ""
    },
    "options_save": {
        "message": "설정 저장",
        "description": ""
    },
    "options_item22": {
        "message": "배지 배경 색",
        "description": ""
    },
    "options_item1": {
        "message": "한 페이지의 최대 팝업 요청 수",
        "description": ""
    },
    "options_item17": {
        "message": "팝업이 요청 될 때의 기본 동작",
        "description": ""
    },
    "options_item14": {
        "message": "140/5000\n쉼표로 구분 된 호스트 차단 목록으로, 팝업 차단기가 활성화되어 있어야 합니다. 즉, 다른 모든 도메인에서 팝업 차단을 사용할 수 없습니다.",
        "description": ""
    },
    "options_item11": {
        "message": "쉼표로 구분된 차단되지 않은 팝업 호스트 이름 목록(이 도메인은 모든 웹 페이지에서 팝업을 생성할 수 있음)",
        "description": ""
    },
    "options_item18": {
        "message": "아무 것도 안 함",
        "description": ""
    },
    "options_item21": {
        "message": "페이지 다시 전송",
        "description": ""
    },
    "options_item8": {
        "message": "탭을 새로 고쳐야 함",
        "description": ""
    },
    "options_item13": {
        "message": "블랙 리스트(웹 페이지)",
        "description": ""
    },
    "options_item5": {
        "message": "도구 모음 아이콘에 모든 차단된 요청의 수를 표시",
        "description": ""
    },
    "options_item6": {
        "message": "화이트 리스트(팝업):",
        "description": ""
    },
    "options_item20": {
        "message": "백그라운드에서 열기",
        "description": ""
    }
}



=== File: ./v2/_locales/fr/messages.json ===
----------------------------------------
{
    "app_description": {
        "message": "Bloquer strictement toutes les demandes de popup provenant de n'importe quel site web",
        "description": ""
    },
    "context_item1": {
        "message": "Testez votre bloqueur de popups",
        "description": ""
    },
    "context_item2": {
        "message": "Autoriser la dernière demande de popup",
        "description": ""
    },
    "context_item3": {
        "message": "Refuser la dernière demande de popup",
        "description": ""
    },
    "context_item4": {
        "message": "Utiliser une fenêtre d'ombre pour cet onglet",
        "description": ""
    },
    "context_item5": {
        "message": "Ouvrir la page des options",
        "description": ""
    },
    "context_item6": {
        "message": "Ignorer la popup si possible",
        "description": ""
    },
    "options_item1": {
        "message": "Nombre maximum de demandes de popup pour une seule page",
        "description": ""
    },
    "options_item2": {
        "message": "Délai d'affichage de chaque popup (en secondes)",
        "description": ""
    },
    "options_item3": {
        "message": "Ne pas bloquer les requêtes pop-up de la même origine",
        "description": ""
    },
    "options_item5": {
        "message": "Afficher le nombre total de demandes bloquées dans l'icône de la barre d'outils",
        "description": ""
    },
    "options_item6": {
        "message": "Destinations de la liste blanche",
        "description": ""
    },
    "options_item7": {
        "message": "Sources de la liste blanche :",
        "description": ""
    },
    "options_item8": {
        "message": "Pour que ce changement prenne effet, rafraîchissez l'onglet.",
        "description": ""
    },
    "options_item9": {
        "message": "Compte à rebours pour l'exécution de la dernière action (en secondes)",
        "description": ""
    },
    "options_item10": {
        "message": "Utilisez un zéro pour désactiver le compte à rebours pour effectuer l'action précédente.",
        "description": ""
    },
    "options_item11": {
        "message": "Liste, séparée par des virgules, des noms d'hôtes qui ne seront pas bloqués (ces noms d'hôtes peuvent afficher des popups sur n'importe quel site web).",
        "description": ""
    },
    "options_item12": {
        "message": "Liste de noms d'hôtes séparés par des virgules sur lesquels l'extension de blocage des pop-ups est complètement désactivée.",
        "description": ""
    },
    "options_item13": {
        "message": "Liste noire des sources (mode de fonctionnement inverse) :",
        "description": ""
    },
    "options_item14": {
        "message": "Liste de noms d'hôtes séparés par des virgules sur lesquels le bloqueur de popups ne doit être actif qu'à leur égard. Cela signifie que le bloqueur de pop-ups est désactivé sur TOUS les autres noms d'hôtes. Pour désactiver ce mode, effacez complètement la liste noire.",
        "description": ""
    },
    "options_item15": {
        "message": "Empêcher la redirection des pages pendant 2 secondes après qu'une popup ai été demandée",
        "description": ""
    },
    "options_item16": {
        "message": "Certains sites web redirigent l'utilisateur vers la page de pub si la demande d'affichage d'une annonce est bloquée. Cette option peut empêcher cela en n'autorisant pas la redirection de la page pendant la durée spécifiée.",
        "description": ""
    },
    "options_item17": {
        "message": "Action par défaut lorsqu'une popup est demandée",
        "description": ""
    },
    "options_item18": {
        "message": "ne rien faire",
        "description": ""
    },
    "options_item19": {
        "message": "refuser la demande",
        "description": ""
    },
    "options_item20": {
        "message": "ouvrir en arrière-plan",
        "description": ""
    },
    "options_item21": {
        "message": "rediriger la page",
        "description": ""
    },
    "options_item22": {
        "message": "Couleur de fond du badge",
        "description": ""
    },
    "options_item23": {
        "message": "Ignorer les notifications pop-up lorsque c'est possible (non recommandé)",
        "description": ""
    },
    "options_item24": {
        "message": "Cela permet \"d'ignorer\" ou \"d'accepter\" un popup sans interaction de l'utilisateur (non recommandé)",
        "description": ""
    },
    "options_item25": {
        "message": "Descriptions",
        "description": ""
    },
    "options_item26": {
        "message": "Afficher la FAQ concernant les mises à jour",
        "description": ""
    },
    "options_item27": {
        "message": "Protocoles de la liste blanche :",
        "description": ""
    },
    "options_item28": {
        "message": "Les protocoles énumérés peuvent être ouverts dans un nouvel onglet du navigateur. Par exemple, ajoutez \"magnet :\" pour permettre l'ouverture des liens magnétiques dans un onglet du navigateur.",
        "description": ""
    },
    "options_item29": {
        "message": "Utiliser le service Web of Trust (WOT) pour décider si la fenêtre contextuelle provient d'un nom d'hôte de confiance ou non",
        "description": ""
    },
    "options_item30": {
        "message": "Simulez le bouton \"autoriser\" pour empêcher le bloqueur de popup interne de votre navigateur de bloquer ces demandes",
        "description": ""
    },
    "options_item31": {
        "message": "Lorsque vous appuyez sur le bouton \" faire confiance \", ajoutez le nom d'hôte à",
        "description": ""
    },
    "options_item32": {
        "message": "Destinations de la liste blanche",
        "description": ""
    },
    "options_item33": {
        "message": "Sources de la liste blanche",
        "description": ""
    },
    "options_item34": {
        "message": "Liste noire de notification",
        "description": ""
    },
    "options_item35": {
        "message": "Liste de noms d'hôtes séparés par des virgules que le bloqueur de popups n'affichera pas si une popup est demandé",
        "description": ""
    },
    "options_support": {
        "message": "Soutenir le développement",
        "description": ""
    },
    "options_import": {
        "message": "Importer",
        "description": ""
    },
    "options_export": {
        "message": "Exporter",
        "description": ""
    },
    "options_reset": {
        "message": "Réinitialisation des paramètres par défaut",
        "description": ""
    },
    "options_save": {
        "message": "Sauvegarder",
        "description": ""
    },
    "options_msg": {
        "message": "Les options sont sauvegardées",
        "description": ""
    },
    "ui_msg": {
        "message": "La popup est demandé pour",
        "description": ""
    },
    "ui_button_allow": {
        "message": "Autoriser cette popup",
        "description": ""
    },
    "ui_button_allow_value": {
        "message": "Autoriser",
        "description": ""
    },
    "ui_button_redirect": {
        "message": "Rediriger la page actuelle vers la nouvelle destination au lieu de l'ouvrir dans un nouvel onglet ou une popup",
        "description": ""
    },
    "ui_button_redirect_value": {
        "message": "rediriger",
        "description": ""
    },
    "ui_button_background": {
        "message": "Ouvrir le lien dans un onglet de fond",
        "description": ""
    },
    "ui_button_background_value": {
        "message": "en arrière-plan",
        "description": ""
    },
    "ui_button_deny": {
        "message": "Refuser l'ouverture de la fenêtre popup ou de l'onglet",
        "description": ""
    },
    "ui_button_deny_value": {
        "message": "interdire",
        "description": ""
    },
    "ui_button_trust": {
        "message": "Inscrivez ce domaine sur la liste blanche pour l'affichage des popups",
        "description": ""
    },
    "ui_button_trust_value": {
        "message": "de confiance",
        "description": ""
    },
    "bg_msg_state_1": {
        "message": "Popup Blocker (strict) est entièrement activé et protège cet onglet",
        "description": ""
    },
    "bg_msg_state_2": {
        "message": "Popup Blocker (strict) est entièrement activé mais ne protège pas cet onglet",
        "description": ""
    },
    "bg_msg_state_3": {
        "message": "Popup Blocker (strict) est entièrement désactivé et ne protège pas cet onglet",
        "description": ""
    },
    "bg_msg_state_4": {
        "message": "Popup Blocker (strict) est entièrement désactivé mais protège cet onglet",
        "description": ""
    }
}


=== File: ./v2/_locales/es/messages.json ===
----------------------------------------
{
    "app_description": {
        "message": "Bloquear estrictamente todas las peticiones de ventanas emergentes de cualquier sitio web",
        "description": ""
    },
    "context_item1": {
        "message": "Probar tu bloqueador de ventanas emergentes",
        "description": ""
    },
    "context_item2": {
        "message": "Permitir la última petición de ventana emergente",
        "description": ""
    },
    "context_item3": {
        "message": "Denegar la última petición de ventana emergente",
        "description": ""
    },
    "context_item4": {
        "message": "Usar sombra de ventana para esta pestaña",
        "description": ""
    },
    "context_item5": {
        "message": "Abrir página de opciones",
        "description": ""
    },
    "context_item6": {
        "message": "Ignorar notificación de ventana emergente si es posible",
        "description": ""
    },
    "options_item1": {
        "message": "Número máximo de peticiones de ventanas emergentes para una página",
        "description": ""
    },
    "options_item2": {
        "message": "Tiempo de espera para mostrar cada ventana emergente (en segundos)",
        "description": ""
    },
    "options_item3": {
        "message": "No bloquear peticiones de ventanas emergentes provenientes del mismo origen",
        "description": ""
    },
    "options_item5": {
        "message": "Mostrar el número total de peticiones bloqueadas en el icono de la barra de herramientas",
        "description": ""
    },
    "options_item6": {
        "message": "Destinos de lista blanca:",
        "description": ""
    },
    "options_item7": {
        "message": "Fuentes de lista blanca:",
        "description": ""
    },
    "options_item8": {
        "message": "Para que este cambio surta efecto, actualiza la pestaña.",
        "description": ""
    },
    "options_item9": {
        "message": "Cuenta regresiva para realizar la última acción (en segundos)",
        "description": ""
    },
    "options_item10": {
        "message": "Usar el número cero para deshabilitar la cuenta regresiva para realizar la acción anterior.",
        "description": ""
    },
    "options_item11": {
        "message": "Lista de nombres de host separado por comas que no se van a bloquear (estos nombres de host pueden abrir ventanas emergentes en cualquier sitio web).",
        "description": ""
    },
    "options_item12": {
        "message": "Lista de nombres de host separado por comas que la extensión bloqueador de ventanas emergentes está completamente deshabilitada en ellos.",
        "description": ""
    },
    "options_item13": {
        "message": "Fuentes de lista negra (modo de operación inversa):",
        "description": ""
    },
    "options_item14": {
        "message": "Lista de nombres de host separado por comas que el bloqueador de ventanas emergentes solo debe estar habilitado en ellos. Esto significa que el bloqueador de ventanas emergentes está deshabilitado en TODOS los demás nombres de host. Para deshabilitar este modo, borra completamente la entrada de la lista negra.",
        "description": ""
    },
    "options_item15": {
        "message": "Impedir la redirección de la página durante 2 segundos tras una solicitud de ventana emergente",
        "description": ""
    },
    "options_item16": {
        "message": "Algunos sitios web redirigen al usuario a una página de anuncios si la petición de ventana emergente para mostrar el anuncio está bloqueada. Esta opción puede impedir esto al no permitir la redirección de la página durante el tiempo especificado.",
        "description": ""
    },
    "options_item17": {
        "message": "Acción predeterminada cuando se solicita una ventana emergente",
        "description": ""
    },
    "options_item18": {
        "message": "no hacer nada",
        "description": ""
    },
    "options_item19": {
        "message": "denegar petición",
        "description": ""
    },
    "options_item20": {
        "message": "abrir en segundo plano",
        "description": ""
    },
    "options_item21": {
        "message": "redirigir página",
        "description": ""
    },
    "options_item22": {
        "message": "Color de fondo del escudo",
        "description": ""
    },
    "options_item23": {
        "message": "Ignorar notificación de ventana emergente cuando sea posible (no recomendado)",
        "description": ""
    },
    "options_item24": {
        "message": "Esto \"ignorará\" o \"aceptará\" un ventana emergente sin la interacción del usuario (no recomendado)",
        "description": ""
    },
    "options_item25": {
        "message": "Descripciones",
        "description": ""
    },
    "options_item26": {
        "message": "Mostrar página de preguntas frecuentes en actualizaciones",
        "description": ""
    },
    "options_item27": {
        "message": "Protocolos en lista blanca:",
        "description": ""
    },
    "options_item28": {
        "message": "Los protocolos listados pueden abrirse en una pestaña nueva del navegador. Por ejemplo, añadir 'magnet:' para permitir que los enlaces magnet se abran en una pestaña del navegador.",
        "description": ""
    },
    "options_item29": {
        "message": "Usar el servicio Web of Trust (WOT) para decidir si una ventana emergente es de un nombre de host de confianza o no.",
        "description": ""
    },
    "options_item30": {
        "message": "Simular el botón 'permitir' para impedir que el bloqueador de ventanas emergentes interno de tu navegador bloquee estas peticiones",
        "description": ""
    },
    "options_item31": {
        "message": "Cuando se presiona el botón 'confiar', añadir el nombre de host a",
        "description": ""
    },
    "options_item32": {
        "message": "Destinos de lista blanca",
        "description": ""
    },
    "options_item33": {
        "message": "Fuentes de lista blanca",
        "description": ""
    },
    "options_item34": {
        "message": "Notificación de lista negra",
        "description": ""
    },
    "options_item35": {
        "message": "Lista de nombres de host separado por comas que el bloqueador de ventanas emergentes no mostrará notificación si se solicita una ventana emergente",
        "description": ""
    },
    "options_item36": {
        "message": "Enable aggressive static IFrame detection",
        "description": ""
    },
    "options_item37": {
        "message": "When this mode is enabled, the extension installs a mutation observer to monitor static IFrames with 'JavaScript:' src attributes. This enhances the blocking power but has performance drawbacks.",
        "description": ""
    },
    "options_support": {
        "message": "Apoyar el desarrollo",
        "description": ""
    },
    "options_import": {
        "message": "Importar",
        "description": ""
    },
    "options_export": {
        "message": "Exportar",
        "description": ""
    },
    "options_reset": {
        "message": "Restablecer los valores predeterminados",
        "description": ""
    },
    "options_save": {
        "message": "Guardar",
        "description": ""
    },
    "options_msg": {
        "message": "Se han guardado las opciones",
        "description": ""
    },
    "options_review": {
        "message": "Reseña en YouTube",
        "description": ""
    },
    "options_page": {
        "message": "Página de preguntas frecuentes",
        "description": ""
    },
    "ui_msg": {
        "message": "Solicita una ventana emergente para",
        "description": ""
    },
    "ui_button_allow": {
        "message": "Permitir esta ventana emergente",
        "description": ""
    },
    "ui_button_allow_value": {
        "message": "permitir",
        "description": ""
    },
    "ui_button_redirect": {
        "message": "Redirigir página actual al nuevo destino en lugar de abrirla en una pestaña nueva o ventana emergente",
        "description": ""
    },
    "ui_button_redirect_value": {
        "message": "redirigir",
        "description": ""
    },
    "ui_button_background": {
        "message": "Abrir el enlace en una pestaña en segundo plano",
        "description": ""
    },
    "ui_button_background_value": {
        "message": "segundo plano",
        "description": ""
    },
    "ui_button_deny": {
        "message": "Rechazar ventana emergente o apertura de pestaña",
        "description": ""
    },
    "ui_button_deny_value": {
        "message": "denegar",
        "description": ""
    },
    "ui_button_trust": {
        "message": "Poner en lista blanca este dominio para abrir ventanas emergentes",
        "description": ""
    },
    "ui_button_trust_value": {
        "message": "confiar",
        "description": ""
    },
    "bg_msg_state_1": {
        "message": "Popup Blocker (estricto) está habilitado globalmente y protege esta pestaña",
        "description": ""
    },
    "bg_msg_state_2": {
        "message": "Popup Blocker (estricto) está habilitado globalmente pero no protege esta pestaña",
        "description": ""
    },
    "bg_msg_state_3": {
        "message": "Popup Blocker (estricto) está deshabilitado globalmente y no protege esta pestaña",
        "description": ""
    },
    "bg_msg_state_4": {
        "message": "Popup Blocker (estricto) está deshabilitado globalmente pero protege esta pestaña",
        "description": ""
    }
}


=== File: ./v2/_locales/en/messages.json ===
----------------------------------------
{
  "app_description": {
    "message": "Strictly block all popup requests from any website"
  },
  "context_item2": {
    "message": "Allow the last popup request"
  },
  "context_item3": {
    "message": "Deny the last popup request"
  },
  "options_item1": {
    "message": "Maximum number of popup requests for a single page"
  },
  "options_item2": {
    "message": "Timeout for displaying each popup (in seconds)"
  },
  "options_item3": {
    "message": "Do not block popup requests from same origin"
  },
  "options_item5": {
    "message": "Display the total number of blocked requests in the toolbar icon"
  },
  "options_item6": {
    "message": "Whitelist destinations:"
  },
  "options_item7": {
    "message": "Whitelist sources:"
  },
  "options_item8": {
    "message": "For this change to take effect, refresh the tab."
  },
  "options_item9": {
    "message": "Countdown for performing the last action (in seconds)"
  },
  "options_item10": {
    "message": "Use zero number to disable the countdown to perform the previous action."
  },
  "options_item11": {
    "message": "Comma-separated list of hostnames that are not going to be blocked (these hostnames can issue popups on any website)."
  },
  "options_item12": {
    "message": "Comma-separated list of hostnames that the popup blocker extension is completely disabled on them."
  },
  "options_item13": {
    "message": "Blacklist sources (reverse operation mode):"
  },
  "options_item14": {
    "message": "Comma-separated list of hostnames that the popup blocker should only be active on them. This means that the popup blocker is disabled on ALL other hostnames. To disable this mode, clear the blacklist input completely."
  },
  "options_item15": {
    "message": "Prevent page redirection for 2 seconds after a popup is requested"
  },
  "options_item16": {
    "message": "Some websites redirect the user to the advertisement page if the popup request to display an advertisement is blocked. This option can prevent this by not allowing page redirection for the specified time."
  },
  "options_item17": {
    "message": "Default action when a popup is requested"
  },
  "options_item18": {
    "message": "do nothing"
  },
  "options_item19": {
    "message": "deny request"
  },
  "options_item20": {
    "message": "open in background"
  },
  "options_item21": {
    "message": "redirect page"
  },
  "options_item22": {
    "message": "Badge background-color"
  },
  "options_item23": {
    "message": "Ignore popup notification when possible (not recommended)"
  },
  "options_item24": {
    "message": "This will \"ignore\" or \"accept\" a popup without user interaction (not recommended)"
  },
  "options_item25": {
    "message": "Descriptions"
  },
  "options_item26": {
    "message": "Display FAQs page on updates"
  },
  "options_item27": {
    "message": "Whitelist protocols:"
  },
  "options_item28": {
    "message": "The listed protocols can be opened in a new browser tab. For instance add 'magnet:' to allow magnet links to be opened in a browser tab."
  },
  "options_item29": {
    "message": "Use Web of Trust (WOT) service to decide either popup is from a trusted hostname or not"
  },
  "options_item30": {
    "message": "Simulate the 'allow' button to prevent your browser's internal popup blocker from blocking these requests"
  },
  "options_item31": {
    "message": "When 'trust' button is pressed, add hostname to"
  },
  "options_item32": {
    "message": "Whitelist destinations"
  },
  "options_item33": {
    "message": "Whitelist sources"
  },
  "options_item34": {
    "message": "Notification blacklist"
  },
  "options_item35": {
    "message": "Comma-separated list of hostnames that the popup blocker will not display notification if a popup is requested"
  },
  "options_item36": {
    "message": "Enable aggressive static IFrame detection"
  },
  "options_item37": {
    "message": "When this mode is enabled, the extension installs a mutation observer to monitor static IFrames with 'JavaScript:' src attributes. This enhances the blocking power but has performance drawbacks."
  },
  "options_item38": {
    "message": "This feature is deprecated! If you don't want this extension to globally block pages, right-click on the action button and limit the access to particular websites from the \"This can read and change site data\" context menu item."
  },
  "options_support": {
    "message": "Support Development"
  },
  "options_import": {
    "message": "Import"
  },
  "options_export": {
    "message": "Export"
  },
  "options_reset": {
    "message": "Reset to Defaults"
  },
  "options_save": {
    "message": "Save"
  },
  "options_msg": {
    "message": "Options are saved"
  },
  "options_review": {
    "message": "YouTube Review"
  },
  "options_page": {
    "message": "FAQs Page"
  },
  "ui_msg": {
    "message": "Popup is requested for"
  },
  "ui_button_allow": {
    "message": "Allow this popup"
  },
  "ui_button_allow_value": {
    "message": "allow"
  },
  "ui_button_redirect": {
    "message": "Redirect current page to the new destination instead of opening it in a new tab or popup"
  },
  "ui_button_redirect_value": {
    "message": "redirect"
  },
  "ui_button_background": {
    "message": "Open the link in a background tab"
  },
  "ui_button_background_value": {
    "message": "background"
  },
  "ui_button_deny": {
    "message": "Decline the popup or tab opening"
  },
  "ui_button_deny_value": {
    "message": "deny"
  },
  "ui_button_trust": {
    "message": "White-list this domain to open popups"
  },
  "ui_button_trust_value": {
    "message": "trust"
  },
  "bg_msg_state_1": {
    "message": "Popup Blocker (strict) is globally enabled and protects this tab"
  },
  "bg_msg_state_2": {
    "message": "Popup Blocker (strict) is globally enabled but does not protect this tab"
  },
  "bg_msg_state_3": {
    "message": "Popup Blocker (strict) is globally disabled and does not protect this tab"
  },
  "bg_msg_state_4": {
    "message": "Popup Blocker (strict) is globally disabled but protects this tab"
  },
  "pp_enabled_g": {
    "message": "Enabled (Globally)"
  },
  "pp_enabled_c": {
    "message": "Enabled (This Hostname)"
  },
  "pp_silent": {
    "message": "Display Notifications"
  },
  "pp_ignore": {
    "message": "Ignore when Possible"
  },
  "pp_last_request": {
    "message": "Last Request"
  },
  "pp_test": {
    "message": "Test Blocker"
  },
  "pp_homepage": {
    "message": "Homepage"
  },
  "pp_options": {
    "message": "Options"
  },
  "pp_shadow": {
    "message": "Use Shadow"
  },
  "pp_allow": {
    "message": "Allow"
  },
  "pp_block": {
    "message": "Block"
  }
}



=== File: ./v2/_locales/tr/messages.json ===
----------------------------------------
{
    "options_item12": {
        "message": "Virgül ile ayrılan beyaz liste sitelerinde bu eklenti tamamen kapalı olacaktır",
        "description": ""
    },
    "options_msg": {
        "message": "Ayarlar Kaydedildi",
        "description": ""
    },
    "options_item23": {
        "message": "Eğer mümkünse popup istekleri bildirimini engelle (önerilmez)",
        "description": ""
    },
    "options_item10": {
        "message": "Geri sayımı kapatmak için sıfır yazın",
        "description": ""
    },
    "context_item1": {
        "message": "Popup engleleyici test et",
        "description": ""
    },
    "options_item3": {
        "message": "Aynı kaynaktan popup isteği alma",
        "description": ""
    },
    "options_item16": {
        "message": "Bazı sitelerde , sayfa reklamlı link yönlendirmeli olarak verilir.Bu ayar site yönlendirmesine gitmeden önce sizi uyarır.",
        "description": ""
    },
    "options_item4": {
        "message": "Yeni sekmede açılan linkleri engelle",
        "description": ""
    },
    "options_item24": {
        "message": "Bu ayar otomatik olarak popup isteklerine \"Kabul\" veya \"Reddet\" komutunu uygulayacaktır (önerilmez)",
        "description": ""
    },
    "options_item25": {
        "message": "Açıklamalar",
        "description": ""
    },
    "options_item15": {
        "message": "Popup isteğinden 2 saniye sonra yönlendirmeyi engelle",
        "description": ""
    },
    "app_description": {
        "message": "Kesin olarak bütün popup isteklerini engeller",
        "description": ""
    },
    "options_item19": {
        "message": "Reddet",
        "description": ""
    },
    "options_item9": {
        "message": "En son işlem için geri sayım süresi (saniye)",
        "description": ""
    },
    "options_item2": {
        "message": "Popup bildirisi penceresi görünüm süresi (saniye)",
        "description": ""
    },
    "options_item7": {
        "message": "Güvenilir kaynaklar:",
        "description": ""
    },
    "options_save": {
        "message": "Ayarları Kaydet",
        "description": ""
    },
    "options_item26": {
        "message": "Sıkça sorulan soruları güncellemelerde göster",
        "description": ""
    },
    "options_item22": {
        "message": "Sayacın arka plan rengi",
        "description": ""
    },
    "context_item4": {
        "message": "Popup isteğini gizli sekmede aç",
        "description": ""
    },
    "options_item1": {
        "message": "Bir sayfada engellenecek en fazla popup isteği sayısı",
        "description": ""
    },
    "options_item17": {
        "message": "Popup isteği geldiğinde yapılacak ilk komut",
        "description": ""
    },
    "options_item14": {
        "message": "Virgül ile ayrılan kara liste sitelerde bu uygulama tamamen aktif olacaktır. Eğer bu ayarı kullanırsanız bu uygulama diğer TÜM sitelerde çalışmayacaktır.",
        "description": ""
    },
    "options_item11": {
        "message": "Virgül ile ayrılan beyaz liste sitelerinde hiç bir engelleme olmayacaktır (bu sitelerde herhangi bir yeni pencere veya sekme çıkabilir)",
        "description": ""
    },
    "options_item18": {
        "message": "Hiçbir şey yapma",
        "description": ""
    },
    "options_item21": {
        "message": "Sayfayı yönlendir",
        "description": ""
    },
    "options_item8": {
        "message": "Ayarları düzenledikten sonra sayfanızı yenileyin",
        "description": ""
    },
    "options_item13": {
        "message": "Kara liste:",
        "description": ""
    },
    "options_item5": {
        "message": "Engellenene isteklerin sayısını eklenti simgesinde göster",
        "description": ""
    },
    "options_item6": {
        "message": "Güvenilir siteler:",
        "description": ""
    },
    "context_item3": {
        "message": "En son gelen popup isteğini reddet",
        "description": ""
    },
    "options_item20": {
        "message": "Arka planda aç",
        "description": ""
    },
    "context_item2": {
        "message": "En son gelen popup isteğini kabul et",
        "description": ""
    }
}



=== File: ./v2/data/ui/ui.js ===
----------------------------------------
/* globals config, wot */
'use strict';

const args = new URLSearchParams(location.search);
let prefs = '';

const entry = document.getElementById('entry');
const urls = {};
const cookie = {
  get: host => {
    const key = document.cookie.split(`${host}-action=`);
    if (key.length > 1) {
      return key[1].split(';')[0];
    }
  },
  set: (host, cmd) => {
    const days = 10;
    const date = new Date();
    date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));

    document.cookie = `${host}-action=${cmd}; expires=${date.toGMTString()}`;
  },
  remove: host => {
    const cmd = cookie.get(host);
    if (cmd) {
      document.cookie = `${host}-action=${cmd}; expires=Thu, 01 Jan 1970 00:00:01 GMT`;
    }
  }
};

const resize = () => window.top.postMessage({
  method: 'ppp-resize',
  // Edge issue with document.documentElement.clientHeight
  height: document.documentElement.getBoundingClientRect().height,
  hide: Object.keys(urls).length === 0
}, '*');

function Timer(callback, delay, ...args) {
  let timerId;
  let start;
  let remaining = delay;

  this.pause = function() {
    window.clearTimeout(timerId);
    remaining -= new Date() - start;
  };

  this.resume = function() {
    start = new Date();
    window.clearTimeout(timerId);
    timerId = window.setTimeout(callback, remaining, ...args);
    return timerId;
  };

  this.reset = function() {
    remaining = delay;
    this.resume();
  };

  return this.resume();
}

function remove(div, url) {
  delete urls[url || div.dataset.url];
  div.remove();
  resize();
}

function onClick(e) {
  const target = e.target;
  const cmd = target.dataset.cmd;
  if (cmd) {
    const div = target.closest('.ppblocker-div');
    if (div) {
      const {url, hostname, id, frameId, sameContext} = div.dataset;
      remove(div, url, id, cmd);
      if (cmd !== 'popup-denied' && cmd !== 'popup-close') {
        // on user-action use native method
        const msg = {cmd, id, url,
          frameId: Number(frameId),
          sameContext: sameContext === 'true' || (e.isTrusted && navigator.userAgent.indexOf('Firefox') === -1)
        };
        msg.parent = args.get('parent');
        chrome.runtime.sendMessage(msg);
        // https://github.com/schomery/popup-blocker/issues/90
        if (cmd === 'white-list') {
          msg.cmd = 'popup-accepted';
          chrome.runtime.sendMessage(msg);
        }
      }
      // remember user action
      if (cmd === 'popup-close') {
        cookie.remove(hostname);
      }
      else if (hostname && ['popup-redirect', 'open-tab', 'popup-denied'].indexOf(cmd) !== -1) {
        cookie.set(hostname, cmd);
      }
    }
  }
}
document.addEventListener('click', onClick);

const doTimer = (div, button, countdown) => {
  button.dataset.default = true;
  const label = button.value;
  const id = window.setInterval(() => {
    // skip when mouse is over
    if (div.dataset.hover === 'true') {
      return;
    }
    countdown -= 1;
    if (countdown) {
      button.value = label + ` (${countdown})`;
    }
    else {
      window.clearInterval(id);
      button.click();
    }
  }, 1000);
  button.value = label + ` (${countdown})`;
};
const onPopupRequest = request => {
  const tag = request.href && request.href !== 'about:blank' ? request.href : request.id;
  // already listed
  if (urls[tag]) {
    const obj = urls[tag];
    const div = obj.div;
    div.dataset.badge = Number(div.dataset.badge || '1') + 1;
    obj.timer.reset();
    obj.timestamp = Date.now();
  }
  // new popup
  else {
    const clone = document.importNode(entry.content, true);
    const div = clone.querySelector('div');
    div.dataset.id = request.id;
    div.dataset.frameId = request.frameId;
    div.dataset.sameContext = request.sameContext;
    div.dataset.url = tag;
    const page = request.href.startsWith('http') || request.href.startsWith('ftp');
    div.dataset.page = page;
    div.dataset.hostname = request.hostname;

    const p = clone.querySelector('[data-id=info]');
    div.title = p.textContent = '↝ ' + (request.href || 'about:blank');
    // do we have an action for this popup

    if (page) {
      const action = cookie.get(div.dataset.hostname) || prefs['default-action'];
      // immediate action
      if (action && action !== 'ignore' && prefs['immediate-action']) {
        return onClick({
          target: div.querySelector(`[data-cmd="${action}"]`)
        });
      }
      // only perform automatic action when there is no native request
      // to prevent the native popup blocker catch our request
      if (prefs.countdown && request.sameContext !== true) {
        if (action) {
          // to prevent internal popup blocker from rejecting the request
          if (action !== 'popup-accepted' || prefs['simulate-allow']) {
            const button = div.querySelector(`[data-cmd="${action}"`);
            if (button) {
              doTimer(div, button, prefs.countdown);
            }
            else if (prefs.wot) {
              wot.perform(div, prefs, request.href, div.dataset.hostname, prefs.countdown);
            }
          }
        }
        else if (prefs.wot) {
          wot.perform(div, prefs, request.href, div.dataset.hostname, prefs.countdown);
        }
      }
    }
    // localization
    [...clone.querySelectorAll('[data-i18n]')].forEach(e => {
      e[e.dataset.i18nValue || 'title'] = chrome.i18n.getMessage(e.dataset.i18n);
      if (e.type === 'button') {
        e.value = chrome.i18n.getMessage(e.dataset.i18n + '_value');
      }
    });
    document.body.appendChild(clone);
    // hide on timeout
    urls[tag] = {
      div,
      timer: new Timer(remove, prefs.timeout * 1000, div),
      prefs,
      timestamp: Date.now()
    };
    div.addEventListener('mouseenter', () => {
      div.dataset.hover = true;
      urls[tag].timer.pause();
    });
    div.addEventListener('mouseleave', () => {
      div.dataset.hover = false;
      urls[tag].timer.resume();
    });
    // remove old entries
    const keys = Object.keys(urls);
    if (keys.length > prefs.numbers) {
      const key = keys.sort((a, b) => urls[a].timestamp - urls[b].timestamp)[0];
      if (key) {
        remove(urls[key].div);
      }
    }
    resize();
  }
};

const message = async (request, sender) => {
  prefs = prefs || await config.get([
    'numbers', 'timeout', 'countdown', 'default-action', 'immediate-action', 'simulate-allow', 'wot'
  ]);
  prefs.wot = false; // this API is deprecated

  // only accept requests from bg page
  if (request.cmd === 'popup-request' && !sender.tab) {
    onPopupRequest(request);
  }
  else if (request.cmd === 'allow-last-request' || request.cmd === 'deny-last-request') {
    const value = Object.values(urls).sort((a, b) => b.timestamp - a.timestamp).shift();
    if (value) {
      const div = value.div;
      const button = div.querySelector(
        request.cmd === 'allow-last-request' ? '[data-cmd="popup-accepted"]' : '[data-cmd="popup-denied"]'
      );
      if (button) {
        button.click();
      }
    }
  }
};
chrome.runtime.onMessage.addListener(message);

// initial requests from top
{
  const c = e => {
    const request = e.data;
    if (request && request.method === 'popup-caches') {
      window.removeEventListener('message', c);
      for (const o of request.requests) {
        message(o, {
          tab: false
        });
      }
    }
  };
  window.addEventListener('message', c);
}



=== File: ./v2/data/ui/ui.html ===
----------------------------------------
<!DOCTYPE html>
<html>
<head>
  <link rel="stylesheet" href="ui.css">
  <meta charset="UTF-8">
</head>
<body>
  <template id="entry">
    <div class="ppblocker-div" data-badge=1 data-page=true>
      <p data-i18n="ui_msg" data-i18n-value="textContent"></p>
      <p data-id="info"></p>
      <input type="button" value="✗" title="Close this notification" data-cmd="popup-close">
      <div>
        <input type="button" value="trust" data-i18n="ui_button_trust" data-cmd="white-list">
        <span></span>
        <input type="button" value="deny" data-i18n="ui_button_deny" data-cmd="popup-denied">
        <input type="button" value="background" data-i18n="ui_button_background" data-cmd="open-tab">
        <input type="button" value="redirect" data-i18n="ui_button_redirect" data-cmd="popup-redirect">
        <input type="button" value="allow" data-i18n="ui_button_allow" data-cmd="popup-accepted">
      </div>
    </div>
  </template>
  <script src="/config.js"></script>
  <script src="wot.js"></script>
  <script src="ui.js"></script>
</body>
</html>



=== File: ./v2/data/ui/ui.css ===
----------------------------------------
body {
  margin: 0;
  font-family: "Helvetica Neue",Helvetica,sans-serif;
  font-size: 12px;
  overflow: hidden;
}

input[type=button] {
  border: solid 1px #999;
  background-color: #fff;
  color: #000;
  font-size: 10px;
  margin: 0 3px;
  cursor: pointer;
  padding: 2px 6px;
  border-radius: 0;
  line-height: 20px;
  outline: none;
}
input[type=button][data-default=true] {
  font-weight: 500;
}
input[type=button][data-cmd="popup-close"] {
  position: absolute;
  top: 0;
  right: 0;
  background: none;
  border: none;
  font-size: 14px;
}

.ppblocker-div {
  position: relative;
  text-shadow: none;
  box-sizing: content-box;
  border: solid 1px #cebc7d;
  background-color: #f4e1a7;
  color: #000;
  padding: 5px;
  margin:  8px 8px 5px 0;
  display: flex;
  flex-direction: column;
  border-radius: 2px;
  box-shadow: 1px 1px 5px rgb(206,188,125);
}
.ppblocker-div>div {
  display: flex;
  justify-content: flex-end;
}
.ppblocker-div>div>span {
  display: flex;
  flex: 1;
}
.ppblocker-div>p:first-of-type {
  font-weight: 500;
  font-size: 13px;
  margin: 0;
  padding: 0;
  user-select: none;
}
.ppblocker-div>p:last-of-type {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  margin: 0;
  padding: 0;
  line-height: 32px;
}
.ppblocker-div::before {
  content: attr(data-badge);
  position: absolute;
  top: -8px;
  right: -8px;
  border: solid 2px #fff;
  border-radius: 50%;
  background-color: #fc0d1b;
  color: #000;
  color: #fff;
  width: 16px;
  height: 16px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 80%;
}
.ppblocker-div[data-badge="1"]::before {
  display: none;
}
.ppblocker-div:not([data-page=true]) [data-cmd="white-list"],
.ppblocker-div:not([data-page=true]) [data-cmd="popup-redirect"],
.ppblocker-div:not([data-page=true]) [data-cmd="open-tab"] {
  display: none;
}

.ppblocker-wot {
  position: absolute;
  top: 6px;
  right: 25px;

  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 80%;
}



=== File: ./v2/data/ui/wot.js ===
----------------------------------------
/* globals doTimer */
'use strict';

var wot = {
  check: (url, hostname) => {
    if (!url || !url.startsWith('http')) {
      return Promise.reject();
    }
    return new Promise(resolve => chrome.runtime.sendMessage({
      cmd: 'wot',
      url,
      hostname
    }, r => {
      try {
        // https://www.mywot.com/wiki/API
        resolve(r);
      }
      catch (e) {
        resolve(-1);
      }
    }));
  },
  perform: (div, prefs, url, hostname, countdown) => {
    const sw = document.createElement('span');
    sw.textContent = 'Reputation Check';
    sw.classList.add('ppblocker-wot');
    div.appendChild(sw);
    wot.check(url, hostname).then(r => {
      if (r === -1) {
        sw.textContent = '[Unknown]';
      }
      else if (r >= 80) {
        sw.textContent = '[Excellent]';
      }
      else if (r >= 60) {
        sw.textContent = '[Good]';
      }
      else if (r >= 40) {
        sw.textContent = '[Unsatisfactory]';
      }
      else {
        sw.textContent = '[Poor]';
      }

      if (r >= 60) {
        const button = div.querySelector(
          prefs['simulate-allow'] ? '[data-cmd="popup-accepted"]' : '[data-cmd="open-tab"]'
        );
        doTimer(div, button, countdown);
      }
    }).catch(() => {});
  }
};



=== File: ./v2/data/options/index.html ===
----------------------------------------
<!DOCTYPE html>
<html>
<head>
  <title>Options Page :: Popup Blocker (strict)</title>
  <meta charset="utf-8">
  <link rel="stylesheet" type="text/css" href="index.css">
</head>

<body>
  <table width=100% class="rtl">
    <colgroup>
      <col>
      <col width="10">
    </colgroup>
    <tr>
      <td><span data-i18n="options_item1"></span></td>
      <td><input type="number" id="numbers" min=1></td>
    </tr>
    <tr>
      <td><span data-i18n="options_item2"></span><sup><a href="#n1">1</a></sup></td>
      <td><input type="number" id="timeout" min=5></td>
    </tr>
    <tr>
      <td><span data-i18n="options_item9"></span><sup><a href="#n2">2</a></sup></td>
      <td><input type="number" id="countdown" min=0></td>
    </tr>
    <tr>
      <td><span data-i18n="options_item17"></span></td>
      <td>
      <select id="default-action">
        <option value="ignore" data-i18n="options_item18"></option>
        <option value="popup-denied" data-i18n="options_item19"></option>
        <option value="open-tab" data-i18n="options_item20"></option>
        <option value="popup-redirect" data-i18n="options_item21"></option>
      </select>
      </td>
    <tr>
      <td><span data-i18n="options_item31"></span></td>
      <td>
      <select id="whitelist-mode">
        <option value="popup-hosts" data-i18n="options_item32"></option>
        <option value="top-hosts" data-i18n="options_item33"></option>
      </select>
      </td>
    <tr>
      <td><span data-i18n="options_item22"></span></td>
      <td><input type="color" id="badge-color"></td>
    </tr>

    </tr>
  </table>

  <div class="checks">
    <input type="checkbox" id="domain">
    <label for="domain"><span data-i18n="options_item3"></span><sup><a href="#n1">1</a></sup></label>
    <input type="checkbox" id="badge">
    <label for="badge"><span data-i18n="options_item5"></span><sup><a href="#n1">1</a></sup></label>
    <input type="checkbox" id="block-page-redirection">
    <label for="block-page-redirection"><span data-i18n="options_item15"></span><sup><a href="#n6">6</a></sup></label>
    <input type="checkbox" id="immediate-action">
    <label for="immediate-action"><span data-i18n="options_item23"></span><sup><a href="#n7">7</a></sup></label>
    <input type="checkbox" id="wot" disabled>
    <label for="wot"><span data-i18n="options_item29"></span></label>
    <input type="checkbox" id="simulate-allow">
    <label for="simulate-allow"><span data-i18n="options_item30"></span></label>
    <input type="checkbox" id="faqs">
    <label for="faqs"><span data-i18n="options_item26"></span></label>
  </div>

  <p>
    <span data-i18n="options_item6"></span><sup><a href="#n1">1</a>, <a href="#n3">3</a></sup>
    <textarea id="popup-hosts" rows="2"></textarea>
  </p>
  <p>
    <span data-i18n="options_item7"></span><sup><a href="#n1">1</a>, <a href="#n4">4</a></sup>
    <textarea id="top-hosts" rows="2"></textarea>
  </p>
  <p>
    <span data-i18n="options_item27"></span><sup><a href="#n1">1</a>, <a href="#n8">8</a></sup>
    <textarea id="protocols" rows="2"></textarea>
  </p>
  <p>
    <span data-i18n="options_item13"></span><sup><a href="#n1">1</a>, <a href="#n5">5</a></sup>
    <textarea id="blacklist" rows="2"></textarea>
  </p>
  <p>
    <span data-i18n="options_item34"></span><sup><a href="#n1">1</a>, <a href="#n5">9</a></sup>
    <textarea id="silent" rows="2"></textarea>
  </p>

  <p style="display: flex">
    <button id="import" data-i18n="options_import"></button>
    <button id="export" data-i18n="options_export"></button>
  </p>
  <p style="display: flex">
    <button id="review" data-i18n="options_review"></button>
    <button id="page" data-i18n="options_page"></button>
  </p>
  <p style="display: flex">
    <button id="support" data-i18n="options_support"></button>
    <button id="reset" data-i18n="options_reset"></button>
    <span style="flex: 1"></span>
    <span id="status"></span>
    <button id="save" data-i18n="options_save"></button>
  </p>

  <hr>

  <details>
    <summary data-i18n="options_item25"></summary>
    <p>
      1: <span data-i18n="options_item8" id="n1"></span>
      <br>
      2: <span data-i18n="options_item10" id="n2"></span>
      <br>
      3: <span data-i18n="options_item11" id="n3"></span>
      <br>
      4: <span data-i18n="options_item12" id="n4"></span>
      <br>
      5: <span data-i18n="options_item14" id="n5"></span>
      <br>
      6: <span data-i18n="options_item16" id="n6"></span>
      <br>
      7: <span data-i18n="options_item24" id="n7"></span>
      <br>
      8: <span data-i18n="options_item28" id="n8"></span>
      <br>
      9: <span data-i18n="options_item35" id="n9"></span>
    </p>
  </details>

  <script src="/config.js"></script>
  <script src="index.js"></script>
</body>
</html>



=== File: ./v2/data/options/index.js ===
----------------------------------------
/* globals config  */
'use strict';

const isFirefox = /Firefox/.test(navigator.userAgent) || typeof InstallTrigger !== 'undefined';

// localization
[...document.querySelectorAll('[data-i18n]')].forEach(e => {
  e.textContent = chrome.i18n.getMessage(e.dataset.i18n);
});

async function restore(defaults = false) {
  const prefs = defaults ? config : await config.get([
    'numbers', 'timeout', 'countdown', 'badge', 'badge-color', 'domain', 'wot',
    'simulate-allow', 'faqs', 'block-page-redirection', 'popup-hosts',
    'top-hosts', 'blacklist', 'protocols', 'silent', 'default-action',
    'whitelist-mode', 'immediate-action'
  ]);
  document.getElementById('numbers').value = prefs.numbers;
  document.getElementById('timeout').value = prefs.timeout;
  document.getElementById('countdown').value = prefs.countdown;
  document.getElementById('badge').checked = prefs.badge;
  document.getElementById('badge-color').value = prefs['badge-color'];
  document.getElementById('domain').checked = prefs.domain;
  document.getElementById('wot').checked = prefs.wot;
  document.getElementById('simulate-allow').checked = prefs['simulate-allow'];
  document.getElementById('faqs').checked = prefs.faqs;
  document.getElementById('block-page-redirection').checked = prefs['block-page-redirection'];
  document.getElementById('popup-hosts').value = prefs['popup-hosts'].join(', ');
  document.getElementById('top-hosts').value = prefs['top-hosts'].join(', ');
  document.getElementById('blacklist').value = isFirefox ? prefs.blacklist.join(', ') : '';
  document.getElementById('protocols').value = prefs.protocols.join(', ');
  document.getElementById('silent').value = prefs.silent.join(', ');
  document.getElementById('default-action').value = prefs['default-action'];
  document.getElementById('whitelist-mode').value = prefs['whitelist-mode'];
  document.getElementById('immediate-action').checked = prefs['immediate-action'];
}

const prepare = str => str.split(/\s*,\s*/)
  .map(s => s.replace('http://', '').replace('https://', '').split('/')[0].trim())
  .filter((h, i, l) => h && l.indexOf(h) === i);

function save() {
  chrome.storage.local.set({
    'numbers': Math.max(1, document.getElementById('numbers').value),
    'timeout': Math.max(1, document.getElementById('timeout').value),
    'countdown': Math.max(0, document.getElementById('countdown').value),
    'badge': document.getElementById('badge').checked,
    'badge-color': document.getElementById('badge-color').value,
    'domain': document.getElementById('domain').checked,
    'wot': document.getElementById('wot').checked,
    'simulate-allow': document.getElementById('simulate-allow').checked,
    'faqs': document.getElementById('faqs').checked,
    'block-page-redirection': document.getElementById('block-page-redirection').checked,
    'popup-hosts': prepare(document.getElementById('popup-hosts').value),
    'top-hosts': prepare(document.getElementById('top-hosts').value),
    'blacklist': prepare(document.getElementById('blacklist').value),
    'silent': prepare(document.getElementById('silent').value),
    'protocols': document.getElementById('protocols').value
      .split(/\s*,\s*/).filter(s => s && s.endsWith(':')),
    'default-action': document.getElementById('default-action').value,
    'whitelist-mode': document.getElementById('whitelist-mode').value,
    'immediate-action': document.getElementById('immediate-action').checked
  }, () => {
    const status = document.getElementById('status');
    status.textContent = chrome.i18n.getMessage('options_msg');
    restore();
    setTimeout(() => status.textContent = '', 750);
  });
}

document.addEventListener('DOMContentLoaded', () => restore());
document.getElementById('save').addEventListener('click', save);

document.addEventListener('click', e => {
  if (e.target.href && e.target.href.indexOf('#') !== -1) {
    document.querySelector('details').open = true;
  }
});

document.getElementById('reset').addEventListener('click', () => restore(true));
document.getElementById('export').addEventListener('click', () => {
  chrome.storage.local.get(null, prefs => {
    const text = JSON.stringify(prefs, null, '\t');
    const blob = new Blob([text], {type: 'application/json'});
    const objectURL = URL.createObjectURL(blob);
    Object.assign(document.createElement('a'), {
      href: objectURL,
      type: 'application/json',
      download: 'popup-blocker-preferences.json'
    }).dispatchEvent(new MouseEvent('click'));
    setTimeout(() => URL.revokeObjectURL(objectURL));
  });
});
document.getElementById('import').addEventListener('click', () => {
  const fileInput = document.createElement('input');
  fileInput.style.display = 'none';
  fileInput.type = 'file';
  fileInput.accept = '.json';
  fileInput.acceptCharset = 'utf-8';

  document.body.appendChild(fileInput);
  fileInput.initialValue = fileInput.value;
  fileInput.onchange = readFile;
  fileInput.click();

  function readFile() {
    if (fileInput.value !== fileInput.initialValue) {
      const file = fileInput.files[0];
      if (file.size > 100e6) {
        return console.warn('The file is too large!');
      }
      const fReader = new FileReader();
      fReader.onloadend = event => {
        fileInput.remove();
        const json = JSON.parse(event.target.result);
        chrome.storage.local.set(json, () => chrome.runtime.reload());
      };
      fReader.readAsText(file, 'utf-8');
    }
  }
});
// support
document.getElementById('support').addEventListener('click', () => chrome.tabs.create({
  url: chrome.runtime.getManifest().homepage_url + '?rd=donate'
}));
// review
document.getElementById('review').addEventListener('click', () => chrome.tabs.create({
  url: 'https://www.youtube.com/watch?v=Jp-RaiTHzCQ'
}));
// FAQs Page
document.getElementById('page').addEventListener('click', () => chrome.tabs.create({
  url: chrome.runtime.getManifest().homepage_url
}));


if (isFirefox === false) {
  document.getElementById('blacklist').setAttribute('placeholder', chrome.i18n.getMessage('options_item38'));
  document.getElementById('blacklist').disabled = true;
}



=== File: ./v2/data/options/index.css ===
----------------------------------------
body {
  font-family: "Helvetica Neue", Helvetica, sans-serif;
  font-size: 13px;
  max-width: 80%;
  margin: 10px auto;
}
@media screen and (max-width: 600px) {
  body {
    margin: 10px;
    max-width: unset;
  }
}
@supports (-moz-appearance:none) {
  body {
    font-size: 13px;
    font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
    margin: 15px;
  }
  button,
  input[type=submit],
  input[type=button] {
    height: 24px;
    color: rgb(68, 68, 68);
    background-image: linear-gradient(rgb(237, 237, 237), rgb(237, 237, 237) 38%, rgb(222, 222, 222));
    box-shadow: rgba(0, 0, 0, 0.08) 0 1px 0, rgba(255, 255, 255, 0.75) 0 1px 2px inset;
    text-shadow: rgb(240, 240, 240) 0 1px 0;
    border: solid 1px rgba(0, 0, 0, 0.25);
  }
}
input[type=number] {
  width: 50px;
}
textarea,
input[type=text] {
  width: 100%;
  box-sizing: border-box;
}
label[for=wot],
input:disabled,
textarea:disabled {
  opacity: 0.6 !important;
}
hr {
  margin: 10px 0;
  border: none;
  height: 1px;
  border-bottom: dashed 1px #ccc;
}
summary {
  outline: none;
}
a {
  text-decoration: none;
  cursor: pointer;
}
#status {
  margin-right: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
}
.rtl td:last-child {
  text-align: right;
}
.checks {
  display: grid;
  grid-template-columns: 32px 1fr;
  grid-gap: 5px;
  align-items: center;
}

label[for="wot"] {
  text-decoration: line-through;
}



=== File: ./v2/data/popup/index.html ===
----------------------------------------
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <link rel="stylesheet" type="text/css" href="index.css">
  <meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body>
  <p class="col2">
    <label for="global" data-i18n="pp_enabled_g"></label>
    <input type="checkbox" id="global">
    <label for="page" data-i18n="pp_enabled_c"></label>
    <input type="checkbox" id="page">
  </p>
  <hr>
  <p class="col3">
    <span data-i18n="pp_last_request"></span>
    <span class="button" id="deny-last-request" data-i18n="pp_block"></span>
    <span class="button" id="allow-last-request" data-i18n="pp_allow"></span>
  </p>
  <p class="col2">
    <label for="issue" data-i18n="pp_silent"></label>
    <input type="checkbox" id="issue">
    <label for="immediate-action" data-i18n="pp_ignore"></label>
    <input type="checkbox" id="immediate-action">
  </p>

  <div class="spc">
    <span class="button" id="test-page" data-i18n="pp_test"></span>
    <span class="button" id="homepage" data-i18n="pp_homepage"></span>
    <span class="button" id="options" data-i18n="pp_options"></span>
    <span class="button" id="use-shadow" data-i18n="pp_shadow"></span>
  </div>

  <script type="text/javascript" src="/config.js"></script>
  <script type="text/javascript" src="index.js"></script>
</body>
</html>



=== File: ./v2/data/popup/index.js ===
----------------------------------------
/* globals config */
'use strict';

// localization
[...document.querySelectorAll('[data-i18n]')].forEach(e => {
  if (e.tagName === 'INPUT') {
    e.value = chrome.i18n.getMessage(e.dataset.i18n);
  }
  else {
    e.textContent = chrome.i18n.getMessage(e.dataset.i18n);
  }
});

// Global
config.get(['enabled']).then(prefs => {
  document.getElementById('global').checked = prefs.enabled;
  if (prefs.enabled === false) {
    document.getElementById('page').disabled = true;
  }
});
document.getElementById('global').onchange = e => {
  chrome.storage.local.set({
    enabled: e.target.checked
  });
  document.getElementById('page').disabled = e.target.checked === false;
};

// This Page
chrome.tabs.executeScript({
  code: `({
    enabled: typeof prefs === 'object' ? prefs.enabled : undefined,
    hostname: location.hostname
  })`
}, async arr => {
  const lastError = chrome.runtime.lastError;
  if (lastError || arr[0] === undefined) {
    document.getElementById('page').disabled = true;
    // force disabled
    document.getElementById('page').classList.add('disabled');
  }
  else {
    if (arr[0].enabled === true || arr[0].enabled === false) {
      document.getElementById('page').checked = arr[0].enabled;
    }
    else {
      const prefs = await config.get(['top-hosts']);
      document.getElementById('page').checked =
        prefs['top-hosts'].some(h => h === arr[0].hostname) ? false : true;
    }
  }
});
document.getElementById('page').onchange = async e => {
  const prefs = await config.get(['top-hosts']);
  chrome.tabs.executeScript({
    code: 'location.hostname'
  }, ([hostname]) => {
    if (e.target.checked) {
      const n = prefs['top-hosts'].indexOf(hostname);
      if (n !== -1) {
        prefs['top-hosts'].splice(n, 1);
      }
    }
    else {
      prefs['top-hosts'].push(hostname);
      prefs['top-hosts'] = prefs['top-hosts'].filter((s, i, l) => s && l.indexOf(s) === i);
    }
    chrome.storage.local.set(prefs, () => chrome.tabs.reload());
  });
};

config.get(['immediate-action']).then(prefs => {
  document.getElementById('immediate-action').checked = prefs['immediate-action'];
});
document.getElementById('immediate-action').onchange = e => chrome.storage.local.set({
  'immediate-action': e.target.checked
});

config.get(['issue']).then(prefs => {
  document.getElementById('issue').checked = prefs.issue;
});
document.getElementById('issue').onchange = e => chrome.storage.local.set({
  'issue': e.target.checked
});

document.getElementById('test-page').onclick = () => chrome.tabs.create({
  url: 'https://webbrowsertools.com/popup-blocker/'
});

document.getElementById('homepage').onclick = () => chrome.tabs.create({
  url: chrome.runtime.getManifest().homepage_url
});

document.getElementById('options').onclick = () => chrome.runtime.openOptionsPage();

chrome.tabs.query({
  currentWindow: true,
  active: true
}, tabs => {
  if (tabs.length) {
    const tab = tabs[0];
    document.getElementById('use-shadow').onclick = () => chrome.tabs.sendMessage(tab.id, {
      cmd: 'use-shadow'
    }, () => window.close());

    document.getElementById('allow-last-request').onclick = () => chrome.tabs.sendMessage(tab.id, {
      cmd: 'allow-last-request'
    }, () => window.close());

    document.getElementById('deny-last-request').onclick = () => chrome.tabs.sendMessage(tab.id, {
      cmd: 'deny-last-request'
    }, () => window.close());
  }
});



=== File: ./v2/data/popup/index.css ===
----------------------------------------
:root {
  --bg: #fff;
  --clr: #4d5156;
  --dark: #d9d9d9;
  --button: #f0f0f0;
  --border: rgba(128, 128, 128, 0.2);
}
@media (prefers-color-scheme: dark) {
  :root {
    color-scheme: dark;

    --bg: #35363a;
    --clr: #b1b1b1;
    --dark: #202124;
    --button: #202124;
  }
}

body {
  font-size: 13px;
  font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
  width: 400px;
  color: var(--clr);
  background-color: var(--bg);
  margin: 0;
}
hr {
  border: none;
  border-bottom: solid 1px var(--border);
}
.button {
  color: var(--clr);
  background-color: var(--button);
  text-align: center;
  border: none;
  padding: 5px 10px;
  min-width: 80px;
  cursor: pointer;
  position: relative;
}
.button:not(:last-child)::after {
  content: '';
  position: absolute;
  right: 0;
  width: 1px;
  height: 14px;
  background-color: var(--border);
}

input.disabled,
input:disabled {
  opacity: 0.2;
  pointer-events: none;
}
p {
  padding: 0 10px;
}
.col2 {
  display: grid;
  grid-gap: 5px 0;
  grid-template-columns: 1fr min-content;
}
.col3 {
  display: grid;
  grid-template-columns: 1fr min-content min-content;
}
.spc {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
}
.spc > span {
  padding: 10px;
  min-width: unset;
}



=== File: ./v2/data/inject/iframe.js ===
----------------------------------------
'use strict';

{
  let iframe;
  let requests = [];
  let ready = false;
  chrome.runtime.onMessage.addListener((request, sender) => {
    if (request.cmd === 'popup-request') {
      if (ready === false || !iframe) {
        // only accept requests from bg page
        if (request.cmd === 'popup-request' && !sender.tab) {
          requests.push(request);
        }
      }
      if (!iframe) {
        iframe = document.createElement('iframe');
        iframe.src = chrome.runtime.getURL('data/ui/ui.html?parent=' + encodeURIComponent(location.href));
        iframe.onload = () => {
          iframe.contentWindow.postMessage({
            method: 'popup-caches',
            requests
          }, '*');
          requests = [];
          ready = true;
        };
        iframe.setAttribute('style', `
          z-index: 2147483649 !important;
          color-scheme: light !important;
          position: fixed !important;
          right: 10px !important;
          top: 10px !important;
          width: 420px !important;
          max-width: 80vw !important;
          height: 85px !important;
          border: none !important;
          background: transparent !important;
          border-radius: 0 !important;
        `);
        // do not attach to body to make sure the notification is visible
        document.documentElement.appendChild(iframe);
      }
      // always reattach to make sure the iframe is accessible
      if (document.elementsFromPoint) { // Edge does not support elementsFromPoint
        const es = document.elementsFromPoint(iframe.offsetLeft, iframe.offsetTop);
        const index = es.indexOf(iframe);
        if (index !== 0) {
          // this is going to refresh the iframe
          document.body.appendChild(iframe);
        }
      }
    }
  });
  window.addEventListener('message', e => {
    const request = e.data;
    if (request && request.method === 'ppp-resize') {
      e.preventDefault();
      e.stopPropagation();
      if (request.hide) {
        iframe.remove();
        iframe = null;
      }
      else {
        iframe.style.height = request.height + 'px';
      }
    }
  });
}



=== File: ./v2/data/inject/blocker.js ===
----------------------------------------
/* global uncode */
'use strict';

/* Checks
  1.
  https://chrome.google.com/webstore/detail/aefkmifgmaafnojlojpnekbpbmjiiogg
  FF -> The page’s settings blocked the loading of a resource at inline (“script-src”)

  2.
  https://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_win_open

  3. test on incognito and private mode

  4. https://webbrowsertools.com/popup-blocker/?fire_on_start

  5. test reverse mode

  6.
    https://codepen.io/pipr/pen/VwpVyZQ
    https://codepen.io/pipr/pen/LYWMpdR
    https://codepen.io/pipr/pen/XWMoPog
    https://codepen.io/pipr/pen/YzZdOdJ

  7.
    https://patrickhlauke.github.io/recaptcha/
*/

// record fake window's executed commands
const records = {};

/* page redirection; prevent the page redirection when popup opening is unsuccessful for 2 seconds */
const redirect = {
  timeout: null,
  beforeunload(e) {
    e.returnValue = 'false';
  },
  block() {
    if (window.top === window) {
      if (redirect.prefs['block-page-redirection']) {
        window.addEventListener('beforeunload', redirect.beforeunload, true);
        clearTimeout(redirect.timeout);
        redirect.timeout = setTimeout(redirect.release, redirect.prefs['block-page-redirection-period']);
      }
    }
  },
  release() {
    window.removeEventListener('beforeunload', redirect.beforeunload, true);
    clearTimeout(redirect.timeout);
  }
};
chrome.storage.local.get({
  'block-page-redirection': false,
  'block-page-redirection-period': 2000
}, prefs => redirect.prefs = prefs);


let script = document.createElement('script');
try {
  script.dataset.enabled = true;
}
catch (e) {
  script.dataset = {}; // XML documents
}

const prefs = window.prefs = new Proxy({}, {
  set(obj, key, value) {
    obj[key] = value;

    if (key === 'enabled') {
      script.dataset[key] = value === true;
      if (window === window.top) {
        chrome.runtime.sendMessage({
          'cmd': 'state',
          'active': value === true
        });
      }
    }
    return true;
  }
});

if (typeof isFirefox !== 'undefined') {
  prefs.enabled = 'enabled' in window ? window.enabled : false;
  chrome.storage.onChanged.addListener(ps => {
    if (ps.enabled && ps.enabled.newValue === false) {
      prefs.enabled = false;
    }
    else if (ps.enabled) {
      prefs.enabled = 'enabled' in window ? window.enabled : true;
    }
  });
}
else { // Chrome
  // for top frame, the extension is always enabled unless get disabled by "window.enabled"
  if (window.top === window) {
    if (document.contentType === 'text/html') {
      prefs.enabled = 'enabled' in window ? window.enabled : true;
    }
    else {
      prefs.enabled = false;
    }
  }
  else {
    try {
      prefs.enabled = parent.prefs.enabled;
    }
    catch (e) { // this is a CORS frame on Chrome
      chrome.runtime.sendMessage({
        cmd: 'is-active'
      });
    }
  }
  chrome.storage.onChanged.addListener(ps => {
    if (ps.enabled) {
      prefs.enabled = ps.enabled.newValue;
    }
  });
}

/* recording window.open */
script.record = e => {
  e.stopPropagation();
  const {id, name, method, args} = e.detail;
  records[id].push({name, method, args});
};
script.addEventListener('record', script.record);
/* channel */
script.policy = e => {
  e.stopPropagation();
  // make sure the request is from our script; see example 1
  if (e.target === script) {
    if (script.dataset.enabled !== 'false') {
      const request = e.detail;
      const {block, id, href, hostname} = blocker.policy(request);
      script.setAttribute('eid', id);
      script.setAttribute('block', block);

      if (block) {
        redirect.block();
        chrome.runtime.sendMessage({
          cmd: 'popup-request',
          type: request.type,
          href,
          hostname,
          id
        });
      }
    }
    // when a new iframe is loaded and the blocker is disabled but the preferences are not yet ported
    else {
      script.setAttribute('block', false);
    }
  }
};
script.addEventListener('policy', script.policy);

/* inject unprotected */
script.textContent = '(' + uncode.toString() + ')(3)';

// https://github.com/schomery/popup-blocker/issues/135
if (document.contentType === 'text/html') {
  document.documentElement.appendChild(script);
  if (script.dataset.injected === 'true') {
    script.remove();
  }
  else { // Firefox does not inject if there is CSP!
    const s = document.createElement('script');
    s.src = 'data:text/javascript;charset=utf-8;base64,' + btoa(`(${uncode.toString()})()`);
    Object.assign(s.dataset, script.dataset);
    s.addEventListener('policy', script.policy);
    s.addEventListener('record', script.record);
    s.onload = () => s.remove();
    document.documentElement.appendChild(s);
    script.remove();
    script = s;
    // console.warn('Popup Blocker (script)', 'Async injection due to CSP', location.href);
  }
}

/* blocker */
const blocker = {};

blocker.hasBase = a => {
  // https://github.com/schomery/popup-blocker/issues/86
  // only check the closest base
  const base = [a, ...document.querySelectorAll('base')]
    .map(e => e && e.target ? e.target : '')
    .filter(b => b).shift();

  if (!base || base.toLowerCase() === '_self' || base.toLowerCase() === '_top') {
    return false;
  }
  // the linked page opens in a named frame
  if (typeof window[base] === 'object') {
    return false;
  }
  try { // might be cross-origin
    if (typeof parent[base] === 'object') {
      return false;
    }
  }
  catch (e) {}
  if (typeof isFirefox !== 'undefined') {
    try {
      if (document.querySelector(`[name="${base}"]`)) {
        return false;
      }
    }
    catch (e) {}
    try {
      if (parent.document.querySelector(`[name="${base}"]`)) {
        return false;
      }
    }
    catch (e) {}
  }
  return true;
};

blocker.policy = request => {
  const target = document.activeElement || document.documentElement;
  const {type} = request;
  let href = request.href;
  let hostname = '';
  let block = true;
  let sameContext = false;

  if (type === 'element.click') {
    const a = 'closest' in target ? (target.closest('[target]') || target.closest('a')) : null;
    href = href || (a ? a.href || a.action : '');
    // we are blocking either if a is found or href is provided; see method 12/4
    block = Boolean(a) || href;
  }
  // always run window open on the same context
  if (type === 'window.open') {
    sameContext = true;
  }
  else {
    block = block && blocker.hasBase({
      target: request.target
    });
  }
  // block if
  if (request.metaKey && request.isTrusted === false) { // see method 12/5
    block = true;
  }
  if ('button' in request && request.button !== 0 && request.isTrusted === false) { // see method 12/2
    block = true;
  }
  // do not block if
  if (request.defaultPrevented || (request.metaKey && request.isTrusted)) {
    block = false;
  }
  // do not block A[download]
  if (request.tag === 'A' && request.download) {
    block = false;
  }
  // fixing
  if (block) {
    // fix relative href
    if (href && href.indexOf(':') === -1) {
      const a = document.createElement('a');
      a.setAttribute('href', href);
      href = a.href;
    }
    // create a unique id when "href" is not usable
    if (!href || href.startsWith('about:')) {
      target.dataset.ppbid = target.dataset.ppbid || Math.random();
    }
    if (href) {
      try {
        const configs = blocker.policy.configs;

        const loc = new URL(href);
        hostname = loc.hostname;
        // allow popups from the same hostname
        if (configs.domain) {
          try { // if they are not in the same origin
            const h = window.top.location.hostname;
            if (h && hostname && (h.endsWith('.' + hostname) || hostname.endsWith('.' + h) || hostname === h)) {
              block = false;
            }
          }
          catch (e) {}
        }
        // protocol matching
        if (loc.protocol && configs.protocols.indexOf(loc.protocol) !== -1) {
          block = false;
        }
        // white-list matching
        if (hostname) {
          for (const h of configs['popup-hosts']) {
            if (h.endsWith('.' + hostname) || hostname.endsWith('.' + h) || hostname === h) {
              block = false;
            }
          }
        }
      }
      catch (e) {}
    }
  }

  const id = target.dataset.ppbid || Math.random();
  if (sameContext) {
    records[id] = [{
      name: 'self',
      method: 'open',
      args: request.args
    }];
  }
  return {
    id,
    href,
    hostname,
    sameContext,
    block
  };
};
blocker.policy.configs = {
  'domain': false,
  'protocols': ['magnet:'],
  'popup-hosts': ['google.com', 'bing.com', 't.co', 'twitter.com', 'disqus.com', 'login.yahoo.com', 'mail.google.com']
};
chrome.storage.local.get(blocker.policy.configs, ps => Object.assign(blocker.policy.configs, ps));
chrome.storage.onChanged.addListener(ps => {
  Object.keys(ps).filter(k => k in blocker.policy.configs).forEach(k => blocker.policy.configs[k] = ps[k].newValue);
});

/* messaging */
chrome.runtime.onMessage.addListener((request, sender, response) => {
  // apply popup-accept on the context where it is originally requested
  if (request.cmd === 'popup-accepted') {
    script.dataset.enabled = false;
    const s = document.createElement('script');
    if (records[request.id]) {
      s.dataset.commands = JSON.stringify(records[request.id]);
      delete records[request.id];
      s.textContent = `{
        const [{method, args}, ...commands] = JSON.parse(document.currentScript.dataset.commands);
        const loaded = [window[method].apply(window, args)];
        commands.forEach(({name, method, args}) => {
          const o = loaded.map(o => o[name]).filter(o => o).shift();
          if (loaded.indexOf(o) === -1) {
            loaded.push(o);
          }
          o[method].apply(o, args);
        });
      }`;
    }
    else {
      s.textContent = `{
        const a = document.createElement('a');
        a.target = '_blank';
        a.href = '${request.url}';
        a.click();
      }`;
    }
    document.body.appendChild(s);
    s.remove();
    script.dataset.enabled = prefs.enabled;
  }
  else if (request.cmd === 'use-shadow') {
    script.dataset.shadow = true;
  }
  else if (request.cmd === 'release-beforeunload') {
    redirect.release();
    response(true); // Edge thing!
  }
});



=== File: ./v2/data/inject/ff.js ===
----------------------------------------
// Firefox issue; document.activeElement is always <body/>

let activeElement = document.documentElement;

document.addEventListener('click', e => activeElement = e.target, true);

Object.defineProperty(document, 'activeElement', {
  get() {
    return activeElement;
  }
});

window.isFirefox = /Firefox/.test(navigator.userAgent) || typeof InstallTrigger !== 'undefined';



=== File: ./v2/data/inject/uncode.js ===
----------------------------------------
/* this is the entire unprotected code */

/*
  aggressive: 1; basic protection
  aggressive: 2; basic protection + frame protection
  aggressive: 3; basic protection + frame protection + mutation protection
*/
const uncode = (aggressive = 3) => {
  const script = document.currentScript;
  script.dataset.injected = true;

  const post = (name, detail) => script.dispatchEvent(new CustomEvent(name, {
    detail
  }));
  /* ask the script to validate a request */
  const policy = (type, element, event, extra = {}) => {
    if (script.dataset.enabled === 'false') {
      return {
        block: false
      };
    }
    if (event) {
      extra.defaultPrevented = event.defaultPrevented;
      extra.metaKey = event.metaKey || event.ctrlKey;
      extra.button = event.button || 0;
      extra.isTrusted = event.isTrusted;
    }
    post('policy', {
      type,
      href: element.action || element.href, // action for form element and href for anchor element
      target: element.target,
      download: element.download,
      tag: element.tagName,
      ...extra
    });
    return {
      id: script.getAttribute('eid'),
      block: script.getAttribute('block') === 'true'
    };
  };
  /* simulate a window */
  const simulate = (name, root, id) => new Proxy({}, { // window.location.replace
    get(obj, key) {
      return typeof root[key] === 'function' ? function(...args) {
        post('record', {
          id,
          name,
          method: root[key].name || key, // window.focus
          args
        });
      } : simulate(key, root[key], id);
    }
  });
  const protected = new WeakMap(); // keep reference of all protected window objects

  /* blocker */
  const blocker = {};

  blocker.frame = target => {
    const {src, tagName} = target;
    if (src && (tagName === 'IFRAME' || tagName === 'FRAME')) {
      const s = src.toLowerCase();
      if (s.startsWith('javascript:') || s.startsWith('data:')) {
        try {
          blocker.install(target.contentWindow);
        }
        catch (e) {}
      }
    }
  };

  blocker.onclick = e => {
    const a = e.target.closest('[target]') || e.target.closest('a');
    // if this is not a form or anchor element, ignore the click
    if (a && policy('element.click', a, e).block) {
      blocker.onclick.pointer.apply(e);
      return true;
    }
  };
  blocker.onclick.pointer = MouseEvent.prototype.preventDefault;

  blocker.install = (w = window) => {
    if (script.dataset.enabled === 'false' || protected.has(w)) {
      return;
    }
    const d = w.document;
    protected.set(w);

    /* overwrites */
    const {HTMLAnchorElement, HTMLFormElement} = w;
    HTMLAnchorElement.prototype.click = new Proxy(HTMLAnchorElement.prototype.click, {
      apply(target, self, args) {
        const {block} = policy('dynamic.a.click', self);
        return block ? undefined : Reflect.apply(target, self, args);
      }
    });
    HTMLAnchorElement.prototype.dispatchEvent = new Proxy(HTMLAnchorElement.prototype.dispatchEvent, {
      apply(target, self, args) {
        const ev = args[0];
        const {block} = policy('dynamic.a.dispatch', self, ev);
        return block ? false : Reflect.apply(target, self, args);
      }
    });
    HTMLFormElement.prototype.submit = new Proxy(HTMLFormElement.prototype.submit, {
      apply(target, self, args) {
        const {block} = policy('dynamic.form.submit', self);
        return block ? false : Reflect.apply(target, self, args);
      }
    });
    HTMLFormElement.prototype.dispatchEvent = new Proxy(HTMLFormElement.prototype.dispatchEvent, {
      apply(target, self, args) {
        const {block} = policy('dynamic.form.dispatch', self);
        return block ? false : Reflect.apply(target, self, args);
      }
    });

    /* iframe mess */
    if (aggressive > 1) {
      const {HTMLIFrameElement, HTMLFrameElement} = w;

      const wf = Object.getOwnPropertyDescriptor(HTMLFrameElement.prototype, 'contentWindow');
      Object.defineProperty(HTMLFrameElement.prototype, 'contentWindow', {
        configurable: true,
        enumerable: true,
        get: function() {
          const w = wf.get.call(this);
          try {
            blocker.install(w);
          }
          catch (e) {}
          return w;
        }
      });
      const wif = Object.getOwnPropertyDescriptor(HTMLIFrameElement.prototype, 'contentWindow');
      Object.defineProperty(HTMLIFrameElement.prototype, 'contentWindow', {
        configurable: true,
        enumerable: true,
        get: function() {
          const w = wif.get.call(this);
          try {
            blocker.install(w);
          }
          catch (e) {}
          return w;
        }
      });
      const cf = Object.getOwnPropertyDescriptor(HTMLFrameElement.prototype, 'contentDocument');
      Object.defineProperty(HTMLFrameElement.prototype, 'contentDocument', {
        configurable: true,
        enumerable: true,
        get: function() {
          const d = cf.get.call(this);
          try {
            blocker.install(d.defaultView);
          }
          catch (e) {}
          return d;
        }
      });
      const cif = Object.getOwnPropertyDescriptor(HTMLIFrameElement.prototype, 'contentDocument');
      Object.defineProperty(HTMLIFrameElement.prototype, 'contentDocument', {
        configurable: true,
        enumerable: true,
        get: function() {
          const d = cif.get.call(this);
          try {
            blocker.install(d.defaultView);
          }
          catch (e) {}
          return d;
        }
      });
    }

    /* iframe creation with innerHTML */
    if (aggressive > 2) {
      new MutationObserver(ms => {
        for (const m of ms) {
          for (const e of m.addedNodes) {
            blocker.frame(e);
            if (e.childElementCount) {
              [...e.querySelectorAll('iframe')].forEach(blocker.frame);
            }
          }
        }
      }).observe(d, {childList: true, subtree: true});
    }

    /* click */
    d.addEventListener('click', blocker.onclick, true); // with capture;

    /* window.open */
    w.open = new Proxy(w.open, {
      apply(target, self, args) {
        // do not block if window is opened inside a frame
        const name = args[1];
        if (name && typeof name === 'string' && frames[name]) {
          return Reflect.apply(target, self, args);
        }

        const {id, block} = policy('window.open', {
          href: args.length ? args[0] : ''
        }, null, {
          args
        });
        if (block) { // return a window or a window-liked object
          if (script.dataset.shadow === 'true') {
            const iframe = document.createElement('iframe');
            iframe.style.display = 'none';
            document.body.appendChild(iframe);
            return iframe.contentWindow;
          }
          else {
            return simulate('self', window, id);
          }
        }
        return Reflect.apply(target, self, args);
      }
    });

    /* DOM replacement (document.open removes all the DOM listeners) */
    let dHTML = d.documentElement;
    d.write = new Proxy(d.write, {
      apply(target, self, args) {
        const r = Reflect.apply(target, self, args);
        if (dHTML !== self.documentElement) {
          dHTML = self.documentElement;
          self.addEventListener('click', blocker.onclick, true);
        }
        return r;
      }
    });
  };
  blocker.remove = (w = window, d = document) => {
    if (script.dataset.enabled === 'false' && protected.has(w)) {
      protected.delete(w);
      d.removeEventListener('click', blocker.onclick);
    }
  };

  // always install since we do not know the enabling status right now
  blocker.install();

  // receive configure
  new MutationObserver(() => {
    blocker[script.dataset.enabled === 'false' ? 'remove' : 'install']();
  }).observe(script, {
    attributes: true,
    attributeFilter: ['data-enabled']
  });
};



=== File: ./v3/badge.js ===
----------------------------------------
/* global config */


/* update global icon's state */
const icon = async () => {
  const prefs = await config.get(['enabled']);
  const path = {
    16: 'data/icons/' + (prefs.enabled ? '' : 'disabled/') + '16.png',
    32: 'data/icons/' + (prefs.enabled ? '' : 'disabled/') + '32.png'
  };
  chrome.action.setIcon({
    path
  });
};

/* observe preference changes */
chrome.storage.onChanged.addListener(prefs => {
  if (prefs.badge && prefs.badge.newValue === false) {
    chrome.tabs.query({}, tabs => tabs.forEach(tab => chrome.action.setBadgeText({
      tabId: tab.id,
      text: ''
    })));
  }
  // maybe multiple prefs changed
  if (prefs['badge-color']) {
    chrome.action.setBadgeBackgroundColor({
      color: prefs['badge-color'].newValue
    });
  }
  //
  if (prefs.enabled) {
    icon();
  }
});

chrome.runtime.onMessage.addListener((request, sender) => {
  // update badge counter
  if (request.cmd === 'popup-request') {
    const tabId = sender.tab.id;
    config.get(['badge']).then(({badge}) => {
      if (badge) {
        chrome.action.getBadgeText({tabId}, text => {
          if (text !== 'E') {
            text = text ? parseInt(text) : 0;
            text = String(text + 1);
          }
          chrome.action.setBadgeText({
            tabId,
            text
          });
        });
      }
    });
  }
  else if (request.cmd === 'state') {
    if (sender.tab) {
      config.get(['enabled']).then(({enabled}) => {
        let state = 4;
        if (enabled && request.active) {
          state = 1;
        }
        else if (enabled && request.active === false) {
          state = 2;
        }
        else if (enabled === false && request.active === false) {
          state = 3;
        }
        const path = {
          16: 'data/icons/state/' + state + '/16.png',
          32: 'data/icons/state/' + state + '/32.png'
        };
        chrome.action.setIcon({
          tabId: sender.tab.id,
          path
        });
        chrome.action.setTitle({
          tabId: sender.tab.id,
          title: chrome.i18n.getMessage('bg_msg_state_' + state)
        });
      });
    }
  }
});

// on startup (run once)
{
  const once = () => {
    // icon
    icon();
    // badge color
    config.get(['badge-color']).then(prefs => chrome.action.setBadgeBackgroundColor({
      color: prefs['badge-color']
    }));
  };
  chrome.runtime.onInstalled.addListener(once);
  chrome.runtime.onStartup.addListener(once);
}



=== File: ./v3/worker.js ===
----------------------------------------
/* global config */

if (typeof importScripts !== 'undefined') {
  self.importScripts('config.js');
  self.importScripts('badge.js');
}

/* enable or disable the blocker */
const activate = async () => {
  if (activate.busy) {
    return;
  }
  activate.busy = true;

  const prefs = await config.get(['enabled', 'top-hosts']);
  try {
    await chrome.scripting.unregisterContentScripts();

    if (prefs.enabled) {
      // exception list
      const th = [];
      for (const hostname of prefs['top-hosts']) {
        try {
          await activate.test('*://' + hostname + '/*');
          th.push('*://' + hostname + '/*');
        }
        catch (e) {
          console.warn('Cannot use ' + hostname + ' rule. Reason: ' + e.message);
        }
        try {
          await activate.test('*://*.' + hostname + '/*');
          th.push('*://*.' + hostname + '/*');
        }
        catch (e) {
          console.warn('Cannot use *.' + hostname + ' rule. Reason: ' + e.message);
        }
      }

      const props = {
        'matches': ['*://*/*'],
        'excludeMatches': th,
        'allFrames': true,
        'matchOriginAsFallback': true,
        'runAt': 'document_start'
      };

      await chrome.scripting.registerContentScripts([{
        'id': 'main',
        'js': ['/data/inject/block/main.js'],
        'world': 'MAIN',
        ...props
      }, {
        'id': 'isolated',
        'js': ['/data/inject/block/isolated.js'],
        'css': ['/data/inject/block/isolated.css'],
        'world': 'ISOLATED',
        ...props
      }]);

      // only on top frame
      if (th.length) {
        await chrome.scripting.registerContentScripts([{
          'id': 'disabled',
          'js': ['/data/inject/disabled.js'],
          'world': 'ISOLATED',
          'matches': th,
          'runAt': 'document_start'
        }]);
      }
    }
  }
  catch (e) {
    await chrome.scripting.unregisterContentScripts();

    const props = {
      'matches': ['*://*/*'],
      'allFrames': true,
      'matchOriginAsFallback': true,
      'runAt': 'document_start'
    };
    await chrome.scripting.registerContentScripts([{
      'id': 'main',
      'js': ['/data/inject/block/main.js'],
      'world': 'MAIN',
      ...props
    }, {
      'id': 'isolated',
      'js': ['/data/inject/block/isolated.js'],
      'world': 'ISOLATED',
      ...props
    }]);

    chrome.action.setBadgeBackgroundColor({color: '#b16464'});
    chrome.action.setBadgeText({text: 'E'});
    chrome.action.setTitle({title: chrome.i18n.getMessage('bg_msg_reg') + '\n\n' + e.message});
    console.error('Blocker Registration Failed', e);
  }
  activate.busy = false;
};
activate.test = async pattern => {
  await chrome.scripting.registerContentScripts([{
    'id': 'test',
    'js': ['/data/inject/test.js'],
    'world': 'MAIN',
    'matches': ['*://*/*'],
    'excludeMatches': [pattern]
  }]);
  await chrome.scripting.unregisterContentScripts({
    ids: ['test']
  }).catch(() => {});
};
chrome.runtime.onStartup.addListener(activate);
chrome.runtime.onInstalled.addListener(activate);
chrome.storage.onChanged.addListener(ps => {
  if (ps.enabled || ps['top-hosts']) {
    activate();
  }
});

chrome.runtime.onMessage.addListener((request, sender, response) => {
  if (request.cmd === 'popup-request') {
    config.get(['silent', 'issue', 'placement']).then(prefs => {
      if (prefs.issue === false) {
        return;
      }
      const {hostname} = new URL(sender.tab.url);
      if (prefs.silent.includes(hostname)) {
        return;
      }
      request.frameId = sender.frameId;
      chrome.tabs.sendMessage(sender.tab.id, request, response => {
        chrome.runtime.lastError;
        // iframe is not present or it is not loaded yet

        if (response !== true) {
          chrome.scripting.executeScript({
            target: {
              tabId: sender.tab.id
            },
            func: (request, tabId, placement) => {
              /* global scope */
              scope.requests.push(request);

              const post = () => {
                if (scope.container?.ready) {
                  scope.container.contentWindow.postMessage({
                    requests: [...scope.requests]
                  }, chrome.runtime.getURL('*'));
                  scope.requests.length = 0;
                }
              };
              // what if there is an element with id "container" in DOM
              if (!scope.container) {
                const container = scope.container = document.createElement('iframe');
                container.classList.add('pp-blocker');
                container.style = `
                  ${placement.includes('t') ? 'top' : 'bottom'}: 5px !important;
                  ${placement.includes('l') ? 'left' : 'right'}: 5px !important;
                `;
                container.addEventListener('load', () => {
                  container.ready = true;
                  post();
                }, {once: true});
                const args = new URLSearchParams(location.search);
                args.set('tabId', tabId);
                args.set('parent', location.href);
                args.set('placement', placement);
                container.src = chrome.runtime.getURL('/data/ui/index.html') + '?' + args.toString();
                // do not attach to body to make sure the notification is visible
                document.documentElement.append(container);
              }
              post();
            },
            args: [request, sender.tab.id, prefs.placement]
          });
        }
      });
    });
  }
  // popup is accepted
  else if (request.cmd === 'popup-accepted') {
    if (request.url.startsWith('http') || request.url.startsWith('ftp')) {
      config.get(['simulate-allow']).then(prefs => {
        if (prefs['simulate-allow'] && request.sameContext !== true) {
          chrome.tabs.create({
            url: request.url,
            openerTabId: sender.tab.id
          });
        }
        else {
          chrome.tabs.sendMessage(sender.tab.id, request, {
            frameId: request.frameId
          });
        }
      });
    }
    else {
      chrome.tabs.sendMessage(sender.tab.id, request, {
        frameId: request.frameId
      });
    }
  }
  // resize
  else if (request.cmd === 'popup-resize') {
    chrome.scripting.executeScript({
      target: {
        tabId: sender.tab.id
      },
      func: height => {
        if (scope.container) {
          scope.container.style.setProperty('--height', height + 'px');
        }
      },
      args: [request.height]
    });
  }
  // terminate
  else if (request.cmd === 'popup-terminate') {
    chrome.scripting.executeScript({
      target: {
        tabId: sender.tab.id
      },
      func: () => {
        scope.container.remove();
        scope.container = null;
      }
    });
  }
  else if (request.cmd === 'run-records') {
    chrome.scripting.executeScript({
      target: {
        tabId: sender.tab.id,
        frameIds: [sender.frameId]
      },
      world: 'MAIN',
      func: (records, href, args) => {
        if (records) {
          const w = window.open(...args);
          for (const record of records) {
            let c = w;
            for (const name of record.tree) {
              c = c[name];
            }
            const {method, args} = record.action;
            if (method) {
              c[method](...args);
            }
            const {prop, value} = record.action;
            if (prop) {
              c[prop] = value;
            }
          }
        }
        else {
          const a = document.createElement('a');
          a.target = '_blank';
          a.href = href;
          a.click();
        }
      },
      args: [request.records || false, request.url, request.args]
    }).finally(() => response(true));

    return true;
  }
  // open a new tab or redirect current tab
  else if (request.cmd === 'popup-redirect' || request.cmd === 'open-tab') {
    const url = request.url;
    // validating request before proceeding
    if (url.startsWith('http') || url.startsWith('ftp') || url === 'about:blank') {
      if (request.cmd === 'popup-redirect') {
        // make sure redirect prevent is off (this needs {frameId: 1} when Edge supports it)
        chrome.tabs.sendMessage(sender.tab.id, {
          cmd: 'release-beforeunload'
        }, () => {
          chrome.tabs.update(sender.tab.id, {
            url
          });
        });
      }
      else {
        chrome.tabs.create({
          url,
          active: false,
          index: sender.tab.index + 1
        });
      }
    }
  }
  else if (request.cmd === 'white-list') {
    config.get(['whitelist-mode', 'top-hosts', 'popup-hosts']).then(prefs => {
      const mode = prefs['whitelist-mode'];

      const {hostname} = new URL(mode === 'popup-hosts' ? request.url : request.parent);
      prefs[mode].push(hostname);
      prefs[mode] = prefs[mode].filter((h, i, l) => l.indexOf(h) === i);
      chrome.storage.local.set({
        [mode]: prefs[mode]
      });
      if (mode === 'top-hosts') {
        chrome.scripting.executeScript({
          target: {
            tabId: sender.tab.id,
            allFrames: true
          },
          func: () => {
            if (typeof prefs !== 'undefined') {
              prefs.enabled = false;
            }
          }
        });
      }
    });
  }
  else if (request.method === 'echo') {
    response(true);
  }
});

/* commands */
chrome.commands.onCommand.addListener(cmd => chrome.tabs.query({
  active: true,
  lastFocusedWindow: true
}, tabs => tabs && tabs[0] && chrome.tabs.sendMessage(tabs[0].id, {
  cmd
})));

/* FAQs & Feedback */
{
  chrome.management = chrome.management || {
    getSelf(c) {
      c({installType: 'normal'});
    }
  };
  if (navigator.webdriver !== true) {
    const {homepage_url: page, name, version} = chrome.runtime.getManifest();
    chrome.runtime.onInstalled.addListener(({reason, previousVersion}) => {
      chrome.management.getSelf(({installType}) => installType === 'normal' && chrome.storage.local.get({
        'faqs': true,
        'last-update': 0
      }, prefs => {
        if (reason === 'install' || (prefs.faqs && reason === 'update')) {
          const doUpdate = (Date.now() - prefs['last-update']) / 1000 / 60 / 60 / 24 > 45;
          if (doUpdate && previousVersion !== version) {
            chrome.tabs.query({active: true, lastFocusedWindow: true}, tbs => chrome.tabs.create({
              url: page + '?version=' + version + (previousVersion ? '&p=' + previousVersion : '') + '&type=' + reason,
              active: reason === 'install',
              ...(tbs && tbs.length && {index: tbs[0].index + 1})
            }));
            chrome.storage.local.set({'last-update': Date.now()});
          }
        }
      }));
    });
    chrome.runtime.setUninstallURL(page + '?rd=feedback&name=' + encodeURIComponent(name) + '&version=' + version);
  }
}



=== File: ./v3/config.js ===
----------------------------------------
'use strict';

const config = {
  'enabled': true,
  'numbers': 5,
  'timeout': 30,
  'countdown': 5,
  'default-action': 'ignore',
  'immediate-action': false,
  'simulate-allow': true,
  'focus-popup': false,
  'aggressive': false,
  'wot': false,
  'domain': false, // allow popups from the same domain
  'badge': true,
  'badge-color': '#6e6e6e',
  'whitelist-mode': 'popup-hosts',
  'placement': 'tr',
  // the following hostnames can issue popup on every website
  'popup-hosts': [
    'google.com', 'bing.com', 't.co', 'twitter.com', 'disqus.com', 'login.yahoo.com',
    'mail.google.com', 'doubleclick.net'
  ],
  // popup blocker is disabled in the following hostname tabs
  'top-hosts': ['github.com', 'twitter.com', 'webextension.org', 'google.com', 'paypal.com'],
  // these protocols are accepted
  'protocols': ['magnet:'],
  'silent': [],
  'rules': {},
  'issue': true,
  'block-page-redirection': false,
  'block-page-redirection-hostnames': [],
  'block-page-redirection-same-origin': true,
  'target': true,
  'version': null,
  'faqs': true,
  'last-update': 0
};

config.get = arr => new Promise(resolve => {
  const ps = arr.reduce((p, c) => {
    p[c] = config[c];
    return p;
  }, {});
  chrome.storage.local.get(ps, resolve);
});



=== File: ./v3/manifest.json ===
----------------------------------------
{
  "name": "Popup Blocker (strict)",
  "description": "__MSG_app_description__",
  "version": "0.8.8",
  "manifest_version": 3,
  "default_locale": "en",
  "permissions": [
    "storage",
    "scripting"
  ],
  "host_permissions": [
    "<all_urls>"
  ],
  "background": {
    "service_worker": "worker.js",
    "scripts": [
      "config.js",
      "badge.js",
      "worker.js"
    ]
  },
  "action": {
    "default_popup": "/data/popup/index.html"
  },
  "homepage_url": "https://webextension.org/listing/popup-blocker.html",
  "icons": {
    "16": "/data/icons/16.png",
    "32": "/data/icons/32.png",
    "48": "/data/icons/48.png",
    "64": "/data/icons/64.png",
    "128": "/data/icons/128.png",
    "256": "/data/icons/256.png",
    "512": "/data/icons/512.png"
  },
  "options_ui": {
    "page": "/data/options/index.html",
    "open_in_tab": true
  },
  "web_accessible_resources": [{
    "resources": ["data/ui/index.html"],
    "matches": ["*://*/*"]
  }],
  "commands": {
    "_execute_action": {
      "description": "Execute Action"
    },
    "allow-last-request": {
      "description": "__MSG_context_item2__"
    },
    "deny-last-request": {
      "description": "__MSG_context_item3__"
    },
    "background-last-request": {
      "description": "__MSG_context_item4__"
    },
    "redirect-last-request": {
      "description": "__MSG_context_item5__"
    },
    "focus-last-request": {
      "description": "__MSG_context_item6__"
    }
  },
  "browser_specific_settings": {
    "gecko": {
      "id": "{de22fd49-c9ab-4359-b722-b3febdc3a0b0}",
      "strict_min_version": "128.0"
    },
    "gecko_android": {
      "strict_min_version": "128.0"
    }
  }
}



=== File: ./v3/_locales/pt_BR/messages.json ===
----------------------------------------
{
  "app_description": {
    "message": "Bloqueia rigorosamente todas as solicitações pop-up de qualquer site"
  },
  "context_item2": {
    "message": "Permitir a última solicitação pop-up"
  },
  "context_item3": {
    "message": "Negar a última solicitação pop-up"
  },
  "context_item4": {
    "message": "Abrir último pedido de pop-up em uma aba em segundo plano"
  },
  "context_item5": {
    "message": "Redirecionar aba atual ao último pedido de pop-up"
  },
  "context_item6": {
    "message": "Mover foco da página para a última solicitação de pop-up"
  },
  "options_item1": {
    "message": "Número máximo de solicitações de pop-up para uma única página"
  },
  "options_item2": {
    "message": "Tempo limite para exibição de cada pop-up (em segundos)"
  },
  "options_item3": {
    "message": "Não bloquear solicitações pop-up da mesma origem"
  },
  "options_item5": {
    "message": "Exibir o número total de solicitações bloqueadas no ícone da barra de ferramentas"
  },
  "options_item6": {
    "message": "Não bloquear pop-ups destas origens:"
  },
  "options_item7": {
    "message": "Não bloquear pop-ups destas páginas:"
  },
  "options_item8": {
    "message": "Pra essa mudança fazer efeito, atualize a aba."
  },
  "options_item9": {
    "message": "Contagem regressiva para executar a última ação (em segundos)"
  },
  "options_item10": {
    "message": "Use o número zero para desativar a contagem regressiva para executar a ação anterior."
  },
  "options_item13": {
    "message": "Fontes da lista negra (modo de operação reversa):"
  },
  "options_item15": {
    "message": "Previne o redirecionamento de página por 2 segundos após a solicitação de um pop-up"
  },
  "options_item17": {
    "message": "Ação padrão quando um pop-up é solicitado"
  },
  "options_item18": {
    "message": "Não fazer nada"
  },
  "options_item19": {
    "message": "Negar solicitação"
  },
  "options_item20": {
    "message": "Abrir em segundo plano"
  },
  "options_item21": {
    "message": "Página de redirecionamento"
  },
  "options_item22": {
    "message": "Cor do emblema de contagem"
  },
  "options_item23": {
    "message": "Ignorar notificação pop-up quando possível (não recomendado)"
  },
  "options_item25": {
    "message": "Descrições"
  },
  "options_item26": {
    "message": "Exibir página de FAQs nas atualizações"
  },
  "options_item27": {
    "message": "Não bloquear estes protocolos:"
  },
  "options_item28": {
    "message": "Permitir redirecionamento de página para as seguintes origens:"
  },
  "options_item29": {
    "message": "Permitir redirecionamento de página para a mesma origem"
  },
  "options_item30": {
    "message": "Simular o botão 'Permitir' para prevenir que o bloqueador interno de pop-up do seu navegador bloqueie esses pedidos"
  },
  "options_item31": {
    "message": "Quando o botão \"confiar\" é pressionado:"
  },
  "options_item32": {
    "message": "Não bloquear mais a origem do pop-up"
  },
  "options_item33": {
    "message": "Permitir que a página principal mostre qualquer pop-up"
  },
  "options_item34": {
    "message": "Silenciar notificações nestes sites:"
  },
  "options_item35": {
    "message": "Aplicar as seguintes regras CSS personalizadas à interface do popup:"
  },
  "options_item40": {
    "message": "Foca a interface pop-up recém-gerada. Você pode então usar atalhos ou a tecla ESC para ocultar"
  },
  "options_item36": {
    "message": "Habilitar detecção agressiva de IFrame estático"
  },
  "options_item37": {
    "message": "Quando este modo está ativado, a extensão instala um observador de mutação para monitorar IFrames estáticos com atributos 'JavaScript:' src. Isso aumenta o poder de bloqueio, mas tem desvantagens de desempenho."
  },
  "options_item38": {
    "message": "Redirecionamento de página"
  },
  "options_item39": {
    "message": "Diversos"
  },
  "options_item41": {
    "message": "Ação em uma nova solicitação pop-up"
  },
  "options_item42": {
    "message": "Posição do pop-up na página"
  },
  "options_item43": {
    "message": "Superior esquerdo"
  },
  "options_item44": {
    "message": "Superior direito"
  },
  "options_item45": {
    "message": "Inferior esquerdo"
  },
  "options_item46": {
    "message": "Inferior direito"
  },
  "options_support": {
    "message": "Apoie o desenvolvimento"
  },
  "options_import": {
    "message": "Importar preferências"
  },
  "options_export": {
    "message": "Exportar preferências"
  },
  "options_reset": {
    "message": "Redefinir padrão"
  },
  "options_save": {
    "message": "Salvar opções"
  },
  "options_msg": {
    "message": "As opções foram salvas"
  },
  "options_review": {
    "message": "Avaliação no YouTube"
  },
  "options_page": {
    "message": "Página de Perguntas Frequentes"
  },
  "options_t_1": {
    "message": "Lista de nomes de servidores separados por vírgulas (ex.: www.google.com, www.yahoo.com)"
  },
  "options_t_2": {
    "message": "Lista de nomes de domínios separados por vírgulas (ex.: www.google.com, www.yahoo.com)"
  },
  "options_t_3": {
    "message": "Um objeto JSON que orienta a extensão na execução de uma ação específica em resposta a uma solicitação pop-up, determinada por sua URL. Leia a página de perguntas frequentes para obter exemplos."
  },
  "ui_msg": {
    "message": "O pop-up foi solicitado por"
  },
  "ui_button_allow": {
    "message": "Permitir este popup (Alt + Shift + A ou Control + Option + A)"
  },
  "ui_button_allow_value": {
    "message": "Permitir"
  },
  "ui_button_redirect": {
    "message": "Redirecione a página atual para o novo destino em vez de abri-la em uma nova aba ou popup (Alt + Shift + R ou Control + Option + R)"
  },
  "ui_button_redirect_value": {
    "message": "Redirecionar"
  },
  "ui_button_background": {
    "message": "Abra o link em uma aba em segundo plano (Alt + Shift + B ou Control + Option + B)"
  },
  "ui_button_background_value": {
    "message": "Segundo plano"
  },
  "ui_button_deny": {
    "message": "Recusar a abertura do popup ou abertura de aba (Alt + Shift + D ou Control + Option + D)"
  },
  "ui_button_deny_value": {
    "message": "Negar"
  },
  "ui_button_trust": {
    "message": "Coloque este domínio na lista de permissões para abrir popups (Alt + Shift + T ou Control + Option + T)"
  },
  "ui_button_trust_value": {
    "message": "Confiar"
  },
  "ui_button_trust_confirm": {
    "message": "Clique para confirmar"
  },
  "bg_msg_state_1": {
    "message": "Popup Blocker (strict) está globalmente habilitado e protege esta aba"
  },
  "bg_msg_state_2": {
    "message": "Popup Blocker (strict) está ativado globalmente, mas não protege esta aba"
  },
  "bg_msg_state_3": {
    "message": "Popup Blocker (strict) está desabilitado globalmente e não protege esta aba"
  },
  "bg_msg_state_4": {
    "message": "Popup Blocker (strict) está globalmente desativado, mas protege esta aba"
  },
  "bg_msg_reg": {
    "message": "O registro do filtro de bloqueio falhou devido a uma regra formatada incorretamente. Use a página de opções para corrigi-lo."
  },
  "pp_enabled_g": {
    "message": "Habilitado (Global)"
  },
  "pp_enabled_c": {
    "message": "Ativado (Este domínio)"
  },
  "pp_silent": {
    "message": "Mostrar notificações"
  },
  "pp_ignore": {
    "message": "Executar Ação se possível"
  },
  "pp_redirect": {
    "message": "Bloquear redirecionamento de página."
  },
  "pp_last_request": {
    "message": "Última solicitação"
  },
  "pp_test": {
    "message": "Testar boqueador"
  },
  "pp_homepage": {
    "message": "Página inicial"
  },
  "pp_options": {
    "message": "Opções"
  },
  "pp_shadow": {
    "message": "Usar sombra"
  },
  "pp_allow": {
    "message": "Permitir"
  },
  "pp_block": {
    "message": "Bloquear"
  },
  "pp_health": {
    "message": "O script em segundo plano parece não responder. Deseja tentar reiniciar a extensão?"
  }
}



=== File: ./v3/_locales/ko/messages.json ===
----------------------------------------
{
  "app_description": {
    "message": "웹사이트의 모든 팝업 요청을 엄격하게 차단하십시오."
  }
}



=== File: ./v3/_locales/en/messages.json ===
----------------------------------------
{
  "app_description": {
    "message": "Strictly block all popup requests from any website"
  },
  "context_item2": {
    "message": "Allow the last popup request"
  },
  "context_item3": {
    "message": "Deny the last popup request"
  },
  "context_item4": {
    "message": "Open the last popup request in a background tab"
  },
  "context_item5": {
    "message": "Redirect the current tab to the last popup request"
  },
  "context_item6": {
    "message": "Move focus from page to the last popup request"
  },
  "options_item1": {
    "message": "Maximum number of popup requests for a single page"
  },
  "options_item2": {
    "message": "Timeout for displaying each popup (in seconds)"
  },
  "options_item3": {
    "message": "Do not block popup requests from same origin"
  },
  "options_item5": {
    "message": "Display the total number of blocked requests in the toolbar icon"
  },
  "options_item6": {
    "message": "Do not block popups of these origins:"
  },
  "options_item7": {
    "message": "Do not block any popup on these pages:"
  },
  "options_item8": {
    "message": "For this change to take effect, refresh the tab."
  },
  "options_item9": {
    "message": "Countdown for performing the last action (in seconds)"
  },
  "options_item10": {
    "message": "Use zero number to disable the countdown to perform the previous action."
  },
  "options_item13": {
    "message": "Blacklist sources (reverse operation mode):"
  },
  "options_item15": {
    "message": "Prevent page redirection for 2 seconds after a popup is requested"
  },
  "options_item17": {
    "message": "Default action when a popup is requested"
  },
  "options_item18": {
    "message": "Do nothing"
  },
  "options_item19": {
    "message": "Deny request"
  },
  "options_item20": {
    "message": "Open in background"
  },
  "options_item21": {
    "message": "Redirect page"
  },
  "options_item22": {
    "message": "Badge background-color"
  },
  "options_item23": {
    "message": "Ignore popup notification when possible (not recommended)"
  },
  "options_item25": {
    "message": "Descriptions"
  },
  "options_item26": {
    "message": "Display FAQs page on updates"
  },
  "options_item27": {
    "message": "Do not block these protocols:"
  },
  "options_item28": {
    "message": "Allow page redirection to the following origins:"
  },
  "options_item29": {
    "message": "Allow page redirection to the same origin"
  },
  "options_item30": {
    "message": "Simulate the 'allow' button to prevent your browser's internal popup blocker from blocking these requests"
  },
  "options_item31": {
    "message": "When \"trust\" button is pressed:"
  },
  "options_item32": {
    "message": "Do not block the popup origin anymore"
  },
  "options_item33": {
    "message": "Allow the top-level page to show any popups"
  },
  "options_item34": {
    "message": "Mute notifications on these hostnames:"
  },
  "options_item35": {
    "message": "Apply the following custom CSS rules to the popup interface:"
  },
  "options_item40": {
    "message": "Focus the newly generated popup interface. You can then use shortcuts or the Escape key to hide"
  },
  "options_item36": {
    "message": "Enable aggressive static IFrame detection"
  },
  "options_item37": {
    "message": "When this mode is enabled, the extension installs a mutation observer to monitor static IFrames with 'JavaScript:' src attributes. This enhances the blocking power but has performance drawbacks."
  },
  "options_item38": {
    "message": "Page Redirection"
  },
  "options_item39": {
    "message": "Misc"
  },
  "options_item41": {
    "message": "Action on a new popup request"
  },
  "options_item42": {
    "message": "Popup position on page"
  },
  "options_item43": {
    "message": "Top Left"
  },
  "options_item44": {
    "message": "Top Right"
  },
  "options_item45": {
    "message": "Bottom Left"
  },
  "options_item46": {
    "message": "Bottom Right"
  },
  "options_support": {
    "message": "Support Development"
  },
  "options_import": {
    "message": "Import Preferences"
  },
  "options_export": {
    "message": "Export Preferences"
  },
  "options_reset": {
    "message": "Reset to Defaults"
  },
  "options_save": {
    "message": "Save Options"
  },
  "options_msg": {
    "message": "Options are saved"
  },
  "options_review": {
    "message": "YouTube Review"
  },
  "options_page": {
    "message": "FAQs Page"
  },
  "options_t_1": {
    "message": "comma-separated list of hostnames (e.g.: www.google.com, www.yahoo.com)"
  },
  "options_t_2": {
    "message": "comma-separated list of domains (e.g.: google.com, yahoo.com)"
  },
  "options_t_3": {
    "message": "A JSON object that guides the extension in executing a specific action in response to a popup request, determined by its URL. Read the FAQs page for examples."
  },
  "ui_msg": {
    "message": "Popup is requested for"
  },
  "ui_button_allow": {
    "message": "Allow this popup (Alt + Shift + A or Control + Option + A)"
  },
  "ui_button_allow_value": {
    "message": "allow"
  },
  "ui_button_redirect": {
    "message": "Redirect current page to the new destination instead of opening it in a new tab or popup (Alt + Shift + R or Control + Option + R)"
  },
  "ui_button_redirect_value": {
    "message": "redirect"
  },
  "ui_button_background": {
    "message": "Open the link in a background tab (Alt + Shift + B or Control + Option + B)"
  },
  "ui_button_background_value": {
    "message": "background"
  },
  "ui_button_deny": {
    "message": "Decline the popup or tab opening (Alt + Shift + D or Control + Option + D)"
  },
  "ui_button_deny_value": {
    "message": "deny"
  },
  "ui_button_trust": {
    "message": "White-list this domain to open popups (Alt + Shift + T or Control + Option + T)"
  },
  "ui_button_trust_value": {
    "message": "trust"
  },
  "ui_button_trust_confirm": {
    "message": "Click to Confirm"
  },
  "bg_msg_state_1": {
    "message": "Popup Blocker (strict) is globally enabled and protects this tab"
  },
  "bg_msg_state_2": {
    "message": "Popup Blocker (strict) is globally enabled but does not protect this tab"
  },
  "bg_msg_state_3": {
    "message": "Popup Blocker (strict) is globally disabled and does not protect this tab"
  },
  "bg_msg_state_4": {
    "message": "Popup Blocker (strict) is globally disabled but protects this tab"
  },
  "bg_msg_reg": {
    "message": "Registering blocking filter failed due to an improperly formatted rule. Use the options page to fix it."
  },
  "pp_enabled_g": {
    "message": "Enabled (Globally)"
  },
  "pp_enabled_c": {
    "message": "Enabled (This Domain)"
  },
  "pp_silent": {
    "message": "Display Notifications"
  },
  "pp_ignore": {
    "message": "Run Action when Possible"
  },
  "pp_redirect": {
    "message": "Block Page Redirection"
  },
  "pp_last_request": {
    "message": "Last Request"
  },
  "pp_test": {
    "message": "Test Blocker"
  },
  "pp_homepage": {
    "message": "Homepage"
  },
  "pp_options": {
    "message": "Options"
  },
  "pp_shadow": {
    "message": "Use Shadow"
  },
  "pp_allow": {
    "message": "Allow"
  },
  "pp_block": {
    "message": "Block"
  },
  "pp_health": {
    "message": "The background script seems to be unresponsive. Do you want to try restarting the extension?"
  }
}



=== File: ./v3/_locales/tr/messages.json ===
----------------------------------------
{
  "app_description": {
    "message": "Bir siteden gelen tüm pop-up isteklerini kesinlikle engelle"
  },
  "context_item2": {
    "message": "Son pop-up isteğine izin ver"
  },
  "context_item3": {
    "message": "Son popup isteğini reddet"
  },
  "context_item4": {
    "message": "Son popup isteğini bir arka plan sekmesinde aç"
  },
  "context_item5": {
    "message": "Geçerli sekmeyi son popup isteğine yönlendir"
  },
  "context_item6": {
    "message": "Odağı sayfadan son popup isteğine taşı"
  },
  "options_item1": {
    "message": "Tek bir sayfa için maksimum popup isteği sayısı"
  },
  "options_item2": {
    "message": "Her popup'ın görüntülenmesi için zaman aşımı (saniye cinsinden)"
  },
  "options_item3": {
    "message": "Aynı kaynaktan gelen popup isteklerini engelleme"
  },
  "options_item5": {
    "message": "Engellenen toplam istek sayısını araç çubuğu simgesinde görüntüle"
  },
  "options_item6": {
    "message": "Bu kaynakların popup'larını engelleme:"
  },
  "options_item7": {
    "message": "Bu sayfalardaki hiçbir pop-up'ı engelleme:"
  },
  "options_item8": {
    "message": "Bu değişikliğin etkili olması için sekmeyi yenile."
  },
  "options_item9": {
    "message": "Son eylemi gerçekleştirmek için geri sayım (saniye cinsinden)"
  },
  "options_item10": {
    "message": "Önceki eylemi gerçekleştirmek üzere geri sayımı devre dışı bırakmak için sıfır sayısını kullan."
  },
  "options_item13": {
    "message": "Kara liste kaynakları (ters çalışma modu):"
  },
  "options_item15": {
    "message": "Bir popup açıldıktan sonra 2 saniye boyunca sayfanın yeniden yönlendirilmesini önle"
  },
  "options_item17": {
    "message": "Bir popup açıldığında yapılacak varsayılan eylem"
  },
  "options_item18": {
    "message": "Hiçbir şey yapma"
  },
  "options_item19": {
    "message": "Talebi reddet"
  },
  "options_item20": {
    "message": "Arkaplanda aç"
  },
  "options_item21": {
    "message": "Sayfayı yönlendir"
  },
  "options_item22": {
    "message": "Rozet arka plan rengi"
  },
  "options_item23": {
    "message": "Mümkünse popup bildirimini yoksay (önerilmez)"
  },
  "options_item25": {
    "message": "Açıklamalar"
  },
  "options_item26": {
    "message": "Güncellemelerde SSS sayfasını görüntüle"
  },
  "options_item27": {
    "message": "Bu protokolleri engelleme:"
  },
  "options_item28": {
    "message": "Aşağıdaki kaynaklara sayfa yönlendirmesine izin ver:"
  },
  "options_item29": {
    "message": "Sayfanın aynı kaynağa yeniden yönlendirilmesine izin ver"
  },
  "options_item30": {
    "message": "Tarayıcının dahili popup engelleyicisinin bu istekleri engellemesini önlemek için 'izin ver' düğmesini simüle et"
  },
  "options_item31": {
    "message": "“Güven” düğmesine basıldığında:"
  },
  "options_item32": {
    "message": "Pop-up kaynağını artık engelleme"
  },
  "options_item33": {
    "message": "Üst düzey sayfanın herhangi bir pop-up göstermesine izin ver"
  },
  "options_item34": {
    "message": "Bu host adlarındaki bildirimleri sessize al:"
  },
  "options_item35": {
    "message": "Popup arayüzüne aşağıdaki özel CSS kurallarını uygula:"
  },
  "options_item40": {
    "message": "Yeni oluşturulan popup arayüzüne odaklan. Daha sonra gizlemek için kısayolları veya Escape tuşunu kullan"
  },
  "options_item36": {
    "message": "Agresif statik IFrame algılamayı etkinleştir"
  },
  "options_item37": {
    "message": "Bu mod etkinleştirildiğinde, eklenti 'JavaScript:' src niteliklerine sahip statik IFrame'leri izlemek için bir mutasyon gözlemcisi yükler. Bu, engelleme gücünü artırır ancak performans dezavantajları vardır."
  },
  "options_item38": {
    "message": "Sayfa Yönlendirme"
  },
  "options_item39": {
    "message": "Diğer"
  },
  "options_item41": {
    "message": "Yeni bir popup isteğinde yapılacak eylem"
  },
  "options_item42": {
    "message": "Sayfadaki popup konumu"
  },
  "options_item43": {
    "message": "Sol Üst"
  },
  "options_item44": {
    "message": "Sağ Üst"
  },
  "options_item45": {
    "message": "Sol Alt"
  },
  "options_item46": {
    "message": "Sağ Alt"
  },
  "options_support": {
    "message": "Geliştirme Desteği"
  },
  "options_import": {
    "message": "İçe Aktarma Tercihleri"
  },
  "options_export": {
    "message": "Dışa Aktarma Tercihleri"
  },
  "options_reset": {
    "message": "Varsayılanlara Sıfırla"
  },
  "options_save": {
    "message": "Ayarları Kaydet"
  },
  "options_msg": {
    "message": "Ayarlar kaydedildi"
  },
  "options_review": {
    "message": "YouTube İncelemesi"
  },
  "options_page": {
    "message": "SSS Sayfası"
  },
  "options_t_1": {
    "message": "virgülle ayrılmış sunucu adları listesi (örnek: www.google.com, www.yahoo.com)"
  },
  "options_t_2": {
    "message": "virgülle ayrılmış alan adları listesi (örnek: google.com, yahoo.com)"
  },
  "options_t_3": {
    "message": "Belirli bir URL'ye göre popup isteğine yanıt olarak bir işlemi yürütmesi için uzantıya yol gösteren bir JSON nesnesi. Örnekler için SSS sayfasını okuyun."
  },
  "ui_msg": {
    "message": "Aşağıdakiler için popup istenir"
  },
  "ui_button_allow": {
    "message": "Bu popup'a izin ver (Alt + Shift + A veya Control + Option + A)"
  },
  "ui_button_allow_value": {
    "message": "izin ver"
  },
  "ui_button_redirect": {
    "message": "Mevcut sayfayı yeni bir sekmede veya popup'ta açmak yerine yeni hedefe yönlendir (Alt + Shift + R veya Control + Option + R)"
  },
  "ui_button_redirect_value": {
    "message": "yönlendir"
  },
  "ui_button_background": {
    "message": "Bağlantıyı bir arka plan sekmesinde aç (Alt + Shift + B veya Control + Option + B)"
  },
  "ui_button_background_value": {
    "message": "arkaplan"
  },
  "ui_button_deny": {
    "message": "Popup veya sekme açılışını reddet (Alt + Shift + D veya Control + Option + D)"
  },
  "ui_button_deny_value": {
    "message": "reddet"
  },
  "ui_button_trust": {
    "message": "Popup'ları açmak için bu alan adını beyaz listeye al (Alt + Shift + T veya Control + Option + T)"
  },
  "ui_button_trust_value": {
    "message": "güven"
  },
  "ui_button_trust_confirm": {
    "message": "Onaylamak için Tıkla"
  },
  "bg_msg_state_1": {
    "message": "Popup Blocker (strict) genel olarak etkinleştirilmiştir ve bu sekmeyi korur"
  },
  "bg_msg_state_2": {
    "message": "Popup Blocker (strict) genel olarak etkinleştirilmiştir ancak bu sekmeyi korumaz"
  },
  "bg_msg_state_3": {
    "message": "Popup Blocker (strict) genel olarak devre dışıdır ve bu sekmeyi korumaz"
  },
  "bg_msg_state_4": {
    "message": "Popup Blocker (strict) genel olarak devre dışıdır ancak bu sekmeyi korur"
  },
  "bg_msg_reg": {
    "message": "Yanlış biçimlendirilmiş bir kural nedeniyle engelleme filtresinin kaydedilmesi başarısız oldu. Düzeltmek için ayarlar sayfasını kullan."
  },
  "pp_enabled_g": {
    "message": "Etkin (Global)"
  },
  "pp_enabled_c": {
    "message": "Etkin (Bu Alan Adında)"
  },
  "pp_silent": {
    "message": "Ekran Bildirimleri"
  },
  "pp_ignore": {
    "message": "Mümkünse Harekete Geç"
  },
  "pp_redirect": {
    "message": "Sayfa Yönlendirmesini Engelle"
  },
  "pp_last_request": {
    "message": "Son İstek"
  },
  "pp_test": {
    "message": "Test Engelleyici"
  },
  "pp_homepage": {
    "message": "Ana sayfa"
  },
  "pp_options": {
    "message": "Ayarlar"
  },
  "pp_shadow": {
    "message": "Gölge Kullan"
  },
  "pp_allow": {
    "message": "İzin ver"
  },
  "pp_block": {
    "message": "Engelle"
  },
  "pp_health": {
    "message": "Arka plan betiği yanıt vermiyor gibi görünüyor. Eklentiyi yeniden başlatmayı denemek ister misiniz?"
  }
}



=== File: ./v3/data/ui/index.html ===
----------------------------------------
<!DOCTYPE html>
<html>
<head>
  <link rel="stylesheet" href="index.css">
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body>
  <template id="entry">
    <div class="ppblocker-div" data-badge=1 data-page=true tabindex="-1">
      <p data-id="info">https://example.com</p>
      <div>
        <input type="button" value="trust" data-i18n="ui_button_trust" data-cmd="white-list" accesskey="t">
        <div>
          <input type="button" class="sgyp" value="deny" data-i18n="ui_button_deny" data-cmd="popup-denied" accesskey="d">
          <input type="button" class="sgyp" value="background" data-i18n="ui_button_background" data-cmd="open-tab" accesskey="b">
          <input type="button" class="sgyp" value="redirect" data-i18n="ui_button_redirect" data-cmd="popup-redirect" accesskey="r">
          <input type="button" class="sgyp" value="allow" data-i18n="ui_button_allow" data-cmd="popup-accepted" accesskey="a">
          <input type="button" value="close" title="Close this notification" data-cmd="popup-close">
        </div>
      </div>
    </div>
  </template>
  <div id="container"></div>

  <script src="/config.js"></script>
  <script src="index.js"></script>
</body>
</html>



=== File: ./v3/data/ui/index.js ===
----------------------------------------
/* global config, URLPattern */
'use strict';

const args = new URLSearchParams(location.search);
let prefs = '';

const entry = document.getElementById('entry');
const urls = {};
const cookie = {
  get: host => {
    try { // error on incognito manifest v3
      return (localStorage.getItem(host) || '').split(';')[0];
    }
    catch (e) {
      return '';
    }
  },
  set: (host, cmd) => {
    try {
      localStorage.setItem(host, cmd + ';' + (Date.now() + 10 * 24 * 60 * 60 * 1000));
    }
    catch (e) {}
  },
  remove: host => {
    try {
      localStorage.removeItem(host);
    }
    catch (e) {}
  },
  clean() {
    const now = Date.now();
    try {
      for (const [key, value] of Object.entries(localStorage)) {
        if (value && value.includes(';')) {
          const date = Number(value.split(';')[1]);
          if (date < now) {
            localStorage.removeItem(key);
          }
        }
      }
    }
    catch (e) {}
  }
};
cookie.clean();

function Timer(callback, delay, ...args) {
  let timerId;
  let start;
  let remaining = delay;

  this.pause = function() {
    window.clearTimeout(timerId);
    remaining -= new Date() - start;
  };

  this.resume = function() {
    start = new Date();
    window.clearTimeout(timerId);
    timerId = window.setTimeout(callback, remaining, ...args);
    return timerId;
  };

  this.reset = function() {
    remaining = delay;
    this.resume();
  };

  return this.resume();
}

function remove(div, url) {
  delete urls[url || div.dataset.url];
  const e = div.previousElementSibling?.closest('.ppblocker-div') ||
    div.nextElementSibling?.closest('.ppblocker-div');

  const hasFocus = div.querySelector(':focus');

  div.remove();
  // focus the previous one
  if (e && hasFocus) {
    e.querySelector('[data-cmd=popup-close]').focus();
  }
  // remove iframe if no more popups present
  if (Object.keys(urls).length === 0) {
    chrome.runtime.sendMessage({
      cmd: 'popup-terminate'
    });
  }
}

function onClick(e) {
  const target = e.target;
  const cmd = target.dataset.cmd;

  if (cmd) {
    const div = target.closest('.ppblocker-div');
    if (div) {
      const {url, hostname, id, frameId, sameContext} = div.dataset;
      if (cmd !== 'popup-denied' && cmd !== 'popup-close') {
        // on user-action use native method
        const msg = {cmd, id, url,
          frameId: Number(frameId),
          sameContext: sameContext === 'true' || (e.isTrusted && navigator.userAgent.indexOf('Firefox') === -1)
        };
        msg.parent = args.get('parent');

        // https://github.com/schomery/popup-blocker/issues/90
        if (cmd === 'white-list') {
          clearTimeout(target.timeout);
          if (target.confirm) {
            chrome.runtime.sendMessage(msg);
            msg.cmd = 'popup-accepted';
            chrome.runtime.sendMessage(msg);

            target.confirm = false;
            target.value = chrome.i18n.getMessage('ui_button_trust_value');
          }
          else {
            target.confirm = true;

            target.timeout = setTimeout(() => {
              target.confirm = false;
              target.value = chrome.i18n.getMessage('ui_button_trust_value');
            }, 3000);
            target.value = chrome.i18n.getMessage('ui_button_trust_confirm');

            return;
          }
        }
        else {
          chrome.runtime.sendMessage(msg);
        }
      }
      // remember user action
      if (cmd === 'popup-close') {
        cookie.remove(hostname);
      }
      else if (hostname && ['popup-redirect', 'open-tab', 'popup-denied'].includes(cmd)) {
        cookie.set(hostname, cmd);
      }

      setTimeout(() => remove(div, url, id, cmd), 100);
    }
  }
}
document.addEventListener('click', onClick);

const doTimer = (div, button, countdown) => {
  button.dataset.default = true;
  const label = button.value;
  const id = window.setInterval(() => {
    // skip when mouse is over
    if (div.dataset.hover === 'true') {
      return;
    }
    countdown -= 1;
    if (countdown) {
      button.value = label + ` (${countdown})`;
    }
    else {
      window.clearInterval(id);
      button.click();
    }
  }, 1000);
  button.value = label + ` (${countdown})`;
};
const onPopupRequest = async request => {
  const tag = request.href && request.href !== 'about:blank' ? request.href : request.id;

  // already listed
  if (urls[tag] && urls[tag].div) {
    const obj = urls[tag];
    const div = obj.div;

    div.dataset.badge = Number(div.dataset.badge || '1') + 1;
    obj.timer.reset();
    obj.timestamp = Date.now();
    if (prefs['focus-popup']) {
      div.querySelector('[data-cmd=popup-close]').focus();
    }
  }
  // new popup
  else {
    const clone = document.importNode(entry.content, true);
    const div = clone.querySelector('div');
    div.dataset.id = request.id;
    div.dataset.frameId = request.frameId;
    div.dataset.sameContext = request.sameContext;
    div.dataset.url = tag;
    const page = request.href.startsWith('http') || request.href.startsWith('ftp');
    div.dataset.page = page;
    div.dataset.hostname = request.hostname;

    const p = clone.querySelector('[data-id=info]');
    div.title = p.textContent = (request.href || 'about:blank');
    // do we have an action for this popup

    if (page) {
      const action = cookie.get(div.dataset.hostname) || prefs['default-action'];
      // immediate action
      if (action && action !== 'ignore' && prefs['immediate-action']) {
        return onClick({
          target: div.querySelector(`[data-cmd="${action}"]`)
        });
      }
      // rules
      try {
        const matched = v => {
          const action = {
            'allow': 'popup-accepted',
            'deny': 'popup-denied',
            'background': 'open-tab',
            'redirect': 'popup-redirect',
            'close': 'popup-close'
          }[v];
          const target = div.querySelector(`[data-cmd="${action}"]`);
          if (target) {
            onClick({
              target
            });
          }
        };
        for (const [match, action] of Object.entries(prefs.rules)) {
          if (action === 'interface') {
            continue;
          }

          const prefix = match.includes(':') ? match.split(':')[0].slice(0, 2) : '';

          if (prefix) {
            const dest = prefix.includes('o') ? args.get('parent') : request.href;

            if (prefix.includes('p')) {
              const [p, o] = match.slice(prefix.length + 1).split('|||');

              if (typeof URLPattern !== 'undefined') {
                const pattern = new URLPattern(p, o || ('https://' + request.hostname));
                if (pattern.test(dest)) {
                  return matched(action);
                }
              }
              else {
                alert('"URLPattern" is not supported in this browser. Please use RegExp instead.\n\n: Rule: ' + p);
              }
            }
            else if (prefix.includes('r')) {
              const re = new RegExp(match.slice(prefix.length + 1));

              if (re.test(dest)) {
                return matched(action);
              }
            }
          }
          else if (request.href === match) {
            return matched(action);
          }
        }
      }
      catch (e) {
        console.error('failed to run rules', e);
      }
      // only perform automatic action when there is no native request
      // to prevent the native popup blocker catch our request
      if (prefs.countdown && request.sameContext !== true) {
        if (action) {
          // to prevent internal popup blocker from rejecting the request
          if (action !== 'popup-accepted' || prefs['simulate-allow']) {
            const button = div.querySelector(`[data-cmd="${action}"`);
            if (button) {
              doTimer(div, button, prefs.countdown);
            }
          }
        }
      }
    }
    // localization
    [...clone.querySelectorAll('[data-i18n]')].forEach(e => {
      e[e.dataset.i18nValue || 'title'] = chrome.i18n.getMessage(e.dataset.i18n);
      if (e.type === 'button') {
        e.value = chrome.i18n.getMessage(e.dataset.i18n + '_value');
      }
    });
    // hide on timeout
    urls[tag] = { // add before append so that observer detects it
      div,
      timer: new Timer(remove, prefs.timeout * 1000, div),
      prefs,
      timestamp: Date.now()
    };
    document.getElementById('container').appendChild(clone);
    if (prefs['focus-popup']) {
      div.querySelector('[data-cmd=popup-close]').focus();
    }

    div.addEventListener('mouseenter', () => {
      div.dataset.hover = true;
      urls[tag].timer.pause();
    });
    div.addEventListener('mouseleave', () => {
      div.dataset.hover = false;
      urls[tag].timer.resume();
    });
    // remove old entries
    const keys = Object.keys(urls);
    if (keys.length > prefs.numbers) {
      const key = keys.sort((a, b) => urls[a].timestamp - urls[b].timestamp)[0];
      if (key) {
        remove(urls[key].div);
      }
    }
  }
};

/* prepare storage then run */
const prepare = async c => {
  prefs = prefs || await config.get([
    'numbers', 'timeout', 'countdown', 'default-action', 'immediate-action', 'simulate-allow', 'focus-popup', 'rules'
  ]);
  c();
};

/* resize */
const resizeObserver = new ResizeObserver(entries => {
  try {
    const height = entries[0].borderBoxSize[0].blockSize;
    chrome.runtime.sendMessage({
      cmd: 'popup-resize',
      height
    });
  }
  catch (e) {}
});
resizeObserver.observe(document.body);

const message = (request, sender, response) => {
  // only accept requests from bg page
  if (request.cmd === 'popup-request' && !sender.tab) {
    prepare(() => onPopupRequest(request));
    response(true);
  }
  else if ([
    'allow-last-request', 'deny-last-request', 'background-last-request', 'redirect-last-request', 'focus-last-request'
  ].includes(request.cmd)) {
    const value = Object.values(urls).sort((a, b) => b.timestamp - a.timestamp).shift();
    if (value) {
      const div = value.div;
      if (request.cmd === 'focus-last-request') {
        div.focus();
      }
      else {
        const cmd = {
          'allow-last-request': 'popup-accepted',
          'deny-last-request': 'popup-denied',
          'background-last-request': 'open-tab',
          'redirect-last-request': 'popup-redirect'
        }[request.cmd];

        const button = div.querySelector(`[data-cmd="${cmd}"]`);
        if (button) {
          button.click();
        }
      }
    }
  }
};
chrome.runtime.onMessage.addListener(message);
addEventListener('message', e => {
  if (e.data && e.data.requests) {
    prepare(() => {
      e.data.requests.forEach(r => onPopupRequest(r));
    });
  }
});

// keyboard support for Escape
document.addEventListener('keydown', e => {
  if (e.key === 'Escape') {
    e.preventDefault();
    const d = document.activeElement.closest('.ppblocker-div') || document.querySelector('.ppblocker-div');
    if (d) {
      d.querySelector('[data-cmd=popup-close]').click();
    }
  }
  else if (e.key === 'ArrowUp') {
    e.preventDefault();
    const d = document.querySelector('.ppblocker-div:has(+ .ppblocker-div:focus-within)');
    if (d) {
      d.focus();
    }
  }
  else if (e.key === 'ArrowDown') {
    e.preventDefault();
    const d = document.querySelector('.ppblocker-div:focus-within + .ppblocker-div');
    if (d) {
      d.focus();
    }
  }
});

// user styling
{
  const css = localStorage.getItem('user-styling');
  if (css) {
    const style = document.createElement('style');
    style.textContent = css;
    document.head.appendChild(style);
  }
}



=== File: ./v3/data/ui/index.css ===
----------------------------------------
:root {
  --gap: 5px;
  --fg: #000;
  --bg: #fff19d;
  --bd: #ebde8f;
  --bda: #ebb28f;
}
body {
  margin: 0;
  overflow: hidden;
  font-family: system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif;
  font-size: 13px;
  background-color: transparent;
  padding: 8px 8px 0 0;
  height: fit-content;
}

input[type=button] {
  color: var(--fg);
  border: none;
  padding: 5px;
  font-size: 11px;
  outline: none;
  cursor: pointer;
  background-color: white;
}
input[type=button]:focus {
  border-color: transparent;
  box-shadow: 0 0 0 2px var(--bda);
  z-index: 2;
}
input[type=button][data-default=true] {
  font-weight: 500;
}
#container {
  display: flex;
  flex-direction: column;
}
.ppblocker-div {
  position: relative;
  text-shadow: none;
  box-sizing: content-box;
  border-left: solid 5px var(--bd);
  background-color: var(--bg);
  color: var(--fg);
  padding: 5px;
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: calc(var(--gap) * 2);
  outline: none;
}
.ppblocker-div:not(:last-child)::after {
  content: '';
  height: 1px;
  background: #ebde8f;
  width: 95%;
  margin: auto;
}
.ppblocker-div:focus-within {
  border-left-color: var(--bda);
}
.ppblocker-div > div {
  display: grid;
  grid-template-columns: 1fr min-content;
}
.ppblocker-div > div > div {
  display: flex;
  gap: 1px;
  background-color: var(--bd);
}
.ppblocker-div > div > input[type=button]:first-of-type {
  justify-self: start;
}
.ppblocker-div > p {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  margin: 0;
  padding: 0;
}
.ppblocker-div::before {
  content: attr(data-badge);
  position: absolute;
  top: -8px;
  right: -8px;
  border: solid 2px var(--bg);
  border-radius: 50%;
  background-color: #fc0d1b;
  color: #000;
  color: #fff;
  width: 16px;
  height: 16px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 80%;
}
.ppblocker-div[data-badge="1"]::before {
  display: none;
}
.ppblocker-div:not([data-page=true]) div {
  grid-template-columns: repeat(3, min-content);
  justify-content: end;
}
.ppblocker-div:not([data-page=true]) [data-cmd="white-list"],
.ppblocker-div:not([data-page=true]) [data-cmd="popup-redirect"],
.ppblocker-div:not([data-page=true]) [data-cmd="open-tab"] {
  display: none;
}

.ppblocker-wot {
  position: absolute;
  top: 6px;
  right: 25px;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 80%;
}



=== File: ./v3/data/options/index.html ===
----------------------------------------
<!DOCTYPE html>
<html>
<head>
  <title>Options Page :: Popup Blocker (strict)</title>
  <meta charset="utf-8">
  <link rel="stylesheet" type="text/css" href="index.css">
  <meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body>
  <table width=100% class="rtl">
    <colgroup>
      <col>
      <col width="10">
    </colgroup>
    <tr>
      <td><span data-i18n="options_item1"></span></td>
      <td><input type="number" id="numbers" min=1></td>
    </tr>
    <tr>
      <td><span data-i18n="options_item2"></span><sup><a href="#n1">1</a></sup></td>
      <td><input type="number" id="timeout" min=5></td>
    </tr>
    <tr>
      <td><span data-i18n="options_item9"></span><sup><a href="#n2">2</a></sup></td>
      <td><input type="number" id="countdown" min=0></td>
    </tr>
    <tr>
      <td><span data-i18n="options_item17"></span></td>
      <td>
      <select id="default-action">
        <option value="ignore" data-i18n="options_item18"></option>
        <option value="popup-denied" data-i18n="options_item19"></option>
        <option value="open-tab" data-i18n="options_item20"></option>
        <option value="popup-redirect" data-i18n="options_item21"></option>
      </select>
      </td>
    </tr>
    <tr>
      <td><span data-i18n="options_item31"></span></td>
      <td>
      <select id="whitelist-mode">
        <option value="popup-hosts" data-i18n="options_item32"></option>
        <option value="top-hosts" data-i18n="options_item33"></option>
      </select>
      </td>
    </tr>
    <tr>
      <td><span data-i18n="options_item42"></span></td>
      <td>
      <select id="placement">
        <option value="tl" data-i18n="options_item43"></option>
        <option value="tr" data-i18n="options_item44"></option>
        <option value="bl" data-i18n="options_item45"></option>
        <option value="br" data-i18n="options_item46"></option>
      </select>
      </td>
    </tr>
    <tr>
      <td><span data-i18n="options_item22"></span></td>
      <td><input type="color" id="badge-color"></td>
    </tr>
  </table>
  <div class="checks">
    <input type="checkbox" id="domain">
    <label for="domain"><span data-i18n="options_item3"></span><sup><a href="#n1">1</a></sup></label>
    <input type="checkbox" id="badge">
    <label for="badge"><span data-i18n="options_item5"></span><sup><a href="#n1">1</a></sup></label>
    <input type="checkbox" id="immediate-action">
    <label for="immediate-action"><a data-href="faq15" target="_blank" data-i18n="options_item23"></a></label>
    <input type="checkbox" id="simulate-allow">
    <label for="simulate-allow"><span data-i18n="options_item30"></span></label>
    <input type="checkbox" id="focus-popup">
    <label for="focus-popup"><span data-i18n="options_item40"></span></label>
    <input type="checkbox" id="faqs">
    <label for="faqs"><span data-i18n="options_item26"></span></label>
  </div>
  <p>
    <a target="_blank" data-href="faq19"><span data-i18n="options_item6"></span></a><sup><a href="#n1">1</a></sup>
    <textarea id="popup-hosts" rows="4" data-i18n="options_t_1" data-i18n-value="placeholder"></textarea>
  </p>
  <p>
    <a target="_blank" data-href="faq18"><span data-i18n="options_item7"></span></a><sup><a href="#n1">1</a></sup>
    <textarea id="top-hosts" rows="4" data-i18n="options_t_2" data-i18n-value="placeholder"></textarea>
  </p>
  <p>
    <a target="_blank" data-href="faq20"><span data-i18n="options_item27"></span></a><sup><a href="#n1">1</a></sup>
    <textarea id="protocols" rows="1"></textarea>
  </p>
  <p>
    <a target="_blank" data-href="faq24"><span data-i18n="options_item41"></span></a><sup><a href="#n1">1</a></sup>
    <textarea id="rules" rows="4" data-i18n="options_t_3" data-i18n-value="placeholder"></textarea>
  </p>
  <h1 data-i18n="options_item38"></h1>
  <div class="checks">
    <input type="checkbox" id="block-page-redirection">
    <label for="block-page-redirection"><a data-href="faq13" target="_blank" data-i18n="options_item15"></a></label>
    <input type="checkbox" id="block-page-redirection-same-origin">
    <label for="block-page-redirection-same-origin" data-i18n="options_item29"></label>
  </div>
  <p>
    <a target="_blank" data-href="faq23"><span data-i18n="options_item28"></span></a><sup><a href="#n1">1</a></sup>
    <textarea id="block-page-redirection-hostnames" rows="3" data-i18n="options_t_1" data-i18n-value="placeholder"></textarea>
  </p>
  <h1 data-i18n="options_item39"></h1>
  <p>
    <a data-href="faq22" target="_blank"><span data-i18n="options_item34"></span></a>
    <textarea id="silent" rows="4" data-i18n="options_t_1" data-i18n-value="placeholder"></textarea>
  </p>
  <p>
    <span data-i18n="options_item35"></span>
    <textarea id="user-styling" rows="5" placeholder="e.g.:

input[data-cmd=white-list] {
  color: red;
}
"></textarea>
  </p>
  <p class="bc">
    <button id="import" data-i18n="options_import"></button>
    <button id="export" data-i18n="options_export"></button>
  </p>
  <p class="bc">
    <button id="review" data-i18n="options_review"></button>
    <button id="page" data-i18n="options_page"></button>
  </p>
  <p class="bc">
    <button id="support" data-i18n="options_support"></button>
    <button id="reset" data-i18n="options_reset"></button>
    <span style="flex: 1"></span>
    <span id="status"></span>
    <button id="save" data-i18n="options_save"></button>
  </p>
  <hr>
  <details>
    <summary data-i18n="options_item25"></summary>
    <p>
      1: <span data-i18n="options_item8" id="n1"></span>
      <br>
      2: <span data-i18n="options_item10" id="n2"></span>
    </p>
  </details>

  <script src="/config.js"></script>
  <script src="index.js"></script>
</body>
</html>



=== File: ./v3/data/options/index.js ===
----------------------------------------
/* global config  */
'use strict';

// localization
[...document.querySelectorAll('[data-i18n]')].forEach(e => {
  if (e.dataset.i18nValue) {
    e.setAttribute(e.dataset.i18nValue, chrome.i18n.getMessage(e.dataset.i18n));
  }
  else {
    e.textContent = chrome.i18n.getMessage(e.dataset.i18n);
  }
});

async function restore(defaults = false) {
  document.getElementById('user-styling').value = localStorage.getItem('user-styling') || '';

  const prefs = defaults ? config : await config.get([
    'numbers', 'timeout', 'countdown', 'badge', 'badge-color', 'domain',
    'simulate-allow', 'focus-popup', 'faqs', 'popup-hosts',
    'block-page-redirection', 'block-page-redirection-same-origin', 'block-page-redirection-hostnames',
    'top-hosts', 'protocols', 'silent', 'default-action',
    'whitelist-mode', 'immediate-action', 'rules', 'placement'
  ]);
  document.getElementById('rules').value = JSON.stringify(prefs.rules, undefined, '  ');
  document.getElementById('numbers').value = prefs.numbers;
  document.getElementById('timeout').value = prefs.timeout;
  document.getElementById('countdown').value = prefs.countdown;
  document.getElementById('badge').checked = prefs.badge;
  document.getElementById('badge-color').value = prefs['badge-color'];
  document.getElementById('domain').checked = prefs.domain;
  document.getElementById('simulate-allow').checked = prefs['simulate-allow'];
  document.getElementById('focus-popup').checked = prefs['focus-popup'];
  document.getElementById('faqs').checked = prefs.faqs;
  document.getElementById('block-page-redirection').checked = prefs['block-page-redirection'];
  document.getElementById('block-page-redirection-same-origin').checked = prefs['block-page-redirection-same-origin'];
  document.getElementById('block-page-redirection-hostnames').value =
    prefs['block-page-redirection-hostnames'].join(', ');
  document.getElementById('popup-hosts').value = prefs['popup-hosts'].join(', ');
  document.getElementById('top-hosts').value = prefs['top-hosts'].join(', ');
  document.getElementById('protocols').value = prefs.protocols.join(', ');
  document.getElementById('silent').value = prefs.silent.join(', ');
  document.getElementById('default-action').value = prefs['default-action'];
  document.getElementById('whitelist-mode').value = prefs['whitelist-mode'];
  document.getElementById('immediate-action').checked = prefs['immediate-action'];
  document.getElementById('placement').value = prefs['placement'];
}

const prepare = str => str.split(/\s*,\s*/)
  .map(s => s.replace('http://', '').replace('https://', '').split('/')[0].trim())
  .filter((h, i, l) => h && l.indexOf(h) === i);

function save() {
  const settings = {
    'numbers': Math.max(1, document.getElementById('numbers').value),
    'timeout': Math.max(1, document.getElementById('timeout').value),
    'countdown': Math.max(0, document.getElementById('countdown').value),
    'badge': document.getElementById('badge').checked,
    'badge-color': document.getElementById('badge-color').value,
    'domain': document.getElementById('domain').checked,
    'simulate-allow': document.getElementById('simulate-allow').checked,
    'focus-popup': document.getElementById('focus-popup').checked,
    'faqs': document.getElementById('faqs').checked,
    'block-page-redirection': document.getElementById('block-page-redirection').checked,
    'block-page-redirection-same-origin': document.getElementById('block-page-redirection-same-origin').checked,
    'block-page-redirection-hostnames': prepare(document.getElementById('block-page-redirection-hostnames').value),
    'popup-hosts': prepare(document.getElementById('popup-hosts').value),
    'top-hosts': prepare(document.getElementById('top-hosts').value),
    'silent': prepare(document.getElementById('silent').value),
    'protocols': document.getElementById('protocols').value
      .split(/\s*,\s*/).filter(s => s && s.endsWith(':')),
    'default-action': document.getElementById('default-action').value,
    'whitelist-mode': document.getElementById('whitelist-mode').value,
    'immediate-action': document.getElementById('immediate-action').checked,
    'placement': document.getElementById('placement').value
  };

  let orules = '';
  try {
    settings.rules = JSON.parse(document.getElementById('rules').value || '{}');
  }
  catch (e) {
    orules = document.getElementById('rules').value;
    alert('Cannot parse rules: ' + e.message);
  }

  localStorage.setItem('user-styling', document.getElementById('user-styling').value || '');

  chrome.storage.local.set(settings, () => {
    const status = document.getElementById('status');
    status.textContent = chrome.i18n.getMessage('options_msg');
    restore();
    setTimeout(() => {
      status.textContent = '';
      if (orules) {
        document.getElementById('rules').value = orules;
      }
    }, 750);
  });
}

document.addEventListener('DOMContentLoaded', () => restore());
document.getElementById('save').addEventListener('click', save);

document.addEventListener('click', e => {
  if (e.target.href && e.target.href.indexOf('#') !== -1) {
    document.querySelector('details').open = true;
  }
});

document.getElementById('reset').addEventListener('click', () => restore(true));
document.getElementById('export').addEventListener('click', () => {
  chrome.storage.local.get(null, prefs => {
    const text = JSON.stringify(prefs, null, '\t');
    const blob = new Blob([text], {type: 'application/json'});
    const objectURL = URL.createObjectURL(blob);
    Object.assign(document.createElement('a'), {
      href: objectURL,
      type: 'application/json',
      download: 'popup-blocker-preferences.json'
    }).dispatchEvent(new MouseEvent('click'));
    setTimeout(() => URL.revokeObjectURL(objectURL));
  });
});
document.getElementById('import').addEventListener('click', () => {
  const fileInput = document.createElement('input');
  fileInput.style.display = 'none';
  fileInput.type = 'file';
  fileInput.accept = '.json';
  fileInput.acceptCharset = 'utf-8';

  document.body.appendChild(fileInput);
  fileInput.initialValue = fileInput.value;
  fileInput.onchange = readFile;
  fileInput.click();

  function readFile() {
    if (fileInput.value !== fileInput.initialValue) {
      const file = fileInput.files[0];
      if (file.size > 100e6) {
        return console.warn('The file is too large!');
      }
      const fReader = new FileReader();
      fReader.onloadend = event => {
        fileInput.remove();
        const json = JSON.parse(event.target.result);
        chrome.storage.local.set(json, () => chrome.runtime.reload());
      };
      fReader.readAsText(file, 'utf-8');
    }
  }
});
// support
document.getElementById('support').addEventListener('click', () => chrome.tabs.create({
  url: chrome.runtime.getManifest().homepage_url + '?rd=donate'
}));
// review
document.getElementById('review').addEventListener('click', () => chrome.tabs.create({
  url: 'https://www.youtube.com/watch?v=Jp-RaiTHzCQ'
}));
// FAQs Page
document.getElementById('page').addEventListener('click', () => chrome.tabs.create({
  url: chrome.runtime.getManifest().homepage_url
}));

// links
for (const a of [...document.querySelectorAll('[data-href]')]) {
  if (a.hasAttribute('href') === false) {
    a.href = chrome.runtime.getManifest().homepage_url + '#' + a.dataset.href;
  }
}



=== File: ./v3/data/options/index.css ===
----------------------------------------
:root {
  --border: solid 1px rgba(0, 0, 0, 0.25);
}

body {
  font-family: "Helvetica Neue", Helvetica, sans-serif;
  font-size: 13px;
  margin: 10px auto;
  width: min(800px, 100% - 2rem);
}
select,
button,
input[type=submit],
input[type=button] {
  height: 28px;
  color: rgb(68, 68, 68);
  background-image: linear-gradient(rgb(237, 237, 237), rgb(237, 237, 237) 38%, rgb(222, 222, 222));
  box-shadow: rgba(0, 0, 0, 0.08) 0 1px 0, rgba(255, 255, 255, 0.75) 0 1px 2px inset;
  text-shadow: rgb(240, 240, 240) 0 1px 0;
}
select,
textarea,
button,
input {
  font-size: inherit;
  border: var(--border);
}
input[type=number] {
  width: 50px;
  padding: 2px 5px;
}
textarea,
input[type=text] {
  width: 100%;
  box-sizing: border-box;
}
label[for=wot],
input:disabled,
textarea:disabled {
  opacity: 0.6 !important;
}
textarea {
  padding: 5px;
  margin-top: 2px;
}
hr {
  margin: 10px 0;
  border: none;
  height: 1px;
  border-bottom: dashed 1px #ccc;
}
summary {
  outline: none;
}
a {
  text-decoration: none;
  cursor: pointer;
  color: #0074cc;
}
h1 {
  font-size: 1.1rem;
}
#status {
  margin-right: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
}
.rtl td:last-child {
  text-align: right;
}
.checks {
  display: grid;
  grid-template-columns: 32px 1fr;
  grid-gap: 5px;
  align-items: center;
}

label[for="wot"] {
  text-decoration: line-through;
}

.bc {
  display: flex;
  gap: 5px;
}

@supports (-webkit-hyphens: none) and (not (-moz-appearance: none)) {
  #support {
    display: none;
  }
}



=== File: ./v3/data/popup/health.js ===
----------------------------------------
const check = () => {
  if (confirm(chrome.i18n.getMessage('pp_health'))) {
    chrome.runtime.reload();
  }
};
check.id = setTimeout(check, 2000);

chrome.runtime.sendMessage({
  method: 'echo'
}, r => {
  if (r) {
    clearTimeout(check.id);
    console.info('health check passed');
  }
});



=== File: ./v3/data/popup/index.html ===
----------------------------------------
<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <link rel="stylesheet" type="text/css" href="index.css">
  <meta name="viewport" content="width=device-width, initial-scale=1">
</head>
<body>
  <p class="col2">
    <label for="global" data-i18n="pp_enabled_g"></label>
    <input type="checkbox" id="global">
    <label for="page" data-i18n="pp_enabled_c"></label>
    <input type="checkbox" id="page">
  </p>
  <hr>
  <p class="col3">
    <span data-i18n="pp_last_request"></span>
    <span class="button" id="deny-last-request" data-i18n="pp_block"></span>
    <span class="button" id="allow-last-request" data-i18n="pp_allow"></span>
  </p>
  <p class="col2">
    <label for="issue" data-i18n="pp_silent"></label>
    <input type="checkbox" id="issue">
    <label for="immediate-action">
      <a data-href="faq15" data-i18n="pp_ignore"></a>
    </label>
    <input type="checkbox" id="immediate-action">
    <label for="block-page-redirection">
      <a data-href="faq13" target="_blank" data-i18n="pp_redirect"></a>
    </label>
    <input type="checkbox" id="block-page-redirection">
  </p>

  <div class="spc">
    <span class="button" id="test-page" data-i18n="pp_test"></span>
    <span class="button" id="homepage" data-i18n="pp_homepage"></span>
    <span class="button" id="options" data-i18n="pp_options"></span>
    <span class="button" id="use-shadow" data-i18n="pp_shadow"></span>
  </div>

  <script type="text/javascript" src="/config.js"></script>
  <script type="text/javascript" src="tld.js"></script>
  <script type="module" src="index.mjs"></script>
  <script type="text/javascript" src="health.js"></script>
</body>
</html>



=== File: ./v3/data/popup/index.css ===
----------------------------------------
:root {
  --bg: #fff;
  --clr: #4d5156;
  --dark: #d9d9d9;
  --button: #f0f0f0;
  --border: rgba(128, 128, 128, 0.2);
  --blue: #0374ff;
}

@media (prefers-color-scheme: dark) {
  :root {
    color-scheme: dark;

    --bg: #35363a;
    --clr: #b1b1b1;
    --dark: #202124;
    --button: #202124;
    --blue: #9ac8ff;
  }
}

body {
  font-size: 13px;
  font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
  width: 400px;
  color: var(--clr);
  background-color: var(--bg);
  margin: 0;
}
hr {
  border: none;
  border-bottom: solid 1px var(--border);
}
a {
  text-decoration: none;
  color: var(--blue);
}
.button {
  color: var(--clr);
  background-color: var(--button);
  text-align: center;
  border: none;
  padding: 5px 10px;
  min-width: 80px;
  cursor: pointer;
  position: relative;
}
.button:not(:last-child)::after {
  content: '';
  position: absolute;
  right: 0;
  width: 1px;
  height: 14px;
  background-color: var(--border);
}

input.disabled,
input:disabled {
  opacity: 0.5;
  pointer-events: none;
}
p {
  padding: 0 10px;
}
.col2 {
  display: grid;
  grid-gap: 5px 0;
  grid-template-columns: 1fr min-content;
}
.col3 {
  display: grid;
  grid-template-columns: 1fr min-content min-content;
}
.spc {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
}
.spc > span {
  padding: 10px;
  min-width: unset;
}



=== File: ./v3/data/popup/tld.js ===
----------------------------------------
(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.tldjs = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';


// Load rules
var Trie = require('./lib/suffix-trie.js');
var allRules = Trie.fromJson(require('./rules.json'));

// Internals
var extractHostname = require('./lib/clean-host.js');
var getDomain = require('./lib/domain.js');
var getPublicSuffix = require('./lib/public-suffix.js');
var getSubdomain = require('./lib/subdomain.js');
var isValid = require('./lib/is-valid.js');
var isIp = require('./lib/is-ip.js');
var tldExists = require('./lib/tld-exists.js');


// Flags representing steps in the `parse` function. They are used to implement
// a early stop mechanism (simulating some form of laziness) to avoid doing more
// work than necessary to perform a given action (e.g.: we don't need to extract
// the domain and subdomain if we are only interested in public suffix).
var TLD_EXISTS = 1;
var PUBLIC_SUFFIX = 2;
var DOMAIN = 3;
var SUB_DOMAIN = 4;
var ALL = 5;


/**
 * Creates a new instance of tldjs
 * @param  {Object.<rules,validHosts>} options [description]
 * @return {tldjs|Object}                      [description]
 */
function factory(options) {
  var rules = options.rules || allRules || {};
  var validHosts = options.validHosts || [];
  var _extractHostname = options.extractHostname || extractHostname;

  /**
   * Process a given url and extract all information. This is a higher level API
   * around private functions of `tld.js`. It allows to remove duplication (only
   * extract hostname from url once for all operations) and implement some early
   * termination mechanism to not pay the price of what we don't need (this
   * simulates laziness at a lower cost).
   *
   * @param {string} url
   * @param {number|undefined} _step - where should we stop processing
   * @return {object}
   */
  function parse(url, _step) {
    var step = _step || ALL;
    var result = {
      hostname: _extractHostname(url),
      isValid: null,
      isIp: null,
      tldExists: false,
      publicSuffix: null,
      domain: null,
      subdomain: null,
    };

    if (result.hostname === null) {
      result.isIp = false;
      result.isValid = false;
      return result;
    }

    // Check if `hostname` is a valid ip address
    result.isIp = isIp(result.hostname);
    if (result.isIp) {
      result.isValid = true;
      return result;
    }

    // Check if `hostname` is valid
    result.isValid = isValid(result.hostname);
    if (result.isValid === false) return result;

    // Check if tld exists
    if (step === ALL || step === TLD_EXISTS) {
      result.tldExists = tldExists(rules, result.hostname);
    }
    if (step === TLD_EXISTS) return result;

    // Extract public suffix
    result.publicSuffix = getPublicSuffix(rules, result.hostname);
    if (step === PUBLIC_SUFFIX) return result;

    // Extract domain
    result.domain = getDomain(validHosts, result.publicSuffix, result.hostname);
    if (step === DOMAIN) return result;

    // Extract subdomain
    result.subdomain = getSubdomain(result.hostname, result.domain);

    return result;
  }


  return {
    extractHostname: _extractHostname,
    isValid: isValid,
    parse: parse,
    tldExists: function (url) {
      return parse(url, TLD_EXISTS).tldExists;
    },
    getPublicSuffix: function (url) {
      return parse(url, PUBLIC_SUFFIX).publicSuffix;
    },
    getDomain: function (url) {
      return parse(url, DOMAIN).domain;
    },
    getSubdomain: function (url) {
      return parse(url, SUB_DOMAIN).subdomain;
    },
    fromUserSettings: factory
  };
}


module.exports = factory({});

},{"./lib/clean-host.js":2,"./lib/domain.js":3,"./lib/is-ip.js":5,"./lib/is-valid.js":6,"./lib/public-suffix.js":7,"./lib/subdomain.js":8,"./lib/suffix-trie.js":9,"./lib/tld-exists.js":10,"./rules.json":17}],2:[function(require,module,exports){

var URL = require('url');
var isValid = require('./is-valid.js');


/**
 * Utility to cleanup the base host value. Also removes url fragments.
 *
 * Works for:
 * - hostname
 * - //hostname
 * - scheme://hostname
 * - scheme+scheme://hostname
 *
 * @param {string} value
 * @return {String}
 */

// scheme      = ALPHA *( ALPHA / DIGIT / "+" / "-" / "." )
var hasPrefixRE = /^(([a-z][a-z0-9+.-]*)?:)?\/\//;


/**
 * @see https://github.com/oncletom/tld.js/issues/95
 *
 * @param {string} value
 */
function trimTrailingDots(value) {
  if (value[value.length - 1] === '.') {
    return value.substr(0, value.length - 1);
  }
  return value;
}


/**
 * Fast check to avoid calling `trim` when not needed.
 *
 * @param {string} value
 */
function checkTrimmingNeeded(value) {
  return (
    value.length > 0 && (
      value.charCodeAt(0) <= 32 ||
      value.charCodeAt(value.length - 1) <= 32
    )
  );
}


/**
 * Fast check to avoid calling `toLowerCase` when not needed.
 *
 * @param {string} value
 */
function checkLowerCaseNeeded(value) {
  for (var i = 0; i < value.length; i += 1) {
    var code = value.charCodeAt(i);
    if (code >= 65 && code <= 90) { // [A-Z]
      return true;
    }
  }

  return false;
}


module.exports = function extractHostname(value) {
  // First check if `value` is already a valid hostname.
  if (isValid(value)) {
    return trimTrailingDots(value);
  }

  var url = value;

  if (typeof url !== 'string') {
    url = '' + url;
  }

  var needsTrimming = checkTrimmingNeeded(url);
  if (needsTrimming) {
    url = url.trim();
  }

  var needsLowerCase = checkLowerCaseNeeded(url);
  if (needsLowerCase) {
    url = url.toLowerCase();
  }

  // Try again after `url` has been transformed to lowercase and trimmed.
  if ((needsLowerCase || needsTrimming) && isValid(url)) {
    return trimTrailingDots(url);
  }

  // Proceed with heavier url parsing to extract the hostname.
  if (!hasPrefixRE.test(url)) {
    url = '//' + url;
  }

  var parts = URL.parse(url, null, true);

  if (parts.hostname) {
    return trimTrailingDots(parts.hostname);
  }

  return null;
};

},{"./is-valid.js":6,"url":15}],3:[function(require,module,exports){
'use strict';


/**
 * Polyfill for `endsWith`
 *
 * @param {string} str
 * @param {string} pattern
 * @return {boolean}
 */
function endsWith(str, pattern) {
  return (
    str.lastIndexOf(pattern) === (str.length - pattern.length)
  );
}


/**
 * Check if `vhost` is a valid suffix of `hostname` (top-domain)
 *
 * It means that `vhost` needs to be a suffix of `hostname` and we then need to
 * make sure that: either they are equal, or the character preceding `vhost` in
 * `hostname` is a '.' (it should not be a partial label).
 *
 * * hostname = 'not.evil.com' and vhost = 'vil.com'      => not ok
 * * hostname = 'not.evil.com' and vhost = 'evil.com'     => ok
 * * hostname = 'not.evil.com' and vhost = 'not.evil.com' => ok
 *
 * @param {string} hostname
 * @param {string} vhost
 * @return {boolean}
 */
function shareSameDomainSuffix(hostname, vhost) {
  if (endsWith(hostname, vhost)) {
    return (
      hostname.length === vhost.length ||
      hostname[hostname.length - vhost.length - 1] === '.'
    );
  }

  return false;
}


/**
 * Given a hostname and its public suffix, extract the general domain.
 *
 *  @param {string} hostname
 *  @param {string} publicSuffix
 *  @return {string}
 */
function extractDomainWithSuffix(hostname, publicSuffix) {
  // Locate the index of the last '.' in the part of the `hostname` preceding
  // the public suffix.
  //
  // examples:
  //   1. not.evil.co.uk  => evil.co.uk
  //         ^    ^
  //         |    | start of public suffix
  //         | index of the last dot
  //
  //   2. example.co.uk   => example.co.uk
  //     ^       ^
  //     |       | start of public suffix
  //     |
  //     | (-1) no dot found before the public suffix
  var publicSuffixIndex = hostname.length - publicSuffix.length - 2;
  var lastDotBeforeSuffixIndex = hostname.lastIndexOf('.', publicSuffixIndex);

  // No '.' found, then `hostname` is the general domain (no sub-domain)
  if (lastDotBeforeSuffixIndex === -1) {
    return hostname;
  }

  // Extract the part between the last '.'
  return hostname.substr(lastDotBeforeSuffixIndex + 1);
}


/**
 * Detects the domain based on rules and upon and a host string
 *
 * @api
 * @param {string} host
 * @return {String}
 */
module.exports = function getDomain(validHosts, suffix, hostname) {
  // Check if `hostname` ends with a member of `validHosts`.
  for (var i = 0; i < validHosts.length; i += 1) {
    var vhost = validHosts[i];
    if (shareSameDomainSuffix(hostname, vhost)) {
      return vhost;
    }
  }

  // If there is no suffix, there is no hostname
  if (suffix === null) {
    return null;
  }

  // If `hostname` is a valid public suffix, then there is no domain to return.
  // Since we already know that `getPublicSuffix` returns a suffix of `hostname`
  // there is no need to perform a string comparison and we only compare the
  // size.
  if (suffix.length === hostname.length) {
    return null;
  }

  // To extract the general domain, we start by identifying the public suffix
  // (if any), then consider the domain to be the public suffix with one added
  // level of depth. (e.g.: if hostname is `not.evil.co.uk` and public suffix:
  // `co.uk`, then we take one more level: `evil`, giving the final result:
  // `evil.co.uk`).
  return extractDomainWithSuffix(hostname, suffix);
};

},{}],4:[function(require,module,exports){
"use strict";

/**
 * Utility to extract the TLD from a hostname string
 *
 * @param {string} host
 * @return {String}
 */
module.exports = function extractTldFromHost(hostname) {
  var lastDotIndex = hostname.lastIndexOf('.');
  if (lastDotIndex === -1) {
    return null;
  }

  return hostname.substr(lastDotIndex + 1);
};

},{}],5:[function(require,module,exports){
'use strict';


/**
 * Check if a hostname is an IP. You should be aware that this only works
 * because `hostname` is already garanteed to be a valid hostname!
 *
 * @param {string} hostname
 * @return {boolean}
 */
function isProbablyIpv4(hostname) {
  var numberOfDots = 0;

  for (var i = 0; i < hostname.length; i += 1) {
    var code = hostname.charCodeAt(i);

    if (code === 46) { // '.'
      numberOfDots += 1;
    } else if (code < 48 || code > 57) {
      // 48 => '0'
      // 57 => '9'
      return false;
    }
  }

  return (
    numberOfDots === 3  &&
    hostname[0] !== '.' &&
    hostname[hostname.length - 1] !== '.'
  );
}


/**
 * Similar to isProbablyIpv4.
 *
 * @param {string} hostname
 * @return {boolean}
 */
function isProbablyIpv6(hostname) {
  var hasColon = false;

  for (var i = 0; i < hostname.length; i += 1) {
    var code = hostname.charCodeAt(i);

    if (code === 58) { // ':'
      hasColon = true;
    } else if (!(
      (code >= 48 && code <= 57) || // 0-9
      (code >= 97 && code <= 102)   // a-f
    )) {
      return false;
    }
  }

  return hasColon;
}


/**
 * Check if `hostname` is *probably* a valid ip addr (either ipv6 or ipv4).
 * This *will not* work on any string. We need `hostname` to be a valid
 * hostname.
 *
 * @param {string} hostname
 * @return {boolean}
 */
module.exports = function isIp(hostname) {
  if (typeof hostname !== 'string') {
    return false;
  }

  if (hostname.length === 0) {
    return false;
  }

  return (isProbablyIpv6(hostname) || isProbablyIpv4(hostname));
};

},{}],6:[function(require,module,exports){
"use strict";


/**
 * Check if the code point is a digit [0-9]
 *
 * @param {number} code
 * @return boolean
 */
function isDigit(code) {
  // 48 == '0'
  // 57 == '9'
  return code >= 48 && code <= 57;
}


/**
 * Check if the code point is a letter [a-zA-Z]
 *
 * @param {number} code
 * @return boolean
 */
function isAlpha(code) {
  // 97 === 'a'
  // 122 == 'z'
  return code >= 97 && code <= 122;
}


/**
 * Check if a hostname string is valid (according to RFC). It's usually a
 * preliminary check before trying to use getDomain or anything else.
 *
 * Beware: it does not check if the TLD exists.
 *
 * @api
 * @param {string} hostname
 * @return {boolean}
 */
module.exports = function isValid(hostname) {
  if (typeof hostname !== 'string') {
    return false;
  }

  if (hostname.length > 255) {
    return false;
  }

  if (hostname.length === 0) {
    return false;
  }

  // Check first character: [a-zA-Z0-9]
  var firstCharCode = hostname.charCodeAt(0);
  if (!(isAlpha(firstCharCode) || isDigit(firstCharCode))) {
    return false;
  }

  // Validate hostname according to RFC
  var lastDotIndex = -1;
  var lastCharCode;
  var code;
  var len = hostname.length;

  for (var i = 0; i < len; i += 1) {
    code = hostname.charCodeAt(i);

    if (code === 46) { // '.'
      if (
        // Check that previous label is < 63 bytes long (64 = 63 + '.')
        (i - lastDotIndex) > 64 ||
        // Check that previous character was not already a '.'
        lastCharCode === 46 ||
        // Check that the previous label does not end with a '-'
        lastCharCode === 45
      ) {
        return false;
      }

      lastDotIndex = i;
    } else if (!(isAlpha(code) || isDigit(code) || code === 45)) {
      // Check if there is a forbidden character in the label: [^a-zA-Z0-9-]
      return false;
    }

    lastCharCode = code;
  }

  return (
    // Check that last label is shorter than 63 chars
    (len - lastDotIndex - 1) <= 63 &&
    // Check that the last character is an allowed trailing label character.
    // Since we already checked that the char is a valid hostname character,
    // we only need to check that it's different from '-'.
    lastCharCode !== 45
  );
};

},{}],7:[function(require,module,exports){
'use strict';


var extractTldFromHost = require('./from-host.js');


/**
 * Returns the public suffix (including exact matches)
 *
 * @api
 * @since 1.5
 * @param {string} hostname
 * @return {string}
 */
module.exports = function getPublicSuffix(rules, hostname) {
  // First check if `hostname` is already a valid top-level Domain.
  if (rules.hasTld(hostname)) {
    return hostname;
  }

  var candidate = rules.suffixLookup(hostname);
  if (candidate === null) {
    // Prevailing rule is '*' so we consider the top-level domain to be the
    // public suffix of `hostname` (e.g.: 'example.org' => 'org').
    return extractTldFromHost(hostname);
  }

  return candidate;
};

},{"./from-host.js":4}],8:[function(require,module,exports){
'use strict';


/**
 * Returns the subdomain of a hostname string
 *
 * @api
 * @param {string} hostname
 * @param {string} domain - the root domain of the hostname
 * @return {string|null} a subdomain string if any, blank string if subdomain
 *  is empty, otherwise null.
 */
module.exports = function getSubdomain(hostname, domain) {
  // No domain found? Just abort, abort!
  if (domain === null) {
    return null;
  }

  return hostname.substr(0, hostname.length - domain.length - 1);
};

},{}],9:[function(require,module,exports){
"use strict";

var VALID_HOSTNAME_VALUE = 0;


/**
 * Return min(a, b), handling possible `null` values.
 *
 * @param {number|null} a
 * @param {number|null} b
 * @return {number|null}
 */
function minIndex(a, b) {
  if (a === null) {
    return b;
  } else if (b === null) {
    return a;
  }

  return a < b ? a : b;
}


/**
 * Insert a public suffix rule in the `trie`.
 *
 * @param {object} rule
 * @param {object} trie
 * @return {object} trie (updated)
 */
function insertInTrie(rule, trie) {
  var parts = rule.parts;
  var node = trie;

  for (var i = 0; i < parts.length; i += 1) {
    var part = parts[i];
    var nextNode = node[part];
    if (nextNode === undefined) {
      nextNode = Object.create(null);
      node[part] = nextNode;
    }

    node = nextNode;
  }

  node.$ = VALID_HOSTNAME_VALUE;

  return trie;
}


/**
 * Recursive lookup of `parts` (starting at `index`) in the tree.
 *
 * @param {array} parts
 * @param {object} trie
 * @param {number} index - when to start in `parts` (initially: length - 1)
 * @return {number} size of the suffix found (in number of parts matched)
 */
function lookupInTrie(parts, trie, index) {
  var part;
  var nextNode;
  var publicSuffixIndex = null;

  // We have a match!
  if (trie.$ !== undefined) {
    publicSuffixIndex = index + 1;
  }

  // No more `parts` to look for
  if (index === -1) {
    return publicSuffixIndex;
  }

  part = parts[index];

  // Check branch corresponding to next part of hostname
  nextNode = trie[part];
  if (nextNode !== undefined) {
    publicSuffixIndex = minIndex(
      publicSuffixIndex,
      lookupInTrie(parts, nextNode, index - 1)
    );
  }

  // Check wildcard branch
  nextNode = trie['*'];
  if (nextNode !== undefined) {
    publicSuffixIndex = minIndex(
      publicSuffixIndex,
      lookupInTrie(parts, nextNode, index - 1)
    );
  }

  return publicSuffixIndex;
}


/**
 * Contains the public suffix ruleset as a Trie for efficient look-up.
 *
 * @constructor
 */
function SuffixTrie(rules) {
  this.exceptions = Object.create(null);
  this.rules = Object.create(null);

  if (rules) {
    for (var i = 0; i < rules.length; i += 1) {
      var rule = rules[i];
      if (rule.exception) {
        insertInTrie(rule, this.exceptions);
      } else {
        insertInTrie(rule, this.rules);
      }
    }
  }
}


/**
 * Load the trie from JSON (as serialized by JSON.stringify).
 */
SuffixTrie.fromJson = function (json) {
  var trie = new SuffixTrie();

  trie.exceptions = json.exceptions;
  trie.rules = json.rules;

  return trie;
};


/**
 * Check if `value` is a valid TLD.
 */
SuffixTrie.prototype.hasTld = function (value) {
  // All TLDs are at the root of the Trie.
  return this.rules[value] !== undefined;
};


/**
 * Check if `hostname` has a valid public suffix in `trie`.
 *
 * @param {string} hostname
 * @return {string|null} public suffix
 */
SuffixTrie.prototype.suffixLookup = function (hostname) {
  var parts = hostname.split('.');

  // Look for a match in rules
  var publicSuffixIndex = lookupInTrie(
    parts,
    this.rules,
    parts.length - 1
  );

  if (publicSuffixIndex === null) {
    return null;
  }

  // Look for exceptions
  var exceptionIndex = lookupInTrie(
    parts,
    this.exceptions,
    parts.length - 1
  );

  if (exceptionIndex !== null) {
    return parts.slice(exceptionIndex + 1).join('.');
  }

  return parts.slice(publicSuffixIndex).join('.');
};


module.exports = SuffixTrie;

},{}],10:[function(require,module,exports){
'use strict';


var extractTldFromHost = require('./from-host.js');


/**
 * Checks if the TLD exists for a given hostname
 *
 * @api
 * @param {string} rules
 * @param {string} hostname
 * @return {boolean}
 */
module.exports = function tldExists(rules, hostname) {
  // Easy case, it's a TLD
  if (rules.hasTld(hostname)) {
    return true;
  }

  // Popping only the TLD of the hostname
  var hostTld = extractTldFromHost(hostname);
  if (hostTld === null) {
    return false;
  }

  return rules.hasTld(hostTld);
};

},{"./from-host.js":4}],11:[function(require,module,exports){
(function (global){
/*! https://mths.be/punycode v1.4.1 by @mathias */
;(function(root) {

	/** Detect free variables */
	var freeExports = typeof exports == 'object' && exports &&
		!exports.nodeType && exports;
	var freeModule = typeof module == 'object' && module &&
		!module.nodeType && module;
	var freeGlobal = typeof global == 'object' && global;
	if (
		freeGlobal.global === freeGlobal ||
		freeGlobal.window === freeGlobal ||
		freeGlobal.self === freeGlobal
	) {
		root = freeGlobal;
	}

	/**
	 * The `punycode` object.
	 * @name punycode
	 * @type Object
	 */
	var punycode,

	/** Highest positive signed 32-bit float value */
	maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

	/** Bootstring parameters */
	base = 36,
	tMin = 1,
	tMax = 26,
	skew = 38,
	damp = 700,
	initialBias = 72,
	initialN = 128, // 0x80
	delimiter = '-', // '\x2D'

	/** Regular expressions */
	regexPunycode = /^xn--/,
	regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
	regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators

	/** Error messages */
	errors = {
		'overflow': 'Overflow: input needs wider integers to process',
		'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
		'invalid-input': 'Invalid input'
	},

	/** Convenience shortcuts */
	baseMinusTMin = base - tMin,
	floor = Math.floor,
	stringFromCharCode = String.fromCharCode,

	/** Temporary variable */
	key;

	/*--------------------------------------------------------------------------*/

	/**
	 * A generic error utility function.
	 * @private
	 * @param {String} type The error type.
	 * @returns {Error} Throws a `RangeError` with the applicable error message.
	 */
	function error(type) {
		throw new RangeError(errors[type]);
	}

	/**
	 * A generic `Array#map` utility function.
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} callback The function that gets called for every array
	 * item.
	 * @returns {Array} A new array of values returned by the callback function.
	 */
	function map(array, fn) {
		var length = array.length;
		var result = [];
		while (length--) {
			result[length] = fn(array[length]);
		}
		return result;
	}

	/**
	 * A simple `Array#map`-like wrapper to work with domain name strings or email
	 * addresses.
	 * @private
	 * @param {String} domain The domain name or email address.
	 * @param {Function} callback The function that gets called for every
	 * character.
	 * @returns {Array} A new string of characters returned by the callback
	 * function.
	 */
	function mapDomain(string, fn) {
		var parts = string.split('@');
		var result = '';
		if (parts.length > 1) {
			// In email addresses, only the domain name should be punycoded. Leave
			// the local part (i.e. everything up to `@`) intact.
			result = parts[0] + '@';
			string = parts[1];
		}
		// Avoid `split(regex)` for IE8 compatibility. See #17.
		string = string.replace(regexSeparators, '\x2E');
		var labels = string.split('.');
		var encoded = map(labels, fn).join('.');
		return result + encoded;
	}

	/**
	 * Creates an array containing the numeric code points of each Unicode
	 * character in the string. While JavaScript uses UCS-2 internally,
	 * this function will convert a pair of surrogate halves (each of which
	 * UCS-2 exposes as separate characters) into a single code point,
	 * matching UTF-16.
	 * @see `punycode.ucs2.encode`
	 * @see <https://mathiasbynens.be/notes/javascript-encoding>
	 * @memberOf punycode.ucs2
	 * @name decode
	 * @param {String} string The Unicode input string (UCS-2).
	 * @returns {Array} The new array of code points.
	 */
	function ucs2decode(string) {
		var output = [],
		    counter = 0,
		    length = string.length,
		    value,
		    extra;
		while (counter < length) {
			value = string.charCodeAt(counter++);
			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
				// high surrogate, and there is a next character
				extra = string.charCodeAt(counter++);
				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
				} else {
					// unmatched surrogate; only append this code unit, in case the next
					// code unit is the high surrogate of a surrogate pair
					output.push(value);
					counter--;
				}
			} else {
				output.push(value);
			}
		}
		return output;
	}

	/**
	 * Creates a string based on an array of numeric code points.
	 * @see `punycode.ucs2.decode`
	 * @memberOf punycode.ucs2
	 * @name encode
	 * @param {Array} codePoints The array of numeric code points.
	 * @returns {String} The new Unicode string (UCS-2).
	 */
	function ucs2encode(array) {
		return map(array, function(value) {
			var output = '';
			if (value > 0xFFFF) {
				value -= 0x10000;
				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
				value = 0xDC00 | value & 0x3FF;
			}
			output += stringFromCharCode(value);
			return output;
		}).join('');
	}

	/**
	 * Converts a basic code point into a digit/integer.
	 * @see `digitToBasic()`
	 * @private
	 * @param {Number} codePoint The basic numeric code point value.
	 * @returns {Number} The numeric value of a basic code point (for use in
	 * representing integers) in the range `0` to `base - 1`, or `base` if
	 * the code point does not represent a value.
	 */
	function basicToDigit(codePoint) {
		if (codePoint - 48 < 10) {
			return codePoint - 22;
		}
		if (codePoint - 65 < 26) {
			return codePoint - 65;
		}
		if (codePoint - 97 < 26) {
			return codePoint - 97;
		}
		return base;
	}

	/**
	 * Converts a digit/integer into a basic code point.
	 * @see `basicToDigit()`
	 * @private
	 * @param {Number} digit The numeric value of a basic code point.
	 * @returns {Number} The basic code point whose value (when used for
	 * representing integers) is `digit`, which needs to be in the range
	 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
	 * used; else, the lowercase form is used. The behavior is undefined
	 * if `flag` is non-zero and `digit` has no uppercase form.
	 */
	function digitToBasic(digit, flag) {
		//  0..25 map to ASCII a..z or A..Z
		// 26..35 map to ASCII 0..9
		return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
	}

	/**
	 * Bias adaptation function as per section 3.4 of RFC 3492.
	 * https://tools.ietf.org/html/rfc3492#section-3.4
	 * @private
	 */
	function adapt(delta, numPoints, firstTime) {
		var k = 0;
		delta = firstTime ? floor(delta / damp) : delta >> 1;
		delta += floor(delta / numPoints);
		for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
			delta = floor(delta / baseMinusTMin);
		}
		return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
	}

	/**
	 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
	 * symbols.
	 * @memberOf punycode
	 * @param {String} input The Punycode string of ASCII-only symbols.
	 * @returns {String} The resulting string of Unicode symbols.
	 */
	function decode(input) {
		// Don't use UCS-2
		var output = [],
		    inputLength = input.length,
		    out,
		    i = 0,
		    n = initialN,
		    bias = initialBias,
		    basic,
		    j,
		    index,
		    oldi,
		    w,
		    k,
		    digit,
		    t,
		    /** Cached calculation results */
		    baseMinusT;

		// Handle the basic code points: let `basic` be the number of input code
		// points before the last delimiter, or `0` if there is none, then copy
		// the first basic code points to the output.

		basic = input.lastIndexOf(delimiter);
		if (basic < 0) {
			basic = 0;
		}

		for (j = 0; j < basic; ++j) {
			// if it's not a basic code point
			if (input.charCodeAt(j) >= 0x80) {
				error('not-basic');
			}
			output.push(input.charCodeAt(j));
		}

		// Main decoding loop: start just after the last delimiter if any basic code
		// points were copied; start at the beginning otherwise.

		for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

			// `index` is the index of the next character to be consumed.
			// Decode a generalized variable-length integer into `delta`,
			// which gets added to `i`. The overflow checking is easier
			// if we increase `i` as we go, then subtract off its starting
			// value at the end to obtain `delta`.
			for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

				if (index >= inputLength) {
					error('invalid-input');
				}

				digit = basicToDigit(input.charCodeAt(index++));

				if (digit >= base || digit > floor((maxInt - i) / w)) {
					error('overflow');
				}

				i += digit * w;
				t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

				if (digit < t) {
					break;
				}

				baseMinusT = base - t;
				if (w > floor(maxInt / baseMinusT)) {
					error('overflow');
				}

				w *= baseMinusT;

			}

			out = output.length + 1;
			bias = adapt(i - oldi, out, oldi == 0);

			// `i` was supposed to wrap around from `out` to `0`,
			// incrementing `n` each time, so we'll fix that now:
			if (floor(i / out) > maxInt - n) {
				error('overflow');
			}

			n += floor(i / out);
			i %= out;

			// Insert `n` at position `i` of the output
			output.splice(i++, 0, n);

		}

		return ucs2encode(output);
	}

	/**
	 * Converts a string of Unicode symbols (e.g. a domain name label) to a
	 * Punycode string of ASCII-only symbols.
	 * @memberOf punycode
	 * @param {String} input The string of Unicode symbols.
	 * @returns {String} The resulting Punycode string of ASCII-only symbols.
	 */
	function encode(input) {
		var n,
		    delta,
		    handledCPCount,
		    basicLength,
		    bias,
		    j,
		    m,
		    q,
		    k,
		    t,
		    currentValue,
		    output = [],
		    /** `inputLength` will hold the number of code points in `input`. */
		    inputLength,
		    /** Cached calculation results */
		    handledCPCountPlusOne,
		    baseMinusT,
		    qMinusT;

		// Convert the input in UCS-2 to Unicode
		input = ucs2decode(input);

		// Cache the length
		inputLength = input.length;

		// Initialize the state
		n = initialN;
		delta = 0;
		bias = initialBias;

		// Handle the basic code points
		for (j = 0; j < inputLength; ++j) {
			currentValue = input[j];
			if (currentValue < 0x80) {
				output.push(stringFromCharCode(currentValue));
			}
		}

		handledCPCount = basicLength = output.length;

		// `handledCPCount` is the number of code points that have been handled;
		// `basicLength` is the number of basic code points.

		// Finish the basic string - if it is not empty - with a delimiter
		if (basicLength) {
			output.push(delimiter);
		}

		// Main encoding loop:
		while (handledCPCount < inputLength) {

			// All non-basic code points < n have been handled already. Find the next
			// larger one:
			for (m = maxInt, j = 0; j < inputLength; ++j) {
				currentValue = input[j];
				if (currentValue >= n && currentValue < m) {
					m = currentValue;
				}
			}

			// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
			// but guard against overflow
			handledCPCountPlusOne = handledCPCount + 1;
			if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
				error('overflow');
			}

			delta += (m - n) * handledCPCountPlusOne;
			n = m;

			for (j = 0; j < inputLength; ++j) {
				currentValue = input[j];

				if (currentValue < n && ++delta > maxInt) {
					error('overflow');
				}

				if (currentValue == n) {
					// Represent delta as a generalized variable-length integer
					for (q = delta, k = base; /* no condition */; k += base) {
						t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
						if (q < t) {
							break;
						}
						qMinusT = q - t;
						baseMinusT = base - t;
						output.push(
							stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
						);
						q = floor(qMinusT / baseMinusT);
					}

					output.push(stringFromCharCode(digitToBasic(q, 0)));
					bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
					delta = 0;
					++handledCPCount;
				}
			}

			++delta;
			++n;

		}
		return output.join('');
	}

	/**
	 * Converts a Punycode string representing a domain name or an email address
	 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
	 * it doesn't matter if you call it on a string that has already been
	 * converted to Unicode.
	 * @memberOf punycode
	 * @param {String} input The Punycoded domain name or email address to
	 * convert to Unicode.
	 * @returns {String} The Unicode representation of the given Punycode
	 * string.
	 */
	function toUnicode(input) {
		return mapDomain(input, function(string) {
			return regexPunycode.test(string)
				? decode(string.slice(4).toLowerCase())
				: string;
		});
	}

	/**
	 * Converts a Unicode string representing a domain name or an email address to
	 * Punycode. Only the non-ASCII parts of the domain name will be converted,
	 * i.e. it doesn't matter if you call it with a domain that's already in
	 * ASCII.
	 * @memberOf punycode
	 * @param {String} input The domain name or email address to convert, as a
	 * Unicode string.
	 * @returns {String} The Punycode representation of the given domain name or
	 * email address.
	 */
	function toASCII(input) {
		return mapDomain(input, function(string) {
			return regexNonASCII.test(string)
				? 'xn--' + encode(string)
				: string;
		});
	}

	/*--------------------------------------------------------------------------*/

	/** Define the public API */
	punycode = {
		/**
		 * A string representing the current Punycode.js version number.
		 * @memberOf punycode
		 * @type String
		 */
		'version': '1.4.1',
		/**
		 * An object of methods to convert from JavaScript's internal character
		 * representation (UCS-2) to Unicode code points, and back.
		 * @see <https://mathiasbynens.be/notes/javascript-encoding>
		 * @memberOf punycode
		 * @type Object
		 */
		'ucs2': {
			'decode': ucs2decode,
			'encode': ucs2encode
		},
		'decode': decode,
		'encode': encode,
		'toASCII': toASCII,
		'toUnicode': toUnicode
	};

	/** Expose `punycode` */
	// Some AMD build optimizers, like r.js, check for specific condition patterns
	// like the following:
	if (
		typeof define == 'function' &&
		typeof define.amd == 'object' &&
		define.amd
	) {
		define('punycode', function() {
			return punycode;
		});
	} else if (freeExports && freeModule) {
		if (module.exports == freeExports) {
			// in Node.js, io.js, or RingoJS v0.8.0+
			freeModule.exports = punycode;
		} else {
			// in Narwhal or RingoJS v0.7.0-
			for (key in punycode) {
				punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
			}
		}
	} else {
		// in Rhino or a web browser
		root.punycode = punycode;
	}

}(this));

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],12:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

},{}],13:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return map(obj[k], function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};

},{}],14:[function(require,module,exports){
'use strict';

exports.decode = exports.parse = require('./decode');
exports.encode = exports.stringify = require('./encode');

},{"./decode":12,"./encode":13}],15:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var punycode = require('punycode');
var util = require('./util');

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;

exports.Url = Url;

function Url() {
  this.protocol = null;
  this.slashes = null;
  this.auth = null;
  this.host = null;
  this.port = null;
  this.hostname = null;
  this.hash = null;
  this.search = null;
  this.query = null;
  this.pathname = null;
  this.path = null;
  this.href = null;
}

// Reference: RFC 3986, RFC 1808, RFC 2396

// define these here so at least they only have to be
// compiled once on the first module load.
var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,

    // Special case for a simple path URL
    simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,

    // RFC 2396: characters reserved for delimiting URLs.
    // We actually just auto-escape these.
    delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

    // RFC 2396: characters not allowed for various reasons.
    unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),

    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
    autoEscape = ['\''].concat(unwise),
    // Characters that are never ever allowed in a hostname.
    // Note that any invalid chars are also handled, but these
    // are the ones that are *expected* to be seen, so we fast-path
    // them.
    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
    hostEndingChars = ['/', '?', '#'],
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
    // protocols that can allow "unsafe" and "unwise" chars.
    unsafeProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that never have a hostname.
    hostlessProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that always contain a // bit.
    slashedProtocol = {
      'http': true,
      'https': true,
      'ftp': true,
      'gopher': true,
      'file': true,
      'http:': true,
      'https:': true,
      'ftp:': true,
      'gopher:': true,
      'file:': true
    },
    querystring = require('querystring');

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && util.isObject(url) && url instanceof Url) return url;

  var u = new Url;
  u.parse(url, parseQueryString, slashesDenoteHost);
  return u;
}

Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {
  if (!util.isString(url)) {
    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
  }

  // Copy chrome, IE, opera backslash-handling behavior.
  // Back slashes before the query string get converted to forward slashes
  // See: https://code.google.com/p/chromium/issues/detail?id=25916
  var queryIndex = url.indexOf('?'),
      splitter =
          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',
      uSplit = url.split(splitter),
      slashRegex = /\\/g;
  uSplit[0] = uSplit[0].replace(slashRegex, '/');
  url = uSplit.join(splitter);

  var rest = url;

  // trim before proceeding.
  // This is to support parse stuff like "  http://foo.com  \n"
  rest = rest.trim();

  if (!slashesDenoteHost && url.split('#').length === 1) {
    // Try fast path regexp
    var simplePath = simplePathPattern.exec(rest);
    if (simplePath) {
      this.path = rest;
      this.href = rest;
      this.pathname = simplePath[1];
      if (simplePath[2]) {
        this.search = simplePath[2];
        if (parseQueryString) {
          this.query = querystring.parse(this.search.substr(1));
        } else {
          this.query = this.search.substr(1);
        }
      } else if (parseQueryString) {
        this.search = '';
        this.query = {};
      }
      return this;
    }
  }

  var proto = protocolPattern.exec(rest);
  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    this.protocol = lowerProto;
    rest = rest.substr(proto.length);
  }

  // figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.
  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';
    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      this.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] &&
      (slashes || (proto && !slashedProtocol[proto]))) {

    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    //
    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the last @ sign, unless some host-ending character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    //
    // ex:
    // http://a@b@c/ => user:a@b host:c
    // http://a@b?@c => user:a host:c path:/?@c

    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
    // Review our test case against browsers more comprehensively.

    // find the first instance of any hostEndingChars
    var hostEnd = -1;
    for (var i = 0; i < hostEndingChars.length; i++) {
      var hec = rest.indexOf(hostEndingChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }

    // at this point, either we have an explicit point where the
    // auth portion cannot go past, or the last @ char is the decider.
    var auth, atSign;
    if (hostEnd === -1) {
      // atSign can be anywhere.
      atSign = rest.lastIndexOf('@');
    } else {
      // atSign must be in auth portion.
      // http://a@b/c@d => host:b auth:a path:/c@d
      atSign = rest.lastIndexOf('@', hostEnd);
    }

    // Now we have a portion which is definitely the auth.
    // Pull that off.
    if (atSign !== -1) {
      auth = rest.slice(0, atSign);
      rest = rest.slice(atSign + 1);
      this.auth = decodeURIComponent(auth);
    }

    // the host is the remaining to the left of the first non-host char
    hostEnd = -1;
    for (var i = 0; i < nonHostChars.length; i++) {
      var hec = rest.indexOf(nonHostChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }
    // if we still have not hit it, then the entire thing is a host.
    if (hostEnd === -1)
      hostEnd = rest.length;

    this.host = rest.slice(0, hostEnd);
    rest = rest.slice(hostEnd);

    // pull out port.
    this.parseHost();

    // we've indicated that there is a hostname,
    // so even if it's empty, it has to be present.
    this.hostname = this.hostname || '';

    // if hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.
    var ipv6Hostname = this.hostname[0] === '[' &&
        this.hostname[this.hostname.length - 1] === ']';

    // validate a little.
    if (!ipv6Hostname) {
      var hostparts = this.hostname.split(/\./);
      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;
        if (!part.match(hostnamePartPattern)) {
          var newpart = '';
          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              // we replace non-ASCII char with a temporary placeholder
              // we need this to make sure size of hostname is not
              // broken by replacing non-ASCII by nothing
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          }
          // we test again with ASCII char only
          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);
            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }
            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }
            this.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    if (this.hostname.length > hostnameMaxLen) {
      this.hostname = '';
    } else {
      // hostnames are always lower case.
      this.hostname = this.hostname.toLowerCase();
    }

    if (!ipv6Hostname) {
      // IDNA Support: Returns a punycoded representation of "domain".
      // It only converts parts of the domain name that
      // have non-ASCII characters, i.e. it doesn't matter if
      // you call it with a domain that already is ASCII-only.
      this.hostname = punycode.toASCII(this.hostname);
    }

    var p = this.port ? ':' + this.port : '';
    var h = this.hostname || '';
    this.host = h + p;
    this.href += this.host;

    // strip [ and ] from the hostname
    // the host field still retains them, though
    if (ipv6Hostname) {
      this.hostname = this.hostname.substr(1, this.hostname.length - 2);
      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  }

  // now rest is set to the post-host stuff.
  // chop off any delim chars.
  if (!unsafeProtocol[lowerProto]) {

    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      if (rest.indexOf(ae) === -1)
        continue;
      var esc = encodeURIComponent(ae);
      if (esc === ae) {
        esc = escape(ae);
      }
      rest = rest.split(ae).join(esc);
    }
  }


  // chop off from the tail first.
  var hash = rest.indexOf('#');
  if (hash !== -1) {
    // got a fragment string.
    this.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }
  var qm = rest.indexOf('?');
  if (qm !== -1) {
    this.search = rest.substr(qm);
    this.query = rest.substr(qm + 1);
    if (parseQueryString) {
      this.query = querystring.parse(this.query);
    }
    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    // no query string, but parseQueryString still requested
    this.search = '';
    this.query = {};
  }
  if (rest) this.pathname = rest;
  if (slashedProtocol[lowerProto] &&
      this.hostname && !this.pathname) {
    this.pathname = '/';
  }

  //to support http.request
  if (this.pathname || this.search) {
    var p = this.pathname || '';
    var s = this.search || '';
    this.path = p + s;
  }

  // finally, reconstruct the href based on what has been validated.
  this.href = this.format();
  return this;
};

// format a parsed object into a url string
function urlFormat(obj) {
  // ensure it's an object, and not a string url.
  // If it's an obj, this is a no-op.
  // this way, you can call url_format() on strings
  // to clean up potentially wonky urls.
  if (util.isString(obj)) obj = urlParse(obj);
  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
  return obj.format();
}

Url.prototype.format = function() {
  var auth = this.auth || '';
  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = this.protocol || '',
      pathname = this.pathname || '',
      hash = this.hash || '',
      host = false,
      query = '';

  if (this.host) {
    host = auth + this.host;
  } else if (this.hostname) {
    host = auth + (this.hostname.indexOf(':') === -1 ?
        this.hostname :
        '[' + this.hostname + ']');
    if (this.port) {
      host += ':' + this.port;
    }
  }

  if (this.query &&
      util.isObject(this.query) &&
      Object.keys(this.query).length) {
    query = querystring.stringify(this.query);
  }

  var search = this.search || (query && ('?' + query)) || '';

  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.
  if (this.slashes ||
      (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;

  pathname = pathname.replace(/[?#]/g, function(match) {
    return encodeURIComponent(match);
  });
  search = search.replace('#', '%23');

  return protocol + host + pathname + search + hash;
};

function urlResolve(source, relative) {
  return urlParse(source, false, true).resolve(relative);
}

Url.prototype.resolve = function(relative) {
  return this.resolveObject(urlParse(relative, false, true)).format();
};

function urlResolveObject(source, relative) {
  if (!source) return relative;
  return urlParse(source, false, true).resolveObject(relative);
}

Url.prototype.resolveObject = function(relative) {
  if (util.isString(relative)) {
    var rel = new Url();
    rel.parse(relative, false, true);
    relative = rel;
  }

  var result = new Url();
  var tkeys = Object.keys(this);
  for (var tk = 0; tk < tkeys.length; tk++) {
    var tkey = tkeys[tk];
    result[tkey] = this[tkey];
  }

  // hash is always overridden, no matter what.
  // even href="" will remove it.
  result.hash = relative.hash;

  // if the relative url is empty, then there's nothing left to do here.
  if (relative.href === '') {
    result.href = result.format();
    return result;
  }

  // hrefs like //foo/bar always cut to the protocol.
  if (relative.slashes && !relative.protocol) {
    // take everything except the protocol from relative
    var rkeys = Object.keys(relative);
    for (var rk = 0; rk < rkeys.length; rk++) {
      var rkey = rkeys[rk];
      if (rkey !== 'protocol')
        result[rkey] = relative[rkey];
    }

    //urlParse appends trailing / to urls like http://www.example.com
    if (slashedProtocol[result.protocol] &&
        result.hostname && !result.pathname) {
      result.path = result.pathname = '/';
    }

    result.href = result.format();
    return result;
  }

  if (relative.protocol && relative.protocol !== result.protocol) {
    // if it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol[relative.protocol]) {
      var keys = Object.keys(relative);
      for (var v = 0; v < keys.length; v++) {
        var k = keys[v];
        result[k] = relative[k];
      }
      result.href = result.format();
      return result;
    }

    result.protocol = relative.protocol;
    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');
      while (relPath.length && !(relative.host = relPath.shift()));
      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      result.pathname = relPath.join('/');
    } else {
      result.pathname = relative.pathname;
    }
    result.search = relative.search;
    result.query = relative.query;
    result.host = relative.host || '';
    result.auth = relative.auth;
    result.hostname = relative.hostname || relative.host;
    result.port = relative.port;
    // to support http.request
    if (result.pathname || result.search) {
      var p = result.pathname || '';
      var s = result.search || '';
      result.path = p + s;
    }
    result.slashes = result.slashes || relative.slashes;
    result.href = result.format();
    return result;
  }

  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),
      isRelAbs = (
          relative.host ||
          relative.pathname && relative.pathname.charAt(0) === '/'
      ),
      mustEndAbs = (isRelAbs || isSourceAbs ||
                    (result.host && relative.pathname)),
      removeAllDots = mustEndAbs,
      srcPath = result.pathname && result.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = result.protocol && !slashedProtocol[result.protocol];

  // if the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // result.protocol has already been set by now.
  // Later on, put the first path part into the host field.
  if (psychotic) {
    result.hostname = '';
    result.port = null;
    if (result.host) {
      if (srcPath[0] === '') srcPath[0] = result.host;
      else srcPath.unshift(result.host);
    }
    result.host = '';
    if (relative.protocol) {
      relative.hostname = null;
      relative.port = null;
      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;
        else relPath.unshift(relative.host);
      }
      relative.host = null;
    }
    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    // it's absolute.
    result.host = (relative.host || relative.host === '') ?
                  relative.host : result.host;
    result.hostname = (relative.hostname || relative.hostname === '') ?
                      relative.hostname : result.hostname;
    result.search = relative.search;
    result.query = relative.query;
    srcPath = relPath;
    // fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    result.search = relative.search;
    result.query = relative.query;
  } else if (!util.isNullOrUndefined(relative.search)) {
    // just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (psychotic) {
      result.hostname = result.host = srcPath.shift();
      //occationaly the auth can get stuck only in host
      //this especially happens in cases like
      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
      var authInHost = result.host && result.host.indexOf('@') > 0 ?
                       result.host.split('@') : false;
      if (authInHost) {
        result.auth = authInHost.shift();
        result.host = result.hostname = authInHost.shift();
      }
    }
    result.search = relative.search;
    result.query = relative.query;
    //to support http.request
    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
      result.path = (result.pathname ? result.pathname : '') +
                    (result.search ? result.search : '');
    }
    result.href = result.format();
    return result;
  }

  if (!srcPath.length) {
    // no path at all.  easy.
    // we've already handled the other stuff above.
    result.pathname = null;
    //to support http.request
    if (result.search) {
      result.path = '/' + result.search;
    } else {
      result.path = null;
    }
    result.href = result.format();
    return result;
  }

  // if a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.
  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (
      (result.host || relative.host || srcPath.length > 1) &&
      (last === '.' || last === '..') || last === '');

  // strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];
    if (last === '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' &&
      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' ||
      (srcPath[0] && srcPath[0].charAt(0) === '/');

  // put the host back
  if (psychotic) {
    result.hostname = result.host = isAbsolute ? '' :
                                    srcPath.length ? srcPath.shift() : '';
    //occationaly the auth can get stuck only in host
    //this especially happens in cases like
    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
    var authInHost = result.host && result.host.indexOf('@') > 0 ?
                     result.host.split('@') : false;
    if (authInHost) {
      result.auth = authInHost.shift();
      result.host = result.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || (result.host && srcPath.length);

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  if (!srcPath.length) {
    result.pathname = null;
    result.path = null;
  } else {
    result.pathname = srcPath.join('/');
  }

  //to support request.http
  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
    result.path = (result.pathname ? result.pathname : '') +
                  (result.search ? result.search : '');
  }
  result.auth = relative.auth || result.auth;
  result.slashes = result.slashes || relative.slashes;
  result.href = result.format();
  return result;
};

Url.prototype.parseHost = function() {
  var host = this.host;
  var port = portPattern.exec(host);
  if (port) {
    port = port[0];
    if (port !== ':') {
      this.port = port.substr(1);
    }
    host = host.substr(0, host.length - port.length);
  }
  if (host) this.hostname = host;
};

},{"./util":16,"punycode":11,"querystring":14}],16:[function(require,module,exports){
'use strict';

module.exports = {
  isString: function(arg) {
    return typeof(arg) === 'string';
  },
  isObject: function(arg) {
    return typeof(arg) === 'object' && arg !== null;
  },
  isNull: function(arg) {
    return arg === null;
  },
  isNullOrUndefined: function(arg) {
    return arg == null;
  }
};

},{}],17:[function(require,module,exports){
module.exports={"exceptions":{"ck":{"www":{"$":0}},"jp":{"kawasaki":{"city":{"$":0}},"kitakyushu":{"city":{"$":0}},"kobe":{"city":{"$":0}},"nagoya":{"city":{"$":0}},"sapporo":{"city":{"$":0}},"sendai":{"city":{"$":0}},"yokohama":{"city":{"$":0}}}},"rules":{"ac":{"$":0,"com":{"$":0},"edu":{"$":0},"gov":{"$":0},"net":{"$":0},"mil":{"$":0},"org":{"$":0}},"ad":{"$":0,"nom":{"$":0}},"ae":{"$":0,"co":{"$":0},"net":{"$":0},"org":{"$":0},"sch":{"$":0},"ac":{"$":0},"gov":{"$":0},"mil":{"$":0},"blogspot":{"$":0},"nom":{"$":0}},"aero":{"$":0,"accident-investigation":{"$":0},"accident-prevention":{"$":0},"aerobatic":{"$":0},"aeroclub":{"$":0},"aerodrome":{"$":0},"agents":{"$":0},"aircraft":{"$":0},"airline":{"$":0},"airport":{"$":0},"air-surveillance":{"$":0},"airtraffic":{"$":0},"air-traffic-control":{"$":0},"ambulance":{"$":0},"amusement":{"$":0},"association":{"$":0},"author":{"$":0},"ballooning":{"$":0},"broker":{"$":0},"caa":{"$":0},"cargo":{"$":0},"catering":{"$":0},"certification":{"$":0},"championship":{"$":0},"charter":{"$":0},"civilaviation":{"$":0},"club":{"$":0},"conference":{"$":0},"consultant":{"$":0},"consulting":{"$":0},"control":{"$":0},"council":{"$":0},"crew":{"$":0},"design":{"$":0},"dgca":{"$":0},"educator":{"$":0},"emergency":{"$":0},"engine":{"$":0},"engineer":{"$":0},"entertainment":{"$":0},"equipment":{"$":0},"exchange":{"$":0},"express":{"$":0},"federation":{"$":0},"flight":{"$":0},"freight":{"$":0},"fuel":{"$":0},"gliding":{"$":0},"government":{"$":0},"groundhandling":{"$":0},"group":{"$":0},"hanggliding":{"$":0},"homebuilt":{"$":0},"insurance":{"$":0},"journal":{"$":0},"journalist":{"$":0},"leasing":{"$":0},"logistics":{"$":0},"magazine":{"$":0},"maintenance":{"$":0},"media":{"$":0},"microlight":{"$":0},"modelling":{"$":0},"navigation":{"$":0},"parachuting":{"$":0},"paragliding":{"$":0},"passenger-association":{"$":0},"pilot":{"$":0},"press":{"$":0},"production":{"$":0},"recreation":{"$":0},"repbody":{"$":0},"res":{"$":0},"research":{"$":0},"rotorcraft":{"$":0},"safety":{"$":0},"scientist":{"$":0},"services":{"$":0},"show":{"$":0},"skydiving":{"$":0},"software":{"$":0},"student":{"$":0},"trader":{"$":0},"trading":{"$":0},"trainer":{"$":0},"union":{"$":0},"workinggroup":{"$":0},"works":{"$":0}},"af":{"$":0,"gov":{"$":0},"com":{"$":0},"org":{"$":0},"net":{"$":0},"edu":{"$":0}},"ag":{"$":0,"com":{"$":0},"org":{"$":0},"net":{"$":0},"co":{"$":0},"nom":{"$":0}},"ai":{"$":0,"off":{"$":0},"com":{"$":0},"net":{"$":0},"org":{"$":0},"nom":{"$":0}},"al":{"$":0,"com":{"$":0},"edu":{"$":0},"gov":{"$":0},"mil":{"$":0},"net":{"$":0},"org":{"$":0},"blogspot":{"$":0},"nom":{"$":0}},"am":{"$":0,"blogspot":{"$":0}},"ao":{"$":0,"ed":{"$":0},"gv":{"$":0},"og":{"$":0},"co":{"$":0},"pb":{"$":0},"it":{"$":0}},"aq":{"$":0},"ar":{"$":0,"com":{"$":0,"blogspot":{"$":0}},"edu":{"$":0},"gob":{"$":0},"gov":{"$":0},"int":{"$":0},"mil":{"$":0},"musica":{"$":0},"net":{"$":0},"org":{"$":0},"tur":{"$":0}},"arpa":{"$":0,"e164":{"$":0},"in-addr":{"$":0},"ip6":{"$":0},"iris":{"$":0},"uri":{"$":0},"urn":{"$":0}},"as":{"$":0,"gov":{"$":0}},"asia":{"$":0,"cloudns":{"$":0}},"at":{"$":0,"ac":{"$":0},"co":{"$":0,"blogspot":{"$":0}},"gv":{"$":0},"or":{"$":0},"futurecms":{"*":{"$":0}},"futurehosting":{"$":0},"futuremailing":{"$":0},"ortsinfo":{"ex":{"*":{"$":0}},"kunden":{"*":{"$":0}}},"biz":{"$":0},"info":{"$":0},"priv":{"$":0},"12hp":{"$":0},"2ix":{"$":0},"4lima":{"$":0},"lima-city":{"$":0}},"au":{"$":0,"com":{"$":0,"blogspot":{"$":0}},"net":{"$":0},"org":{"$":0},"edu":{"$":0,"act":{"$":0},"nsw":{"$":0},"nt":{"$":0},"qld":{"$":0},"sa":{"$":0},"tas":{"$":0},"vic":{"$":0},"wa":{"$":0}},"gov":{"$":0,"qld":{"$":0},"sa":{"$":0},"tas":{"$":0},"vic":{"$":0},"wa":{"$":0}},"asn":{"$":0},"id":{"$":0},"info":{"$":0},"conf":{"$":0},"oz":{"$":0},"act":{"$":0},"nsw":{"$":0},"nt":{"$":0},"qld":{"$":0},"sa":{"$":0},"tas":{"$":0},"vic":{"$":0},"wa":{"$":0}},"aw":{"$":0,"com":{"$":0}},"ax":{"$":0},"az":{"$":0,"com":{"$":0},"net":{"$":0},"int":{"$":0},"gov":{"$":0},"org":{"$":0},"edu":{"$":0},"info":{"$":0},"pp":{"$":0},"mil":{"$":0},"name":{"$":0},"pro":{"$":0},"biz":{"$":0}},"ba":{"$":0,"com":{"$":0},"edu":{"$":0},"gov":{"$":0},"mil":{"$":0},"net":{"$":0},"org":{"$":0},"blogspot":{"$":0}},"bb":{"$":0,"biz":{"$":0},"co":{"$":0},"com":{"$":0},"edu":{"$":0},"gov":{"$":0},"info":{"$":0},"net":{"$":0},"org":{"$":0},"store":{"$":0},"tv":{"$":0}},"bd":{"*":{"$":0}},"be":{"$":0,"ac":{"$":0},"webhosting":{"$":0},"blogspot":{"$":0},"transurl":{"*":{"$":0}}},"bf":{"$":0,"gov":{"$":0}},"bg":{"0":{"$":0},"1":{"$":0},"2":{"$":0},"3":{"$":0},"4":{"$":0},"5":{"$":0},"6":{"$":0},"7":{"$":0},"8":{"$":0},"9":{"$":0},"$":0,"a":{"$":0},"b":{"$":0},"c":{"$":0},"d":{"$":0},"e":{"$":0},"f":{"$":0},"g":{"$":0},"h":{"$":0},"i":{"$":0},"j":{"$":0},"k":{"$":0},"l":{"$":0},"m":{"$":0},"n":{"$":0},"o":{"$":0},"p":{"$":0},"q":{"$":0},"r":{"$":0},"s":{"$":0},"t":{"$":0},"u":{"$":0},"v":{"$":0},"w":{"$":0},"x":{"$":0},"y":{"$":0},"z":{"$":0},"blogspot":{"$":0},"barsy":{"$":0}},"bh":{"$":0,"com":{"$":0},"edu":{"$":0},"net":{"$":0},"org":{"$":0},"gov":{"$":0}},"bi":{"$":0,"co":{"$":0},"com":{"$":0},"edu":{"$":0},"or":{"$":0},"org":{"$":0}},"biz":{"$":0,"cloudns":{"$":0},"dyndns":{"$":0},"for-better":{"$":0},"for-more":{"$":0},"for-some":{"$":0},"for-the":{"$":0},"selfip":{"$":0},"webhop":{"$":0},"mmafan":{"$":0},"myftp":{"$":0},"no-ip":{"$":0},"dscloud":{"$":0}},"bj":{"$":0,"asso":{"$":0},"barreau":{"$":0},"gouv":{"$":0},"blogspot":{"$":0}},"bm":{"$":0,"com":{"$":0},"edu":{"$":0},"gov":{"$":0},"net":{"$":0},"org":{"$":0}},"bn":{"*":{"$":0}},"bo":{"$":0,"com":{"$":0},"edu":{"$":0},"gob":{"$":0},"int":{"$":0},"org":{"$":0},"net":{"$":0},"mil":{"$":0},"tv":{"$":0},"web":{"$":0},"academia":{"$":0},"agro":{"$":0},"arte":{"$":0},"blog":{"$":0},"bolivia":{"$":0},"ciencia":{"$":0},"cooperativa":{"$":0},"democracia":{"$":0},"deporte":{"$":0},"ecologia":{"$":0},"economia":{"$":0},"empresa":{"$":0},"indigena":{"$":0},"industria":{"$":0},"info":{"$":0},"medicina":{"$":0},"movimiento":{"$":0},"musica":{"$":0},"natural":{"$":0},"nombre":{"$":0},"noticias":{"$":0},"patria":{"$":0},"politica":{"$":0},"profesional":{"$":0},"plurinacional":{"$":0},"pueblo":{"$":0},"revista":{"$":0},"salud":{"$":0},"tecnologia":{"$":0},"tksat":{"$":0},"transporte":{"$":0},"wiki":{"$":0}},"br":{"$":0,"9guacu":{"$":0},"abc":{"$":0},"adm":{"$":0},"adv":{"$":0},"agr":{"$":0},"aju":{"$":0},"am":{"$":0},"anani":{"$":0},"aparecida":{"$":0},"arq":{"$":0},"art":{"$":0},"ato":{"$":0},"b":{"$":0},"belem":{"$":0},"bhz":{"$":0},"bio":{"$":0},"blog":{"$":0},"bmd":{"$":0},"boavista":{"$":0},"bsb":{"$":0},"campinagrande":{"$":0},"campinas":{"$":0},"caxias":{"$":0},"cim":{"$":0},"cng":{"$":0},"cnt":{"$":0},"com":{"$":0,"blogspot":{"$":0}},"contagem":{"$":0},"coop":{"$":0},"cri":{"$":0},"cuiaba":{"$":0},"curitiba":{"$":0},"def":{"$":0},"ecn":{"$":0},"eco":{"$":0},"edu":{"$":0},"emp":{"$":0},"eng":{"$":0},"esp":{"$":0},"etc":{"$":0},"eti":{"$":0},"far":{"$":0},"feira":{"$":0},"flog":{"$":0},"floripa":{"$":0},"fm":{"$":0},"fnd":{"$":0},"fortal":{"$":0},"fot":{"$":0},"foz":{"$":0},"fst":{"$":0},"g12":{"$":0},"ggf":{"$":0},"goiania":{"$":0},"gov":{"$":0,"ac":{"$":0},"al":{"$":0},"am":{"$":0},"ap":{"$":0},"ba":{"$":0},"ce":{"$":0},"df":{"$":0},"es":{"$":0},"go":{"$":0},"ma":{"$":0},"mg":{"$":0},"ms":{"$":0},"mt":{"$":0},"pa":{"$":0},"pb":{"$":0},"pe":{"$":0},"pi":{"$":0},"pr":{"$":0},"rj":{"$":0},"rn":{"$":0},"ro":{"$":0},"rr":{"$":0},"rs":{"$":0},"sc":{"$":0},"se":{"$":0},"sp":{"$":0},"to":{"$":0}},"gru":{"$":0},"imb":{"$":0},"ind":{"$":0},"inf":{"$":0},"jab":{"$":0},"jampa":{"$":0},"jdf":{"$":0},"joinville":{"$":0},"jor":{"$":0},"jus":{"$":0},"leg":{"$":0,"ac":{"$":0},"al":{"$":0},"am":{"$":0},"ap":{"$":0},"ba":{"$":0},"ce":{"$":0},"df":{"$":0},"es":{"$":0},"go":{"$":0},"ma":{"$":0},"mg":{"$":0},"ms":{"$":0},"mt":{"$":0},"pa":{"$":0},"pb":{"$":0},"pe":{"$":0},"pi":{"$":0},"pr":{"$":0},"rj":{"$":0},"rn":{"$":0},"ro":{"$":0},"rr":{"$":0},"rs":{"$":0},"sc":{"$":0},"se":{"$":0},"sp":{"$":0},"to":{"$":0}},"lel":{"$":0},"londrina":{"$":0},"macapa":{"$":0},"maceio":{"$":0},"manaus":{"$":0},"maringa":{"$":0},"mat":{"$":0},"med":{"$":0},"mil":{"$":0},"morena":{"$":0},"mp":{"$":0},"mus":{"$":0},"natal":{"$":0},"net":{"$":0},"niteroi":{"$":0},"nom":{"*":{"$":0}},"not":{"$":0},"ntr":{"$":0},"odo":{"$":0},"org":{"$":0},"osasco":{"$":0},"palmas":{"$":0},"poa":{"$":0},"ppg":{"$":0},"pro":{"$":0},"psc":{"$":0},"psi":{"$":0},"pvh":{"$":0},"qsl":{"$":0},"radio":{"$":0},"rec":{"$":0},"recife":{"$":0},"ribeirao":{"$":0},"rio":{"$":0},"riobranco":{"$":0},"riopreto":{"$":0},"salvador":{"$":0},"sampa":{"$":0},"santamaria":{"$":0},"santoandre":{"$":0},"saobernardo":{"$":0},"saogonca":{"$":0},"sjc":{"$":0},"slg":{"$":0},"slz":{"$":0},"sorocaba":{"$":0},"srv":{"$":0},"taxi":{"$":0},"teo":{"$":0},"the":{"$":0},"tmp":{"$":0},"trd":{"$":0},"tur":{"$":0},"tv":{"$":0},"udi":{"$":0},"vet":{"$":0},"vix":{"$":0},"vlog":{"$":0},"wiki":{"$":0},"zlg":{"$":0}},"bs":{"$":0,"com":{"$":0},"net":{"$":0},"org":{"$":0},"edu":{"$":0},"gov":{"$":0},"we":{"$":0}},"bt":{"$":0,"com":{"$":0},"edu":{"$":0},"gov":{"$":0},"net":{"$":0},"org":{"$":0}},"bv":{"$":0},"bw":{"$":0,"co":{"$":0},"org":{"$":0}},"by":{"$":0,"gov":{"$":0},"mil":{"$":0},"com":{"$":0,"blogspot":{"$":0}},"of":{"$":0},"nym":{"$":0}},"bz":{"$":0,"com":{"$":0},"net":{"$":0},"org":{"$":0},"edu":{"$":0},"gov":{"$":0},"za":{"$":0},"nym":{"$":0}},"ca":{"$":0,"ab":{"$":0},"bc":{"$":0},"mb":{"$":0},"nb":{"$":0},"nf":{"$":0},"nl":{"$":0},"ns":{"$":0},"nt":{"$":0},"nu":{"$":0},"on":{"$":0},"pe":{"$":0},"qc":{"$":0},"sk":{"$":0},"yk":{"$":0},"gc":{"$":0},"1password":{"$":0},"awdev":{"*":{"$":0}},"co":{"$":0},"blogspot":{"$":0},"no-ip":{"$":0}},"cat":{"$":0},"cc":{"$":0,"cloudns":{"$":0},"ftpaccess":{"$":0},"game-server":{"$":0},"myphotos":{"$":0},"scrapping":{"$":0},"twmail":{"$":0},"fantasyleague":{"$":0}},"cd":{"$":0,"gov":{"$":0}},"cf":{"$":0,"blogspot":{"$":0}},"cg":{"$":0},"ch":{"$":0,"square7":{"$":0},"blogspot":{"$":0},"gotdns":{"$":0},"12hp":{"$":0},"2ix":{"$":0},"4lima":{"$":0},"lima-city":{"$":0}},"ci":{"$":0,"org":{"$":0},"or":{"$":0},"com":{"$":0},"co":{"$":0},"edu":{"$":0},"ed":{"$":0},"ac":{"$":0},"net":{"$":0},"go":{"$":0},"asso":{"$":0},"xn--aroport-bya":{"$":0},"int":{"$":0},"presse":{"$":0},"md":{"$":0},"gouv":{"$":0}},"ck":{"*":{"$":0}},"cl":{"$":0,"gov":{"$":0},"gob":{"$":0},"co":{"$":0},"mil":{"$":0},"blogspot":{"$":0},"nom":{"$":0}},"cm":{"$":0,"co":{"$":0},"com":{"$":0},"gov":{"$":0},"net":{"$":0}},"cn":{"$":0,"ac":{"$":0},"com":{"$":0,"amazonaws":{"compute":{"*":{"$":0}},"eb":{"cn-north-1":{"$":0}},"elb":{"*":{"$":0}},"cn-north-1":{"s3":{"$":0}}}},"edu":{"$":0},"gov":{"$":0},"net":{"$":0},"org":{"$":0},"mil":{"$":0},"xn--55qx5d":{"$":0},"xn--io0a7i":{"$":0},"xn--od0alg":{"$":0},"ah":{"$":0},"bj":{"$":0},"cq":{"$":0},"fj":{"$":0},"gd":{"$":0},"gs":{"$":0},"gz":{"$":0},"gx":{"$":0},"ha":{"$":0},"hb":{"$":0},"he":{"$":0},"hi":{"$":0},"hl":{"$":0},"hn":{"$":0},"jl":{"$":0},"js":{"$":0},"jx":{"$":0},"ln":{"$":0},"nm":{"$":0},"nx":{"$":0},"qh":{"$":0},"sc":{"$":0},"sd":{"$":0},"sh":{"$":0},"sn":{"$":0},"sx":{"$":0},"tj":{"$":0},"xj":{"$":0},"xz":{"$":0},"yn":{"$":0},"zj":{"$":0},"hk":{"$":0},"mo":{"$":0},"tw":{"$":0}},"co":{"$":0,"arts":{"$":0},"com":{"$":0,"blogspot":{"$":0}},"edu":{"$":0},"firm":{"$":0},"gov":{"$":0},"info":{"$":0},"int":{"$":0},"mil":{"$":0},"net":{"$":0},"nom":{"$":0},"org":{"$":0},"rec":{"$":0},"web":{"$":0},"nodum":{"$":0}},"com":{"$":0,"1password":{"$":0},"amazonaws":{"compute":{"*":{"$":0}},"compute-1":{"*":{"$":0}},"us-east-1":{"$":0,"dualstack":{"s3":{"$":0}}},"elb":{"*":{"$":0}},"s3":{"$":0},"s3-ap-northeast-1":{"$":0},"s3-ap-northeast-2":{"$":0},"s3-ap-south-1":{"$":0},"s3-ap-southeast-1":{"$":0},"s3-ap-southeast-2":{"$":0},"s3-ca-central-1":{"$":0},"s3-eu-central-1":{"$":0},"s3-eu-west-1":{"$":0},"s3-eu-west-2":{"$":0},"s3-eu-west-3":{"$":0},"s3-external-1":{"$":0},"s3-fips-us-gov-west-1":{"$":0},"s3-sa-east-1":{"$":0},"s3-us-gov-west-1":{"$":0},"s3-us-east-2":{"$":0},"s3-us-west-1":{"$":0},"s3-us-west-2":{"$":0},"ap-northeast-2":{"s3":{"$":0},"dualstack":{"s3":{"$":0}},"s3-website":{"$":0}},"ap-south-1":{"s3":{"$":0},"dualstack":{"s3":{"$":0}},"s3-website":{"$":0}},"ca-central-1":{"s3":{"$":0},"dualstack":{"s3":{"$":0}},"s3-website":{"$":0}},"eu-central-1":{"s3":{"$":0},"dualstack":{"s3":{"$":0}},"s3-website":{"$":0}},"eu-west-2":{"s3":{"$":0},"dualstack":{"s3":{"$":0}},"s3-website":{"$":0}},"eu-west-3":{"s3":{"$":0},"dualstack":{"s3":{"$":0}},"s3-website":{"$":0}},"us-east-2":{"s3":{"$":0},"dualstack":{"s3":{"$":0}},"s3-website":{"$":0}},"ap-northeast-1":{"dualstack":{"s3":{"$":0}}},"ap-southeast-1":{"dualstack":{"s3":{"$":0}}},"ap-southeast-2":{"dualstack":{"s3":{"$":0}}},"eu-west-1":{"dualstack":{"s3":{"$":0}}},"sa-east-1":{"dualstack":{"s3":{"$":0}}},"s3-website-us-east-1":{"$":0},"s3-website-us-west-1":{"$":0},"s3-website-us-west-2":{"$":0},"s3-website-ap-northeast-1":{"$":0},"s3-website-ap-southeast-1":{"$":0},"s3-website-ap-southeast-2":{"$":0},"s3-website-eu-west-1":{"$":0},"s3-website-sa-east-1":{"$":0}},"elasticbeanstalk":{"$":0,"ap-northeast-1":{"$":0},"ap-northeast-2":{"$":0},"ap-south-1":{"$":0},"ap-southeast-1":{"$":0},"ap-southeast-2":{"$":0},"ca-central-1":{"$":0},"eu-central-1":{"$":0},"eu-west-1":{"$":0},"eu-west-2":{"$":0},"eu-west-3":{"$":0},"sa-east-1":{"$":0},"us-east-1":{"$":0},"us-east-2":{"$":0},"us-gov-west-1":{"$":0},"us-west-1":{"$":0},"us-west-2":{"$":0}},"on-aptible":{"$":0},"myasustor":{"$":0},"betainabox":{"$":0},"bplaced":{"$":0},"ar":{"$":0},"br":{"$":0},"cn":{"$":0},"de":{"$":0},"eu":{"$":0},"gb":{"$":0},"hu":{"$":0},"jpn":{"$":0},"kr":{"$":0},"mex":{"$":0},"no":{"$":0},"qc":{"$":0},"ru":{"$":0},"sa":{"$":0},"se":{"$":0},"uk":{"$":0},"us":{"$":0},"uy":{"$":0},"za":{"$":0},"africa":{"$":0},"gr":{"$":0},"co":{"$":0},"xenapponazure":{"$":0},"jdevcloud":{"$":0},"wpdevcloud":{"$":0},"cloudcontrolled":{"$":0},"cloudcontrolapp":{"$":0},"drayddns":{"$":0},"dreamhosters":{"$":0},"mydrobo":{"$":0},"dyndns-at-home":{"$":0},"dyndns-at-work":{"$":0},"dyndns-blog":{"$":0},"dyndns-free":{"$":0},"dyndns-home":{"$":0},"dyndns-ip":{"$":0},"dyndns-mail":{"$":0},"dyndns-office":{"$":0},"dyndns-pics":{"$":0},"dyndns-remote":{"$":0},"dyndns-server":{"$":0},"dyndns-web":{"$":0},"dyndns-wiki":{"$":0},"dyndns-work":{"$":0},"blogdns":{"$":0},"cechire":{"$":0},"dnsalias":{"$":0},"dnsdojo":{"$":0},"doesntexist":{"$":0},"dontexist":{"$":0},"doomdns":{"$":0},"dyn-o-saur":{"$":0},"dynalias":{"$":0},"est-a-la-maison":{"$":0},"est-a-la-masion":{"$":0},"est-le-patron":{"$":0},"est-mon-blogueur":{"$":0},"from-ak":{"$":0},"from-al":{"$":0},"from-ar":{"$":0},"from-ca":{"$":0},"from-ct":{"$":0},"from-dc":{"$":0},"from-de":{"$":0},"from-fl":{"$":0},"from-ga":{"$":0},"from-hi":{"$":0},"from-ia":{"$":0},"from-id":{"$":0},"from-il":{"$":0},"from-in":{"$":0},"from-ks":{"$":0},"from-ky":{"$":0},"from-ma":{"$":0},"from-md":{"$":0},"from-mi":{"$":0},"from-mn":{"$":0},"from-mo":{"$":0},"from-ms":{"$":0},"from-mt":{"$":0},"from-nc":{"$":0},"from-nd":{"$":0},"from-ne":{"$":0},"from-nh":{"$":0},"from-nj":{"$":0},"from-nm":{"$":0},"from-nv":{"$":0},"from-oh":{"$":0},"from-ok":{"$":0},"from-or":{"$":0},"from-pa":{"$":0},"from-pr":{"$":0},"from-ri":{"$":0},"from-sc":{"$":0},"from-sd":{"$":0},"from-tn":{"$":0},"from-tx":{"$":0},"from-ut":{"$":0},"from-va":{"$":0},"from-vt":{"$":0},"from-wa":{"$":0},"from-wi":{"$":0},"from-wv":{"$":0},"from-wy":{"$":0},"getmyip":{"$":0},"gotdns":{"$":0},"hobby-site":{"$":0},"homelinux":{"$":0},"homeunix":{"$":0},"iamallama":{"$":0},"is-a-anarchist":{"$":0},"is-a-blogger":{"$":0},"is-a-bookkeeper":{"$":0},"is-a-bulls-fan":{"$":0},"is-a-caterer":{"$":0},"is-a-chef":{"$":0},"is-a-conservative":{"$":0},"is-a-cpa":{"$":0},"is-a-cubicle-slave":{"$":0},"is-a-democrat":{"$":0},"is-a-designer":{"$":0},"is-a-doctor":{"$":0},"is-a-financialadvisor":{"$":0},"is-a-geek":{"$":0},"is-a-green":{"$":0},"is-a-guru":{"$":0},"is-a-hard-worker":{"$":0},"is-a-hunter":{"$":0},"is-a-landscaper":{"$":0},"is-a-lawyer":{"$":0},"is-a-liberal":{"$":0},"is-a-libertarian":{"$":0},"is-a-llama":{"$":0},"is-a-musician":{"$":0},"is-a-nascarfan":{"$":0},"is-a-nurse":{"$":0},"is-a-painter":{"$":0},"is-a-personaltrainer":{"$":0},"is-a-photographer":{"$":0},"is-a-player":{"$":0},"is-a-republican":{"$":0},"is-a-rockstar":{"$":0},"is-a-socialist":{"$":0},"is-a-student":{"$":0},"is-a-teacher":{"$":0},"is-a-techie":{"$":0},"is-a-therapist":{"$":0},"is-an-accountant":{"$":0},"is-an-actor":{"$":0},"is-an-actress":{"$":0},"is-an-anarchist":{"$":0},"is-an-artist":{"$":0},"is-an-engineer":{"$":0},"is-an-entertainer":{"$":0},"is-certified":{"$":0},"is-gone":{"$":0},"is-into-anime":{"$":0},"is-into-cars":{"$":0},"is-into-cartoons":{"$":0},"is-into-games":{"$":0},"is-leet":{"$":0},"is-not-certified":{"$":0},"is-slick":{"$":0},"is-uberleet":{"$":0},"is-with-theband":{"$":0},"isa-geek":{"$":0},"isa-hockeynut":{"$":0},"issmarterthanyou":{"$":0},"likes-pie":{"$":0},"likescandy":{"$":0},"neat-url":{"$":0},"saves-the-whales":{"$":0},"selfip":{"$":0},"sells-for-less":{"$":0},"sells-for-u":{"$":0},"servebbs":{"$":0},"simple-url":{"$":0},"space-to-rent":{"$":0},"teaches-yoga":{"$":0},"writesthisblog":{"$":0},"ddnsfree":{"$":0},"ddnsgeek":{"$":0},"giize":{"$":0},"gleeze":{"$":0},"kozow":{"$":0},"loseyourip":{"$":0},"ooguy":{"$":0},"theworkpc":{"$":0},"mytuleap":{"$":0},"evennode":{"eu-1":{"$":0},"eu-2":{"$":0},"eu-3":{"$":0},"eu-4":{"$":0},"us-1":{"$":0},"us-2":{"$":0},"us-3":{"$":0},"us-4":{"$":0}},"fbsbx":{"apps":{"$":0}},"firebaseapp":{"$":0},"flynnhub":{"$":0},"freebox-os":{"$":0},"freeboxos":{"$":0},"githubusercontent":{"$":0},"0emm":{"*":{"$":0}},"appspot":{"$":0},"blogspot":{"$":0},"codespot":{"$":0},"googleapis":{"$":0},"googlecode":{"$":0},"pagespeedmobilizer":{"$":0},"publishproxy":{"$":0},"withgoogle":{"$":0},"withyoutube":{"$":0},"herokuapp":{"$":0},"herokussl":{"$":0},"pixolino":{"$":0},"joyent":{"cns":{"*":{"$":0}}},"barsyonline":{"$":0},"meteorapp":{"$":0,"eu":{"$":0}},"bitballoon":{"$":0},"netlify":{"$":0},"4u":{"$":0},"nfshost":{"$":0},"blogsyte":{"$":0},"ciscofreak":{"$":0},"damnserver":{"$":0},"ditchyourip":{"$":0},"dnsiskinky":{"$":0},"dynns":{"$":0},"geekgalaxy":{"$":0},"health-carereform":{"$":0},"homesecuritymac":{"$":0},"homesecuritypc":{"$":0},"myactivedirectory":{"$":0},"mysecuritycamera":{"$":0},"net-freaks":{"$":0},"onthewifi":{"$":0},"point2this":{"$":0},"quicksytes":{"$":0},"securitytactics":{"$":0},"serveexchange":{"$":0},"servehumour":{"$":0},"servep2p":{"$":0},"servesarcasm":{"$":0},"stufftoread":{"$":0},"unusualperson":{"$":0},"workisboring":{"$":0},"3utilities":{"$":0},"ddnsking":{"$":0},"myvnc":{"$":0},"servebeer":{"$":0},"servecounterstrike":{"$":0},"serveftp":{"$":0},"servegame":{"$":0},"servehalflife":{"$":0},"servehttp":{"$":0},"serveirc":{"$":0},"servemp3":{"$":0},"servepics":{"$":0},"servequake":{"$":0},"operaunite":{"$":0},"outsystemscloud":{"$":0},"ownprovider":{"$":0},"pgfog":{"$":0},"pagefrontapp":{"$":0},"gotpantheon":{"$":0},"prgmr":{"xen":{"$":0}},"qa2":{"$":0},"dev-myqnapcloud":{"$":0},"alpha-myqnapcloud":{"$":0},"myqnapcloud":{"$":0},"quipelements":{"*":{"$":0}},"rackmaze":{"$":0},"rhcloud":{"$":0},"logoip":{"$":0},"scrysec":{"$":0},"firewall-gateway":{"$":0},"myshopblocks":{"$":0},"1kapp":{"$":0},"appchizi":{"$":0},"applinzi":{"$":0},"sinaapp":{"$":0},"vipsinaapp":{"$":0},"bounty-full":{"$":0,"alpha":{"$":0},"beta":{"$":0}},"temp-dns":{"$":0},"dsmynas":{"$":0},"familyds":{"$":0},"bloxcms":{"$":0},"townnews-staging":{"$":0},"hk":{"$":0},"remotewd":{"$":0},"yolasite":{"$":0}},"coop":{"$":0},"cr":{"$":0,"ac":{"$":0},"co":{"$":0},"ed":{"$":0},"fi":{"$":0},"go":{"$":0},"or":{"$":0},"sa":{"$":0}},"cu":{"$":0,"com":{"$":0},"edu":{"$":0},"org":{"$":0},"net":{"$":0},"gov":{"$":0},"inf":{"$":0}},"cv":{"$":0,"blogspot":{"$":0}},"cw":{"$":0,"com":{"$":0},"edu":{"$":0},"net":{"$":0},"org":{"$":0}},"cx":{"$":0,"gov":{"$":0},"ath":{"$":0},"info":{"$":0}},"cy":{"$":0,"ac":{"$":0},"biz":{"$":0},"com":{"$":0,"blogspot":{"$":0}},"ekloges":{"$":0},"gov":{"$":0},"ltd":{"$":0},"name":{"$":0},"net":{"$":0},"org":{"$":0},"parliament":{"$":0},"press":{"$":0},"pro":{"$":0},"tm":{"$":0}},"cz":{"$":0,"co":{"$":0},"realm":{"$":0},"e4":{"$":0},"blogspot":{"$":0},"metacentrum":{"cloud":{"$":0},"custom":{"$":0}}},"de":{"$":0,"bplaced":{"$":0},"square7":{"$":0},"com":{"$":0},"cosidns":{"dyn":{"$":0}},"dynamisches-dns":{"$":0},"dnsupdater":{"$":0},"internet-dns":{"$":0},"l-o-g-i-n":{"$":0},"dnshome":{"$":0},"fuettertdasnetz":{"$":0},"isteingeek":{"$":0},"istmein":{"$":0},"lebtimnetz":{"$":0},"leitungsen":{"$":0},"traeumtgerade":{"$":0},"ddnss":{"$":0,"dyn":{"$":0},"dyndns":{"$":0}},"dyndns1":{"$":0},"dyn-ip24":{"$":0},"home-webserver":{"$":0,"dyn":{"$":0}},"myhome-server":{"$":0},"goip":{"$":0},"blogspot":{"$":0},"keymachine":{"$":0},"git-repos":{"$":0},"lcube-server":{"$":0},"svn-repos":{"$":0},"barsy":{"$":0},"logoip":{"$":0},"firewall-gateway":{"$":0},"my-gateway":{"$":0},"my-router":{"$":0},"spdns":{"$":0},"taifun-dns":{"$":0},"12hp":{"$":0},"2ix":{"$":0},"4lima":{"$":0},"lima-city":{"$":0},"dd-dns":{"$":0},"dray-dns":{"$":0},"draydns":{"$":0},"dyn-vpn":{"$":0},"dynvpn":{"$":0},"mein-vigor":{"$":0},"my-vigor":{"$":0},"my-wan":{"$":0},"syno-ds":{"$":0},"synology-diskstation":{"$":0},"synology-ds":{"$":0}},"dj":{"$":0},"dk":{"$":0,"biz":{"$":0},"co":{"$":0},"firm":{"$":0},"reg":{"$":0},"store":{"$":0},"blogspot":{"$":0}},"dm":{"$":0,"com":{"$":0},"net":{"$":0},"org":{"$":0},"edu":{"$":0},"gov":{"$":0}},"do":{"$":0,"art":{"$":0},"com":{"$":0},"edu":{"$":0},"gob":{"$":0},"gov":{"$":0},"mil":{"$":0},"net":{"$":0},"org":{"$":0},"sld":{"$":0},"web":{"$":0}},"dz":{"$":0,"com":{"$":0},"org":{"$":0},"net":{"$":0},"gov":{"$":0},"edu":{"$":0},"asso":{"$":0},"pol":{"$":0},"art":{"$":0}},"ec":{"$":0,"com":{"$":0},"info":{"$":0},"net":{"$":0},"fin":{"$":0},"k12":{"$":0},"med":{"$":0},"pro":{"$":0},"org":{"$":0},"edu":{"$":0},"gov":{"$":0},"gob":{"$":0},"mil":{"$":0}},"edu":{"$":0},"ee":{"$":0,"edu":{"$":0},"gov":{"$":0},"riik":{"$":0},"lib":{"$":0},"med":{"$":0},"com":{"$":0,"blogspot":{"$":0}},"pri":{"$":0},"aip":{"$":0},"org":{"$":0},"fie":{"$":0}},"eg":{"$":0,"com":{"$":0,"blogspot":{"$":0}},"edu":{"$":0},"eun":{"$":0},"gov":{"$":0},"mil":{"$":0},"name":{"$":0},"net":{"$":0},"org":{"$":0},"sci":{"$":0}},"er":{"*":{"$":0}},"es":{"$":0,"com":{"$":0,"blogspot":{"$":0}},"nom":{"$":0},"org":{"$":0},"gob":{"$":0},"edu":{"$":0}},"et":{"$":0,"com":{"$":0},"gov":{"$":0},"org":{"$":0},"edu":{"$":0},"biz":{"$":0},"name":{"$":0},"info":{"$":0},"net":{"$":0}},"eu":{"$":0,"1password":{"$":0},"mycd":{"$":0},"cloudns":{"$":0},"barsy":{"$":0},"wellbeingzone":{"$":0},"spdns":{"$":0},"transurl":{"*":{"$":0}},"diskstation":{"$":0}},"fi":{"$":0,"aland":{"$":0},"dy":{"$":0},"blogspot":{"$":0},"iki":{"$":0}},"fj":{"*":{"$":0}},"fk":{"*":{"$":0}},"fm":{"$":0},"fo":{"$":0},"fr":{"$":0,"com":{"$":0},"asso":{"$":0},"nom":{"$":0},"prd":{"$":0},"presse":{"$":0},"tm":{"$":0},"aeroport":{"$":0},"assedic":{"$":0},"avocat":{"$":0},"avoues":{"$":0},"cci":{"$":0},"chambagri":{"$":0},"chirurgiens-dentistes":{"$":0},"experts-comptables":{"$":0},"geometre-expert":{"$":0},"gouv":{"$":0},"greta":{"$":0},"huissier-justice":{"$":0},"medecin":{"$":0},"notaires":{"$":0},"pharmacien":{"$":0},"port":{"$":0},"veterinaire":{"$":0},"fbx-os":{"$":0},"fbxos":{"$":0},"freebox-os":{"$":0},"freeboxos":{"$":0},"blogspot":{"$":0},"on-web":{"$":0},"chirurgiens-dentistes-en-france":{"$":0}},"ga":{"$":0},"gb":{"$":0},"gd":{"$":0,"nom":{"$":0}},"ge":{"$":0,"com":{"$":0},"edu":{"$":0},"gov":{"$":0},"org":{"$":0},"mil":{"$":0},"net":{"$":0},"pvt":{"$":0}},"gf":{"$":0},"gg":{"$":0,"co":{"$":0},"net":{"$":0},"org":{"$":0},"cya":{"$":0}},"gh":{"$":0,"com":{"$":0},"edu":{"$":0},"gov":{"$":0},"org":{"$":0},"mil":{"$":0}},"gi":{"$":0,"com":{"$":0},"ltd":{"$":0},"gov":{"$":0},"mod":{"$":0},"edu":{"$":0},"org":{"$":0}},"gl":{"$":0,"co":{"$":0},"com":{"$":0},"edu":{"$":0},"net":{"$":0},"org":{"$":0},"nom":{"$":0}},"gm":{"$":0},"gn":{"$":0,"ac":{"$":0},"com":{"$":0},"edu":{"$":0},"gov":{"$":0},"org":{"$":0},"net":{"$":0}},"gov":{"$":0},"gp":{"$":0,"com":{"$":0},"net":{"$":0},"mobi":{"$":0},"edu":{"$":0},"org":{"$":0},"asso":{"$":0}},"gq":{"$":0},"gr":{"$":0,"com":{"$":0},"edu":{"$":0},"net":{"$":0},"org":{"$":0},"gov":{"$":0},"blogspot":{"$":0},"nym":{"$":0}},"gs":{"$":0},"gt":{"$":0,"com":{"$":0},"edu":{"$":0},"gob":{"$":0},"ind":{"$":0},"mil":{"$":0},"net":{"$":0},"org":{"$":0},"nom":{"$":0}},"gu":{"*":{"$":0}},"gw":{"$":0},"gy":{"$":0,"co":{"$":0},"com":{"$":0},"edu":{"$":0},"gov":{"$":0},"net":{"$":0},"org":{"$":0}},"hk":{"$":0,"com":{"$":0},"edu":{"$":0},"gov":{"$":0},"idv":{"$":0},"net":{"$":0},"org":{"$":0},"xn--55qx5d":{"$":0},"xn--wcvs22d":{"$":0},"xn--lcvr32d":{"$":0},"xn--mxtq1m":{"$":0},"xn--gmqw5a":{"$":0},"xn--ciqpn":{"$":0},"xn--gmq050i":{"$":0},"xn--zf0avx":{"$":0},"xn--io0a7i":{"$":0},"xn--mk0axi":{"$":0},"xn--od0alg":{"$":0},"xn--od0aq3b":{"$":0},"xn--tn0ag":{"$":0},"xn--uc0atv":{"$":0},"xn--uc0ay4a":{"$":0},"blogspot":{"$":0},"ltd":{"$":0},"inc":{"$":0}},"hm":{"$":0},"hn":{"$":0,"com":{"$":0},"edu":{"$":0},"org":{"$":0},"net":{"$":0},"mil":{"$":0},"gob":{"$":0},"nom":{"$":0}},"hr":{"$":0,"iz":{"$":0},"from":{"$":0},"name":{"$":0},"com":{"$":0},"blogspot":{"$":0}},"ht":{"$":0,"com":{"$":0},"shop":{"$":0},"firm":{"$":0},"info":{"$":0},"adult":{"$":0},"net":{"$":0},"pro":{"$":0},"org":{"$":0},"med":{"$":0},"art":{"$":0},"coop":{"$":0},"pol":{"$":0},"asso":{"$":0},"edu":{"$":0},"rel":{"$":0},"gouv":{"$":0},"perso":{"$":0}},"hu":{"2000":{"$":0},"$":0,"co":{"$":0},"info":{"$":0},"org":{"$":0},"priv":{"$":0},"sport":{"$":0},"tm":{"$":0},"agrar":{"$":0},"bolt":{"$":0},"casino":{"$":0},"city":{"$":0},"erotica":{"$":0},"erotika":{"$":0},"film":{"$":0},"forum":{"$":0},"games":{"$":0},"hotel":{"$":0},"ingatlan":{"$":0},"jogasz":{"$":0},"konyvelo":{"$":0},"lakas":{"$":0},"media":{"$":0},"news":{"$":0},"reklam":{"$":0},"sex":{"$":0},"shop":{"$":0},"suli":{"$":0},"szex":{"$":0},"tozsde":{"$":0},"utazas":{"$":0},"video":{"$":0},"blogspot":{"$":0}},"id":{"$":0,"ac":{"$":0},"biz":{"$":0},"co":{"$":0,"blogspot":{"$":0}},"desa":{"$":0},"go":{"$":0},"mil":{"$":0},"my":{"$":0},"net":{"$":0},"or":{"$":0},"sch":{"$":0},"web":{"$":0}},"ie":{"$":0,"gov":{"$":0},"blogspot":{"$":0}},"il":{"$":0,"ac":{"$":0},"co":{"$":0,"blogspot":{"$":0}},"gov":{"$":0},"idf":{"$":0},"k12":{"$":0},"muni":{"$":0},"net":{"$":0},"org":{"$":0}},"im":{"$":0,"ac":{"$":0},"co":{"$":0,"ltd":{"$":0},"plc":{"$":0}},"com":{"$":0},"net":{"$":0},"org":{"$":0},"tt":{"$":0},"tv":{"$":0},"ro":{"$":0},"nom":{"$":0}},"in":{"$":0,"co":{"$":0},"firm":{"$":0},"net":{"$":0},"org":{"$":0},"gen":{"$":0},"ind":{"$":0},"nic":{"$":0},"ac":{"$":0},"edu":{"$":0},"res":{"$":0},"gov":{"$":0},"mil":{"$":0},"cloudns":{"$":0},"blogspot":{"$":0},"barsy":{"$":0}},"info":{"$":0,"cloudns":{"$":0},"dynamic-dns":{"$":0},"dyndns":{"$":0},"barrel-of-knowledge":{"$":0},"barrell-of-knowledge":{"$":0},"for-our":{"$":0},"groks-the":{"$":0},"groks-this":{"$":0},"here-for-more":{"$":0},"knowsitall":{"$":0},"selfip":{"$":0},"webhop":{"$":0},"nsupdate":{"$":0},"dvrcam":{"$":0},"ilovecollege":{"$":0},"no-ip":{"$":0},"v-info":{"$":0}},"int":{"$":0,"eu":{"$":0}},"io":{"$":0,"com":{"$":0},"backplaneapp":{"$":0},"boxfuse":{"$":0},"browsersafetymark":{"$":0},"dedyn":{"$":0},"drud":{"$":0},"definima":{"$":0},"enonic":{"$":0,"customer":{"$":0}},"github":{"$":0},"gitlab":{"$":0},"hasura-app":{"$":0},"ngrok":{"$":0},"nodeart":{"stage":{"$":0}},"nodum":{"$":0},"nid":{"$":0},"pantheonsite":{"$":0},"protonet":{"$":0},"vaporcloud":{"$":0},"resindevice":{"$":0},"resinstaging":{"devices":{"$":0}},"hzc":{"$":0},"sandcats":{"$":0},"s5y":{"*":{"$":0}},"shiftedit":{"$":0},"lair":{"apps":{"$":0}},"stolos":{"*":{"$":0}},"spacekit":{"$":0},"thingdust":{"dev":{"cust":{"$":0}},"disrec":{"cust":{"$":0}},"prod":{"cust":{"$":0}},"testing":{"cust":{"$":0}}},"wedeploy":{"$":0}},"iq":{"$":0,"gov":{"$":0},"edu":{"$":0},"mil":{"$":0},"com":{"$":0},"org":{"$":0},"net":{"$":0}},"ir":{"$":0,"ac":{"$":0},"co":{"$":0},"gov":{"$":0},"id":{"$":0},"net":{"$":0},"org":{"$":0},"sch":{"$":0},"xn--mgba3a4f16a":{"$":0},"xn--mgba3a4fra":{"$":0}},"is":{"$":0,"net":{"$":0},"com":{"$":0},"edu":{"$":0},"gov":{"$":0},"org":{"$":0},"int":{"$":0},"cupcake":{"$":0},"blogspot":{"$":0}},"it":{"$":0,"gov":{"$":0},"edu":{"$":0},"abr":{"$":0},"abruzzo":{"$":0},"aosta-valley":{"$":0},"aostavalley":{"$":0},"bas":{"$":0},"basilicata":{"$":0},"cal":{"$":0},"calabria":{"$":0},"cam":{"$":0},"campania":{"$":0},"emilia-romagna":{"$":0},"emiliaromagna":{"$":0},"emr":{"$":0},"friuli-v-giulia":{"$":0},"friuli-ve-giulia":{"$":0},"friuli-vegiulia":{"$":0},"friuli-venezia-giulia":{"$":0},"friuli-veneziagiulia":{"$":0},"friuli-vgiulia":{"$":0},"friuliv-giulia":{"$":0},"friulive-giulia":{"$":0},"friulivegiulia":{"$":0},"friulivenezia-giulia":{"$":0},"friuliveneziagiulia":{"$":0},"friulivgiulia":{"$":0},"fvg":{"$":0},"laz":{"$":0},"lazio":{"$":0},"lig":{"$":0},"liguria":{"$":0},"lom":{"$":0},"lombardia":{"$":0},"lombardy":{"$":0},"lucania":{"$":0},"mar":{"$":0},"marche":{"$":0},"mol":{"$":0},"molise":{"$":0},"piedmont":{"$":0},"piemonte":{"$":0},"pmn":{"$":0},"pug":{"$":0},"puglia":{"$":0},"sar":{"$":0},"sardegna":{"$":0},"sardinia":{"$":0},"sic":{"$":0},"sicilia":{"$":0},"sicily":{"$":0},"taa":{"$":0},"tos":{"$":0},"toscana":{"$":0},"trentino-a-adige":{"$":0},"trentino-aadige":{"$":0},"trentino-alto-adige":{"$":0},"trentino-altoadige":{"$":0},"trentino-s-tirol":{"$":0},"trentino-stirol":{"$":0},"trentino-sud-tirol":{"$":0},"trentino-sudtirol":{"$":0},"trentino-sued-tirol":{"$":0},"trentino-suedtirol":{"$":0},"trentinoa-adige":{"$":0},"trentinoaadige":{"$":0},"trentinoalto-adige":{"$":0},"trentinoaltoadige":{"$":0},"trentinos-tirol":{"$":0},"trentinostirol":{"$":0},"trentinosud-tirol":{"$":0},"trentinosudtirol":{"$":0},"trentinosued-tirol":{"$":0},"trentinosuedtirol":{"$":0},"tuscany":{"$":0},"umb":{"$":0},"umbria":{"$":0},"val-d-aosta":{"$":0},"val-daosta":{"$":0},"vald-aosta":{"$":0},"valdaosta":{"$":0},"valle-aosta":{"$":0},"valle-d-aosta":{"$":0},"valle-daosta":{"$":0},"valleaosta":{"$":0},"valled-aosta":{"$":0},"valledaosta":{"$":0},"vallee-aoste":{"$":0},"valleeaoste":{"$":0},"vao":{"$":0},"vda":{"$":0},"ven":{"$":0},"veneto":{"$":0},"ag":{"$":0},"agrigento":{"$":0},"al":{"$":0},"alessandria":{"$":0},"alto-adige":{"$":0},"altoadige":{"$":0},"an":{"$":0},"ancona":{"$":0},"andria-barletta-trani":{"$":0},"andria-trani-barletta":{"$":0},"andriabarlettatrani":{"$":0},"andriatranibarletta":{"$":0},"ao":{"$":0},"aosta":{"$":0},"aoste":{"$":0},"ap":{"$":0},"aq":{"$":0},"aquila":{"$":0},"ar":{"$":0},"arezzo":{"$":0},"ascoli-piceno":{"$":0},"ascolipiceno":{"$":0},"asti":{"$":0},"at":{"$":0},"av":{"$":0},"avellino":{"$":0},"ba":{"$":0},"balsan":{"$":0},"bari":{"$":0},"barletta-trani-andria":{"$":0},"barlettatraniandria":{"$":0},"belluno":{"$":0},"benevento":{"$":0},"bergamo":{"$":0},"bg":{"$":0},"bi":{"$":0},"biella":{"$":0},"bl":{"$":0},"bn":{"$":0},"bo":{"$":0},"bologna":{"$":0},"bolzano":{"$":0},"bozen":{"$":0},"br":{"$":0},"brescia":{"$":0},"brindisi":{"$":0},"bs":{"$":0},"bt":{"$":0},"bz":{"$":0},"ca":{"$":0},"cagliari":{"$":0},"caltanissetta":{"$":0},"campidano-medio":{"$":0},"campidanomedio":{"$":0},"campobasso":{"$":0},"carbonia-iglesias":{"$":0},"carboniaiglesias":{"$":0},"carrara-massa":{"$":0},"carraramassa":{"$":0},"caserta":{"$":0},"catania":{"$":0},"catanzaro":{"$":0},"cb":{"$":0},"ce":{"$":0},"cesena-forli":{"$":0},"cesenaforli":{"$":0},"ch":{"$":0},"chieti":{"$":0},"ci":{"$":0},"cl":{"$":0},"cn":{"$":0},"co":{"$":0},"como":{"$":0},"cosenza":{"$":0},"cr":{"$":0},"cremona":{"$":0},"crotone":{"$":0},"cs":{"$":0},"ct":{"$":0},"cuneo":{"$":0},"cz":{"$":0},"dell-ogliastra":{"$":0},"dellogliastra":{"$":0},"en":{"$":0},"enna":{"$":0},"fc":{"$":0},"fe":{"$":0},"fermo":{"$":0},"ferrara":{"$":0},"fg":{"$":0},"fi":{"$":0},"firenze":{"$":0},"florence":{"$":0},"fm":{"$":0},"foggia":{"$":0},"forli-cesena":{"$":0},"forlicesena":{"$":0},"fr":{"$":0},"frosinone":{"$":0},"ge":{"$":0},"genoa":{"$":0},"genova":{"$":0},"go":{"$":0},"gorizia":{"$":0},"gr":{"$":0},"grosseto":{"$":0},"iglesias-carbonia":{"$":0},"iglesiascarbonia":{"$":0},"im":{"$":0},"imperia":{"$":0},"is":{"$":0},"isernia":{"$":0},"kr":{"$":0},"la-spezia":{"$":0},"laquila":{"$":0},"laspezia":{"$":0},"latina":{"$":0},"lc":{"$":0},"le":{"$":0},"lecce":{"$":0},"lecco":{"$":0},"li":{"$":0},"livorno":{"$":0},"lo":{"$":0},"lodi":{"$":0},"lt":{"$":0},"lu":{"$":0},"lucca":{"$":0},"macerata":{"$":0},"mantova":{"$":0},"massa-carrara":{"$":0},"massacarrara":{"$":0},"matera":{"$":0},"mb":{"$":0},"mc":{"$":0},"me":{"$":0},"medio-campidano":{"$":0},"mediocampidano":{"$":0},"messina":{"$":0},"mi":{"$":0},"milan":{"$":0},"milano":{"$":0},"mn":{"$":0},"mo":{"$":0},"modena":{"$":0},"monza-brianza":{"$":0},"monza-e-della-brianza":{"$":0},"monza":{"$":0},"monzabrianza":{"$":0},"monzaebrianza":{"$":0},"monzaedellabrianza":{"$":0},"ms":{"$":0},"mt":{"$":0},"na":{"$":0},"naples":{"$":0},"napoli":{"$":0},"no":{"$":0},"novara":{"$":0},"nu":{"$":0},"nuoro":{"$":0},"og":{"$":0},"ogliastra":{"$":0},"olbia-tempio":{"$":0},"olbiatempio":{"$":0},"or":{"$":0},"oristano":{"$":0},"ot":{"$":0},"pa":{"$":0},"padova":{"$":0},"padua":{"$":0},"palermo":{"$":0},"parma":{"$":0},"pavia":{"$":0},"pc":{"$":0},"pd":{"$":0},"pe":{"$":0},"perugia":{"$":0},"pesaro-urbino":{"$":0},"pesarourbino":{"$":0},"pescara":{"$":0},"pg":{"$":0},"pi":{"$":0},"piacenza":{"$":0},"pisa":{"$":0},"pistoia":{"$":0},"pn":{"$":0},"po":{"$":0},"pordenone":{"$":0},"potenza":{"$":0},"pr":{"$":0},"prato":{"$":0},"pt":{"$":0},"pu":{"$":0},"pv":{"$":0},"pz":{"$":0},"ra":{"$":0},"ragusa":{"$":0},"ravenna":{"$":0},"rc":{"$":0},"re":{"$":0},"reggio-calabria":{"$":0},"reggio-emilia":{"$":0},"reggiocalabria":{"$":0},"reggioemilia":{"$":0},"rg":{"$":0},"ri":{"$":0},"rieti":{"$":0},"rimini":{"$":0},"rm":{"$":0},"rn":{"$":0},"ro":{"$":0},"roma":{"$":0},"rome":{"$":0},"rovigo":{"$":0},"sa":{"$":0},"salerno":{"$":0},"sassari":{"$":0},"savona":{"$":0},"si":{"$":0},"siena":{"$":0},"siracusa":{"$":0},"so":{"$":0},"sondrio":{"$":0},"sp":{"$":0},"sr":{"$":0},"ss":{"$":0},"suedtirol":{"$":0},"sv":{"$":0},"ta":{"$":0},"taranto":{"$":0},"te":{"$":0},"tempio-olbia":{"$":0},"tempioolbia":{"$":0},"teramo":{"$":0},"terni":{"$":0},"tn":{"$":0},"to":{"$":0},"torino":{"$":0},"tp":{"$":0},"tr":{"$":0},"trani-andria-barletta":{"$":0},"trani-barletta-andria":{"$":0},"traniandriabarletta":{"$":0},"tranibarlettaandria":{"$":0},"trapani":{"$":0},"trentino":{"$":0},"trento":{"$":0},"treviso":{"$":0},"trieste":{"$":0},"ts":{"$":0},"turin":{"$":0},"tv":{"$":0},"ud":{"$":0},"udine":{"$":0},"urbino-pesaro":{"$":0},"urbinopesaro":{"$":0},"va":{"$":0},"varese":{"$":0},"vb":{"$":0},"vc":{"$":0},"ve":{"$":0},"venezia":{"$":0},"venice":{"$":0},"verbania":{"$":0},"vercelli":{"$":0},"verona":{"$":0},"vi":{"$":0},"vibo-valentia":{"$":0},"vibovalentia":{"$":0},"vicenza":{"$":0},"viterbo":{"$":0},"vr":{"$":0},"vs":{"$":0},"vt":{"$":0},"vv":{"$":0},"blogspot":{"$":0}},"je":{"$":0,"co":{"$":0},"net":{"$":0},"org":{"$":0}},"jm":{"*":{"$":0}},"jo":{"$":0,"com":{"$":0},"org":{"$":0},"net":{"$":0},"edu":{"$":0},"sch":{"$":0},"gov":{"$":0},"mil":{"$":0},"name":{"$":0}},"jobs":{"$":0},"jp":{"$":0,"ac":{"$":0},"ad":{"$":0},"co":{"$":0},"ed":{"$":0},"go":{"$":0},"gr":{"$":0},"lg":{"$":0},"ne":{"$":0},"or":{"$":0},"aichi":{"$":0,"aisai":{"$":0},"ama":{"$":0},"anjo":{"$":0},"asuke":{"$":0},"chiryu":{"$":0},"chita":{"$":0},"fuso":{"$":0},"gamagori":{"$":0},"handa":{"$":0},"hazu":{"$":0},"hekinan":{"$":0},"higashiura":{"$":0},"ichinomiya":{"$":0},"inazawa":{"$":0},"inuyama":{"$":0},"isshiki":{"$":0},"iwakura":{"$":0},"kanie":{"$":0},"kariya":{"$":0},"kasugai":{"$":0},"kira":{"$":0},"kiyosu":{"$":0},"komaki":{"$":0},"konan":{"$":0},"kota":{"$":0},"mihama":{"$":0},"miyoshi":{"$":0},"nishio":{"$":0},"nisshin":{"$":0},"obu":{"$":0},"oguchi":{"$":0},"oharu":{"$":0},"okazaki":{"$":0},"owariasahi":{"$":0},"seto":{"$":0},"shikatsu":{"$":0},"shinshiro":{"$":0},"shitara":{"$":0},"tahara":{"$":0},"takahama":{"$":0},"tobishima":{"$":0},"toei":{"$":0},"togo":{"$":0},"tokai":{"$":0},"tokoname":{"$":0},"toyoake":{"$":0},"toyohashi":{"$":0},"toyokawa":{"$":0},"toyone":{"$":0},"toyota":{"$":0},"tsushima":{"$":0},"yatomi":{"$":0}},"akita":{"$":0,"akita":{"$":0},"daisen":{"$":0},"fujisato":{"$":0},"gojome":{"$":0},"hachirogata":{"$":0},"happou":{"$":0},"higashinaruse":{"$":0},"honjo":{"$":0},"honjyo":{"$":0},"ikawa":{"$":0},"kamikoani":{"$":0},"kamioka":{"$":0},"katagami":{"$":0},"kazuno":{"$":0},"kitaakita":{"$":0},"kosaka":{"$":0},"kyowa":{"$":0},"misato":{"$":0},"mitane":{"$":0},"moriyoshi":{"$":0},"nikaho":{"$":0},"noshiro":{"$":0},"odate":{"$":0},"oga":{"$":0},"ogata":{"$":0},"semboku":{"$":0},"yokote":{"$":0},"yurihonjo":{"$":0}},"aomori":{"$":0,"aomori":{"$":0},"gonohe":{"$":0},"hachinohe":{"$":0},"hashikami":{"$":0},"hiranai":{"$":0},"hirosaki":{"$":0},"itayanagi":{"$":0},"kuroishi":{"$":0},"misawa":{"$":0},"mutsu":{"$":0},"nakadomari":{"$":0},"noheji":{"$":0},"oirase":{"$":0},"owani":{"$":0},"rokunohe":{"$":0},"sannohe":{"$":0},"shichinohe":{"$":0},"shingo":{"$":0},"takko":{"$":0},"towada":{"$":0},"tsugaru":{"$":0},"tsuruta":{"$":0}},"chiba":{"$":0,"abiko":{"$":0},"asahi":{"$":0},"chonan":{"$":0},"chosei":{"$":0},"choshi":{"$":0},"chuo":{"$":0},"funabashi":{"$":0},"futtsu":{"$":0},"hanamigawa":{"$":0},"ichihara":{"$":0},"ichikawa":{"$":0},"ichinomiya":{"$":0},"inzai":{"$":0},"isumi":{"$":0},"kamagaya":{"$":0},"kamogawa":{"$":0},"kashiwa":{"$":0},"katori":{"$":0},"katsuura":{"$":0},"kimitsu":{"$":0},"kisarazu":{"$":0},"kozaki":{"$":0},"kujukuri":{"$":0},"kyonan":{"$":0},"matsudo":{"$":0},"midori":{"$":0},"mihama":{"$":0},"minamiboso":{"$":0},"mobara":{"$":0},"mutsuzawa":{"$":0},"nagara":{"$":0},"nagareyama":{"$":0},"narashino":{"$":0},"narita":{"$":0},"noda":{"$":0},"oamishirasato":{"$":0},"omigawa":{"$":0},"onjuku":{"$":0},"otaki":{"$":0},"sakae":{"$":0},"sakura":{"$":0},"shimofusa":{"$":0},"shirako":{"$":0},"shiroi":{"$":0},"shisui":{"$":0},"sodegaura":{"$":0},"sosa":{"$":0},"tako":{"$":0},"tateyama":{"$":0},"togane":{"$":0},"tohnosho":{"$":0},"tomisato":{"$":0},"urayasu":{"$":0},"yachimata":{"$":0},"yachiyo":{"$":0},"yokaichiba":{"$":0},"yokoshibahikari":{"$":0},"yotsukaido":{"$":0}},"ehime":{"$":0,"ainan":{"$":0},"honai":{"$":0},"ikata":{"$":0},"imabari":{"$":0},"iyo":{"$":0},"kamijima":{"$":0},"kihoku":{"$":0},"kumakogen":{"$":0},"masaki":{"$":0},"matsuno":{"$":0},"matsuyama":{"$":0},"namikata":{"$":0},"niihama":{"$":0},"ozu":{"$":0},"saijo":{"$":0},"seiyo":{"$":0},"shikokuchuo":{"$":0},"tobe":{"$":0},"toon":{"$":0},"uchiko":{"$":0},"uwajima":{"$":0},"yawatahama":{"$":0}},"fukui":{"$":0,"echizen":{"$":0},"eiheiji":{"$":0},"fukui":{"$":0},"ikeda":{"$":0},"katsuyama":{"$":0},"mihama":{"$":0},"minamiechizen":{"$":0},"obama":{"$":0},"ohi":{"$":0},"ono":{"$":0},"sabae":{"$":0},"sakai":{"$":0},"takahama":{"$":0},"tsuruga":{"$":0},"wakasa":{"$":0}},"fukuoka":{"$":0,"ashiya":{"$":0},"buzen":{"$":0},"chikugo":{"$":0},"chikuho":{"$":0},"chikujo":{"$":0},"chikushino":{"$":0},"chikuzen":{"$":0},"chuo":{"$":0},"dazaifu":{"$":0},"fukuchi":{"$":0},"hakata":{"$":0},"higashi":{"$":0},"hirokawa":{"$":0},"hisayama":{"$":0},"iizuka":{"$":0},"inatsuki":{"$":0},"kaho":{"$":0},"kasuga":{"$":0},"kasuya":{"$":0},"kawara":{"$":0},"keisen":{"$":0},"koga":{"$":0},"kurate":{"$":0},"kurogi":{"$":0},"kurume":{"$":0},"minami":{"$":0},"miyako":{"$":0},"miyama":{"$":0},"miyawaka":{"$":0},"mizumaki":{"$":0},"munakata":{"$":0},"nakagawa":{"$":0},"nakama":{"$":0},"nishi":{"$":0},"nogata":{"$":0},"ogori":{"$":0},"okagaki":{"$":0},"okawa":{"$":0},"oki":{"$":0},"omuta":{"$":0},"onga":{"$":0},"onojo":{"$":0},"oto":{"$":0},"saigawa":{"$":0},"sasaguri":{"$":0},"shingu":{"$":0},"shinyoshitomi":{"$":0},"shonai":{"$":0},"soeda":{"$":0},"sue":{"$":0},"tachiarai":{"$":0},"tagawa":{"$":0},"takata":{"$":0},"toho":{"$":0},"toyotsu":{"$":0},"tsuiki":{"$":0},"ukiha":{"$":0},"umi":{"$":0},"usui":{"$":0},"yamada":{"$":0},"yame":{"$":0},"yanagawa":{"$":0},"yukuhashi":{"$":0}},"fukushima":{"$":0,"aizubange":{"$":0},"aizumisato":{"$":0},"aizuwakamatsu":{"$":0},"asakawa":{"$":0},"bandai":{"$":0},"date":{"$":0},"fukushima":{"$":0},"furudono":{"$":0},"futaba":{"$":0},"hanawa":{"$":0},"higashi":{"$":0},"hirata":{"$":0},"hirono":{"$":0},"iitate":{"$":0},"inawashiro":{"$":0},"ishikawa":{"$":0},"iwaki":{"$":0},"izumizaki":{"$":0},"kagamiishi":{"$":0},"kaneyama":{"$":0},"kawamata":{"$":0},"kitakata":{"$":0},"kitashiobara":{"$":0},"koori":{"$":0},"koriyama":{"$":0},"kunimi":{"$":0},"miharu":{"$":0},"mishima":{"$":0},"namie":{"$":0},"nango":{"$":0},"nishiaizu":{"$":0},"nishigo":{"$":0},"okuma":{"$":0},"omotego":{"$":0},"ono":{"$":0},"otama":{"$":0},"samegawa":{"$":0},"shimogo":{"$":0},"shirakawa":{"$":0},"showa":{"$":0},"soma":{"$":0},"sukagawa":{"$":0},"taishin":{"$":0},"tamakawa":{"$":0},"tanagura":{"$":0},"tenei":{"$":0},"yabuki":{"$":0},"yamato":{"$":0},"yamatsuri":{"$":0},"yanaizu":{"$":0},"yugawa":{"$":0}},"gifu":{"$":0,"anpachi":{"$":0},"ena":{"$":0},"gifu":{"$":0},"ginan":{"$":0},"godo":{"$":0},"gujo":{"$":0},"hashima":{"$":0},"hichiso":{"$":0},"hida":{"$":0},"higashishirakawa":{"$":0},"ibigawa":{"$":0},"ikeda":{"$":0},"kakamigahara":{"$":0},"kani":{"$":0},"kasahara":{"$":0},"kasamatsu":{"$":0},"kawaue":{"$":0},"kitagata":{"$":0},"mino":{"$":0},"minokamo":{"$":0},"mitake":{"$":0},"mizunami":{"$":0},"motosu":{"$":0},"nakatsugawa":{"$":0},"ogaki":{"$":0},"sakahogi":{"$":0},"seki":{"$":0},"sekigahara":{"$":0},"shirakawa":{"$":0},"tajimi":{"$":0},"takayama":{"$":0},"tarui":{"$":0},"toki":{"$":0},"tomika":{"$":0},"wanouchi":{"$":0},"yamagata":{"$":0},"yaotsu":{"$":0},"yoro":{"$":0}},"gunma":{"$":0,"annaka":{"$":0},"chiyoda":{"$":0},"fujioka":{"$":0},"higashiagatsuma":{"$":0},"isesaki":{"$":0},"itakura":{"$":0},"kanna":{"$":0},"kanra":{"$":0},"katashina":{"$":0},"kawaba":{"$":0},"kiryu":{"$":0},"kusatsu":{"$":0},"maebashi":{"$":0},"meiwa":{"$":0},"midori":{"$":0},"minakami":{"$":0},"naganohara":{"$":0},"nakanojo":{"$":0},"nanmoku":{"$":0},"numata":{"$":0},"oizumi":{"$":0},"ora":{"$":0},"ota":{"$":0},"shibukawa":{"$":0},"shimonita":{"$":0},"shinto":{"$":0},"showa":{"$":0},"takasaki":{"$":0},"takayama":{"$":0},"tamamura":{"$":0},"tatebayashi":{"$":0},"tomioka":{"$":0},"tsukiyono":{"$":0},"tsumagoi":{"$":0},"ueno":{"$":0},"yoshioka":{"$":0}},"hiroshima":{"$":0,"asaminami":{"$":0},"daiwa":{"$":0},"etajima":{"$":0},"fuchu":{"$":0},"fukuyama":{"$":0},"hatsukaichi":{"$":0},"higashihiroshima":{"$":0},"hongo":{"$":0},"jinsekikogen":{"$":0},"kaita":{"$":0},"kui":{"$":0},"kumano":{"$":0},"kure":{"$":0},"mihara":{"$":0},"miyoshi":{"$":0},"naka":{"$":0},"onomichi":{"$":0},"osakikamijima":{"$":0},"otake":{"$":0},"saka":{"$":0},"sera":{"$":0},"seranishi":{"$":0},"shinichi":{"$":0},"shobara":{"$":0},"takehara":{"$":0}},"hokkaido":{"$":0,"abashiri":{"$":0},"abira":{"$":0},"aibetsu":{"$":0},"akabira":{"$":0},"akkeshi":{"$":0},"asahikawa":{"$":0},"ashibetsu":{"$":0},"ashoro":{"$":0},"assabu":{"$":0},"atsuma":{"$":0},"bibai":{"$":0},"biei":{"$":0},"bifuka":{"$":0},"bihoro":{"$":0},"biratori":{"$":0},"chippubetsu":{"$":0},"chitose":{"$":0},"date":{"$":0},"ebetsu":{"$":0},"embetsu":{"$":0},"eniwa":{"$":0},"erimo":{"$":0},"esan":{"$":0},"esashi":{"$":0},"fukagawa":{"$":0},"fukushima":{"$":0},"furano":{"$":0},"furubira":{"$":0},"haboro":{"$":0},"hakodate":{"$":0},"hamatonbetsu":{"$":0},"hidaka":{"$":0},"higashikagura":{"$":0},"higashikawa":{"$":0},"hiroo":{"$":0},"hokuryu":{"$":0},"hokuto":{"$":0},"honbetsu":{"$":0},"horokanai":{"$":0},"horonobe":{"$":0},"ikeda":{"$":0},"imakane":{"$":0},"ishikari":{"$":0},"iwamizawa":{"$":0},"iwanai":{"$":0},"kamifurano":{"$":0},"kamikawa":{"$":0},"kamishihoro":{"$":0},"kamisunagawa":{"$":0},"kamoenai":{"$":0},"kayabe":{"$":0},"kembuchi":{"$":0},"kikonai":{"$":0},"kimobetsu":{"$":0},"kitahiroshima":{"$":0},"kitami":{"$":0},"kiyosato":{"$":0},"koshimizu":{"$":0},"kunneppu":{"$":0},"kuriyama":{"$":0},"kuromatsunai":{"$":0},"kushiro":{"$":0},"kutchan":{"$":0},"kyowa":{"$":0},"mashike":{"$":0},"matsumae":{"$":0},"mikasa":{"$":0},"minamifurano":{"$":0},"mombetsu":{"$":0},"moseushi":{"$":0},"mukawa":{"$":0},"muroran":{"$":0},"naie":{"$":0},"nakagawa":{"$":0},"nakasatsunai":{"$":0},"nakatombetsu":{"$":0},"nanae":{"$":0},"nanporo":{"$":0},"nayoro":{"$":0},"nemuro":{"$":0},"niikappu":{"$":0},"niki":{"$":0},"nishiokoppe":{"$":0},"noboribetsu":{"$":0},"numata":{"$":0},"obihiro":{"$":0},"obira":{"$":0},"oketo":{"$":0},"okoppe":{"$":0},"otaru":{"$":0},"otobe":{"$":0},"otofuke":{"$":0},"otoineppu":{"$":0},"oumu":{"$":0},"ozora":{"$":0},"pippu":{"$":0},"rankoshi":{"$":0},"rebun":{"$":0},"rikubetsu":{"$":0},"rishiri":{"$":0},"rishirifuji":{"$":0},"saroma":{"$":0},"sarufutsu":{"$":0},"shakotan":{"$":0},"shari":{"$":0},"shibecha":{"$":0},"shibetsu":{"$":0},"shikabe":{"$":0},"shikaoi":{"$":0},"shimamaki":{"$":0},"shimizu":{"$":0},"shimokawa":{"$":0},"shinshinotsu":{"$":0},"shintoku":{"$":0},"shiranuka":{"$":0},"shiraoi":{"$":0},"shiriuchi":{"$":0},"sobetsu":{"$":0},"sunagawa":{"$":0},"taiki":{"$":0},"takasu":{"$":0},"takikawa":{"$":0},"takinoue":{"$":0},"teshikaga":{"$":0},"tobetsu":{"$":0},"tohma":{"$":0},"tomakomai":{"$":0},"tomari":{"$":0},"toya":{"$":0},"toyako":{"$":0},"toyotomi":{"$":0},"toyoura":{"$":0},"tsubetsu":{"$":0},"tsukigata":{"$":0},"urakawa":{"$":0},"urausu":{"$":0},"uryu":{"$":0},"utashinai":{"$":0},"wakkanai":{"$":0},"wassamu":{"$":0},"yakumo":{"$":0},"yoichi":{"$":0}},"hyogo":{"$":0,"aioi":{"$":0},"akashi":{"$":0},"ako":{"$":0},"amagasaki":{"$":0},"aogaki":{"$":0},"asago":{"$":0},"ashiya":{"$":0},"awaji":{"$":0},"fukusaki":{"$":0},"goshiki":{"$":0},"harima":{"$":0},"himeji":{"$":0},"ichikawa":{"$":0},"inagawa":{"$":0},"itami":{"$":0},"kakogawa":{"$":0},"kamigori":{"$":0},"kamikawa":{"$":0},"kasai":{"$":0},"kasuga":{"$":0},"kawanishi":{"$":0},"miki":{"$":0},"minamiawaji":{"$":0},"nishinomiya":{"$":0},"nishiwaki":{"$":0},"ono":{"$":0},"sanda":{"$":0},"sannan":{"$":0},"sasayama":{"$":0},"sayo":{"$":0},"shingu":{"$":0},"shinonsen":{"$":0},"shiso":{"$":0},"sumoto":{"$":0},"taishi":{"$":0},"taka":{"$":0},"takarazuka":{"$":0},"takasago":{"$":0},"takino":{"$":0},"tamba":{"$":0},"tatsuno":{"$":0},"toyooka":{"$":0},"yabu":{"$":0},"yashiro":{"$":0},"yoka":{"$":0},"yokawa":{"$":0}},"ibaraki":{"$":0,"ami":{"$":0},"asahi":{"$":0},"bando":{"$":0},"chikusei":{"$":0},"daigo":{"$":0},"fujishiro":{"$":0},"hitachi":{"$":0},"hitachinaka":{"$":0},"hitachiomiya":{"$":0},"hitachiota":{"$":0},"ibaraki":{"$":0},"ina":{"$":0},"inashiki":{"$":0},"itako":{"$":0},"iwama":{"$":0},"joso":{"$":0},"kamisu":{"$":0},"kasama":{"$":0},"kashima":{"$":0},"kasumigaura":{"$":0},"koga":{"$":0},"miho":{"$":0},"mito":{"$":0},"moriya":{"$":0},"naka":{"$":0},"namegata":{"$":0},"oarai":{"$":0},"ogawa":{"$":0},"omitama":{"$":0},"ryugasaki":{"$":0},"sakai":{"$":0},"sakuragawa":{"$":0},"shimodate":{"$":0},"shimotsuma":{"$":0},"shirosato":{"$":0},"sowa":{"$":0},"suifu":{"$":0},"takahagi":{"$":0},"tamatsukuri":{"$":0},"tokai":{"$":0},"tomobe":{"$":0},"tone":{"$":0},"toride":{"$":0},"tsuchiura":{"$":0},"tsukuba":{"$":0},"uchihara":{"$":0},"ushiku":{"$":0},"yachiyo":{"$":0},"yamagata":{"$":0},"yawara":{"$":0},"yuki":{"$":0}},"ishikawa":{"$":0,"anamizu":{"$":0},"hakui":{"$":0},"hakusan":{"$":0},"kaga":{"$":0},"kahoku":{"$":0},"kanazawa":{"$":0},"kawakita":{"$":0},"komatsu":{"$":0},"nakanoto":{"$":0},"nanao":{"$":0},"nomi":{"$":0},"nonoichi":{"$":0},"noto":{"$":0},"shika":{"$":0},"suzu":{"$":0},"tsubata":{"$":0},"tsurugi":{"$":0},"uchinada":{"$":0},"wajima":{"$":0}},"iwate":{"$":0,"fudai":{"$":0},"fujisawa":{"$":0},"hanamaki":{"$":0},"hiraizumi":{"$":0},"hirono":{"$":0},"ichinohe":{"$":0},"ichinoseki":{"$":0},"iwaizumi":{"$":0},"iwate":{"$":0},"joboji":{"$":0},"kamaishi":{"$":0},"kanegasaki":{"$":0},"karumai":{"$":0},"kawai":{"$":0},"kitakami":{"$":0},"kuji":{"$":0},"kunohe":{"$":0},"kuzumaki":{"$":0},"miyako":{"$":0},"mizusawa":{"$":0},"morioka":{"$":0},"ninohe":{"$":0},"noda":{"$":0},"ofunato":{"$":0},"oshu":{"$":0},"otsuchi":{"$":0},"rikuzentakata":{"$":0},"shiwa":{"$":0},"shizukuishi":{"$":0},"sumita":{"$":0},"tanohata":{"$":0},"tono":{"$":0},"yahaba":{"$":0},"yamada":{"$":0}},"kagawa":{"$":0,"ayagawa":{"$":0},"higashikagawa":{"$":0},"kanonji":{"$":0},"kotohira":{"$":0},"manno":{"$":0},"marugame":{"$":0},"mitoyo":{"$":0},"naoshima":{"$":0},"sanuki":{"$":0},"tadotsu":{"$":0},"takamatsu":{"$":0},"tonosho":{"$":0},"uchinomi":{"$":0},"utazu":{"$":0},"zentsuji":{"$":0}},"kagoshima":{"$":0,"akune":{"$":0},"amami":{"$":0},"hioki":{"$":0},"isa":{"$":0},"isen":{"$":0},"izumi":{"$":0},"kagoshima":{"$":0},"kanoya":{"$":0},"kawanabe":{"$":0},"kinko":{"$":0},"kouyama":{"$":0},"makurazaki":{"$":0},"matsumoto":{"$":0},"minamitane":{"$":0},"nakatane":{"$":0},"nishinoomote":{"$":0},"satsumasendai":{"$":0},"soo":{"$":0},"tarumizu":{"$":0},"yusui":{"$":0}},"kanagawa":{"$":0,"aikawa":{"$":0},"atsugi":{"$":0},"ayase":{"$":0},"chigasaki":{"$":0},"ebina":{"$":0},"fujisawa":{"$":0},"hadano":{"$":0},"hakone":{"$":0},"hiratsuka":{"$":0},"isehara":{"$":0},"kaisei":{"$":0},"kamakura":{"$":0},"kiyokawa":{"$":0},"matsuda":{"$":0},"minamiashigara":{"$":0},"miura":{"$":0},"nakai":{"$":0},"ninomiya":{"$":0},"odawara":{"$":0},"oi":{"$":0},"oiso":{"$":0},"sagamihara":{"$":0},"samukawa":{"$":0},"tsukui":{"$":0},"yamakita":{"$":0},"yamato":{"$":0},"yokosuka":{"$":0},"yugawara":{"$":0},"zama":{"$":0},"zushi":{"$":0}},"kochi":{"$":0,"aki":{"$":0},"geisei":{"$":0},"hidaka":{"$":0},"higashitsuno":{"$":0},"ino":{"$":0},"kagami":{"$":0},"kami":{"$":0},"kitagawa":{"$":0},"kochi":{"$":0},"mihara":{"$":0},"motoyama":{"$":0},"muroto":{"$":0},"nahari":{"$":0},"nakamura":{"$":0},"nankoku":{"$":0},"nishitosa":{"$":0},"niyodogawa":{"$":0},"ochi":{"$":0},"okawa":{"$":0},"otoyo":{"$":0},"otsuki":{"$":0},"sakawa":{"$":0},"sukumo":{"$":0},"susaki":{"$":0},"tosa":{"$":0},"tosashimizu":{"$":0},"toyo":{"$":0},"tsuno":{"$":0},"umaji":{"$":0},"yasuda":{"$":0},"yusuhara":{"$":0}},"kumamoto":{"$":0,"amakusa":{"$":0},"arao":{"$":0},"aso":{"$":0},"choyo":{"$":0},"gyokuto":{"$":0},"kamiamakusa":{"$":0},"kikuchi":{"$":0},"kumamoto":{"$":0},"mashiki":{"$":0},"mifune":{"$":0},"minamata":{"$":0},"minamioguni":{"$":0},"nagasu":{"$":0},"nishihara":{"$":0},"oguni":{"$":0},"ozu":{"$":0},"sumoto":{"$":0},"takamori":{"$":0},"uki":{"$":0},"uto":{"$":0},"yamaga":{"$":0},"yamato":{"$":0},"yatsushiro":{"$":0}},"kyoto":{"$":0,"ayabe":{"$":0},"fukuchiyama":{"$":0},"higashiyama":{"$":0},"ide":{"$":0},"ine":{"$":0},"joyo":{"$":0},"kameoka":{"$":0},"kamo":{"$":0},"kita":{"$":0},"kizu":{"$":0},"kumiyama":{"$":0},"kyotamba":{"$":0},"kyotanabe":{"$":0},"kyotango":{"$":0},"maizuru":{"$":0},"minami":{"$":0},"minamiyamashiro":{"$":0},"miyazu":{"$":0},"muko":{"$":0},"nagaokakyo":{"$":0},"nakagyo":{"$":0},"nantan":{"$":0},"oyamazaki":{"$":0},"sakyo":{"$":0},"seika":{"$":0},"tanabe":{"$":0},"uji":{"$":0},"ujitawara":{"$":0},"wazuka":{"$":0},"yamashina":{"$":0},"yawata":{"$":0}},"mie":{"$":0,"asahi":{"$":0},"inabe":{"$":0},"ise":{"$":0},"kameyama":{"$":0},"kawagoe":{"$":0},"kiho":{"$":0},"kisosaki":{"$":0},"kiwa":{"$":0},"komono":{"$":0},"kumano":{"$":0},"kuwana":{"$":0},"matsusaka":{"$":0},"meiwa":{"$":0},"mihama":{"$":0},"minamiise":{"$":0},"misugi":{"$":0},"miyama":{"$":0},"nabari":{"$":0},"shima":{"$":0},"suzuka":{"$":0},"tado":{"$":0},"taiki":{"$":0},"taki":{"$":0},"tamaki":{"$":0},"toba":{"$":0},"tsu":{"$":0},"udono":{"$":0},"ureshino":{"$":0},"watarai":{"$":0},"yokkaichi":{"$":0}},"miyagi":{"$":0,"furukawa":{"$":0},"higashimatsushima":{"$":0},"ishinomaki":{"$":0},"iwanuma":{"$":0},"kakuda":{"$":0},"kami":{"$":0},"kawasaki":{"$":0},"marumori":{"$":0},"matsushima":{"$":0},"minamisanriku":{"$":0},"misato":{"$":0},"murata":{"$":0},"natori":{"$":0},"ogawara":{"$":0},"ohira":{"$":0},"onagawa":{"$":0},"osaki":{"$":0},"rifu":{"$":0},"semine":{"$":0},"shibata":{"$":0},"shichikashuku":{"$":0},"shikama":{"$":0},"shiogama":{"$":0},"shiroishi":{"$":0},"tagajo":{"$":0},"taiwa":{"$":0},"tome":{"$":0},"tomiya":{"$":0},"wakuya":{"$":0},"watari":{"$":0},"yamamoto":{"$":0},"zao":{"$":0}},"miyazaki":{"$":0,"aya":{"$":0},"ebino":{"$":0},"gokase":{"$":0},"hyuga":{"$":0},"kadogawa":{"$":0},"kawaminami":{"$":0},"kijo":{"$":0},"kitagawa":{"$":0},"kitakata":{"$":0},"kitaura":{"$":0},"kobayashi":{"$":0},"kunitomi":{"$":0},"kushima":{"$":0},"mimata":{"$":0},"miyakonojo":{"$":0},"miyazaki":{"$":0},"morotsuka":{"$":0},"nichinan":{"$":0},"nishimera":{"$":0},"nobeoka":{"$":0},"saito":{"$":0},"shiiba":{"$":0},"shintomi":{"$":0},"takaharu":{"$":0},"takanabe":{"$":0},"takazaki":{"$":0},"tsuno":{"$":0}},"nagano":{"$":0,"achi":{"$":0},"agematsu":{"$":0},"anan":{"$":0},"aoki":{"$":0},"asahi":{"$":0},"azumino":{"$":0},"chikuhoku":{"$":0},"chikuma":{"$":0},"chino":{"$":0},"fujimi":{"$":0},"hakuba":{"$":0},"hara":{"$":0},"hiraya":{"$":0},"iida":{"$":0},"iijima":{"$":0},"iiyama":{"$":0},"iizuna":{"$":0},"ikeda":{"$":0},"ikusaka":{"$":0},"ina":{"$":0},"karuizawa":{"$":0},"kawakami":{"$":0},"kiso":{"$":0},"kisofukushima":{"$":0},"kitaaiki":{"$":0},"komagane":{"$":0},"komoro":{"$":0},"matsukawa":{"$":0},"matsumoto":{"$":0},"miasa":{"$":0},"minamiaiki":{"$":0},"minamimaki":{"$":0},"minamiminowa":{"$":0},"minowa":{"$":0},"miyada":{"$":0},"miyota":{"$":0},"mochizuki":{"$":0},"nagano":{"$":0},"nagawa":{"$":0},"nagiso":{"$":0},"nakagawa":{"$":0},"nakano":{"$":0},"nozawaonsen":{"$":0},"obuse":{"$":0},"ogawa":{"$":0},"okaya":{"$":0},"omachi":{"$":0},"omi":{"$":0},"ookuwa":{"$":0},"ooshika":{"$":0},"otaki":{"$":0},"otari":{"$":0},"sakae":{"$":0},"sakaki":{"$":0},"saku":{"$":0},"sakuho":{"$":0},"shimosuwa":{"$":0},"shinanomachi":{"$":0},"shiojiri":{"$":0},"suwa":{"$":0},"suzaka":{"$":0},"takagi":{"$":0},"takamori":{"$":0},"takayama":{"$":0},"tateshina":{"$":0},"tatsuno":{"$":0},"togakushi":{"$":0},"togura":{"$":0},"tomi":{"$":0},"ueda":{"$":0},"wada":{"$":0},"yamagata":{"$":0},"yamanouchi":{"$":0},"yasaka":{"$":0},"yasuoka":{"$":0}},"nagasaki":{"$":0,"chijiwa":{"$":0},"futsu":{"$":0},"goto":{"$":0},"hasami":{"$":0},"hirado":{"$":0},"iki":{"$":0},"isahaya":{"$":0},"kawatana":{"$":0},"kuchinotsu":{"$":0},"matsuura":{"$":0},"nagasaki":{"$":0},"obama":{"$":0},"omura":{"$":0},"oseto":{"$":0},"saikai":{"$":0},"sasebo":{"$":0},"seihi":{"$":0},"shimabara":{"$":0},"shinkamigoto":{"$":0},"togitsu":{"$":0},"tsushima":{"$":0},"unzen":{"$":0}},"nara":{"$":0,"ando":{"$":0},"gose":{"$":0},"heguri":{"$":0},"higashiyoshino":{"$":0},"ikaruga":{"$":0},"ikoma":{"$":0},"kamikitayama":{"$":0},"kanmaki":{"$":0},"kashiba":{"$":0},"kashihara":{"$":0},"katsuragi":{"$":0},"kawai":{"$":0},"kawakami":{"$":0},"kawanishi":{"$":0},"koryo":{"$":0},"kurotaki":{"$":0},"mitsue":{"$":0},"miyake":{"$":0},"nara":{"$":0},"nosegawa":{"$":0},"oji":{"$":0},"ouda":{"$":0},"oyodo":{"$":0},"sakurai":{"$":0},"sango":{"$":0},"shimoichi":{"$":0},"shimokitayama":{"$":0},"shinjo":{"$":0},"soni":{"$":0},"takatori":{"$":0},"tawaramoto":{"$":0},"tenkawa":{"$":0},"tenri":{"$":0},"uda":{"$":0},"yamatokoriyama":{"$":0},"yamatotakada":{"$":0},"yamazoe":{"$":0},"yoshino":{"$":0}},"niigata":{"$":0,"aga":{"$":0},"agano":{"$":0},"gosen":{"$":0},"itoigawa":{"$":0},"izumozaki":{"$":0},"joetsu":{"$":0},"kamo":{"$":0},"kariwa":{"$":0},"kashiwazaki":{"$":0},"minamiuonuma":{"$":0},"mitsuke":{"$":0},"muika":{"$":0},"murakami":{"$":0},"myoko":{"$":0},"nagaoka":{"$":0},"niigata":{"$":0},"ojiya":{"$":0},"omi":{"$":0},"sado":{"$":0},"sanjo":{"$":0},"seiro":{"$":0},"seirou":{"$":0},"sekikawa":{"$":0},"shibata":{"$":0},"tagami":{"$":0},"tainai":{"$":0},"tochio":{"$":0},"tokamachi":{"$":0},"tsubame":{"$":0},"tsunan":{"$":0},"uonuma":{"$":0},"yahiko":{"$":0},"yoita":{"$":0},"yuzawa":{"$":0}},"oita":{"$":0,"beppu":{"$":0},"bungoono":{"$":0},"bungotakada":{"$":0},"hasama":{"$":0},"hiji":{"$":0},"himeshima":{"$":0},"hita":{"$":0},"kamitsue":{"$":0},"kokonoe":{"$":0},"kuju":{"$":0},"kunisaki":{"$":0},"kusu":{"$":0},"oita":{"$":0},"saiki":{"$":0},"taketa":{"$":0},"tsukumi":{"$":0},"usa":{"$":0},"usuki":{"$":0},"yufu":{"$":0}},"okayama":{"$":0,"akaiwa":{"$":0},"asakuchi":{"$":0},"bizen":{"$":0},"hayashima":{"$":0},"ibara":{"$":0},"kagamino":{"$":0},"kasaoka":{"$":0},"kibichuo":{"$":0},"kumenan":{"$":0},"kurashiki":{"$":0},"maniwa":{"$":0},"misaki":{"$":0},"nagi":{"$":0},"niimi":{"$":0},"nishiawakura":{"$":0},"okayama":{"$":0},"satosho":{"$":0},"setouchi":{"$":0},"shinjo":{"$":0},"shoo":{"$":0},"soja":{"$":0},"takahashi":{"$":0},"tamano":{"$":0},"tsuyama":{"$":0},"wake":{"$":0},"yakage":{"$":0}},"okinawa":{"$":0,"aguni":{"$":0},"ginowan":{"$":0},"ginoza":{"$":0},"gushikami":{"$":0},"haebaru":{"$":0},"higashi":{"$":0},"hirara":{"$":0},"iheya":{"$":0},"ishigaki":{"$":0},"ishikawa":{"$":0},"itoman":{"$":0},"izena":{"$":0},"kadena":{"$":0},"kin":{"$":0},"kitadaito":{"$":0},"kitanakagusuku":{"$":0},"kumejima":{"$":0},"kunigami":{"$":0},"minamidaito":{"$":0},"motobu":{"$":0},"nago":{"$":0},"naha":{"$":0},"nakagusuku":{"$":0},"nakijin":{"$":0},"nanjo":{"$":0},"nishihara":{"$":0},"ogimi":{"$":0},"okinawa":{"$":0},"onna":{"$":0},"shimoji":{"$":0},"taketomi":{"$":0},"tarama":{"$":0},"tokashiki":{"$":0},"tomigusuku":{"$":0},"tonaki":{"$":0},"urasoe":{"$":0},"uruma":{"$":0},"yaese":{"$":0},"yomitan":{"$":0},"yonabaru":{"$":0},"yonaguni":{"$":0},"zamami":{"$":0}},"osaka":{"$":0,"abeno":{"$":0},"chihayaakasaka":{"$":0},"chuo":{"$":0},"daito":{"$":0},"fujiidera":{"$":0},"habikino":{"$":0},"hannan":{"$":0},"higashiosaka":{"$":0},"higashisumiyoshi":{"$":0},"higashiyodogawa":{"$":0},"hirakata":{"$":0},"ibaraki":{"$":0},"ikeda":{"$":0},"izumi":{"$":0},"izumiotsu":{"$":0},"izumisano":{"$":0},"kadoma":{"$":0},"kaizuka":{"$":0},"kanan":{"$":0},"kashiwara":{"$":0},"katano":{"$":0},"kawachinagano":{"$":0},"kishiwada":{"$":0},"kita":{"$":0},"kumatori":{"$":0},"matsubara":{"$":0},"minato":{"$":0},"minoh":{"$":0},"misaki":{"$":0},"moriguchi":{"$":0},"neyagawa":{"$":0},"nishi":{"$":0},"nose":{"$":0},"osakasayama":{"$":0},"sakai":{"$":0},"sayama":{"$":0},"sennan":{"$":0},"settsu":{"$":0},"shijonawate":{"$":0},"shimamoto":{"$":0},"suita":{"$":0},"tadaoka":{"$":0},"taishi":{"$":0},"tajiri":{"$":0},"takaishi":{"$":0},"takatsuki":{"$":0},"tondabayashi":{"$":0},"toyonaka":{"$":0},"toyono":{"$":0},"yao":{"$":0}},"saga":{"$":0,"ariake":{"$":0},"arita":{"$":0},"fukudomi":{"$":0},"genkai":{"$":0},"hamatama":{"$":0},"hizen":{"$":0},"imari":{"$":0},"kamimine":{"$":0},"kanzaki":{"$":0},"karatsu":{"$":0},"kashima":{"$":0},"kitagata":{"$":0},"kitahata":{"$":0},"kiyama":{"$":0},"kouhoku":{"$":0},"kyuragi":{"$":0},"nishiarita":{"$":0},"ogi":{"$":0},"omachi":{"$":0},"ouchi":{"$":0},"saga":{"$":0},"shiroishi":{"$":0},"taku":{"$":0},"tara":{"$":0},"tosu":{"$":0},"yoshinogari":{"$":0}},"saitama":{"$":0,"arakawa":{"$":0},"asaka":{"$":0},"chichibu":{"$":0},"fujimi":{"$":0},"fujimino":{"$":0},"fukaya":{"$":0},"hanno":{"$":0},"hanyu":{"$":0},"hasuda":{"$":0},"hatogaya":{"$":0},"hatoyama":{"$":0},"hidaka":{"$":0},"higashichichibu":{"$":0},"higashimatsuyama":{"$":0},"honjo":{"$":0},"ina":{"$":0},"iruma":{"$":0},"iwatsuki":{"$":0},"kamiizumi":{"$":0},"kamikawa":{"$":0},"kamisato":{"$":0},"kasukabe":{"$":0},"kawagoe":{"$":0},"kawaguchi":{"$":0},"kawajima":{"$":0},"kazo":{"$":0},"kitamoto":{"$":0},"koshigaya":{"$":0},"kounosu":{"$":0},"kuki":{"$":0},"kumagaya":{"$":0},"matsubushi":{"$":0},"minano":{"$":0},"misato":{"$":0},"miyashiro":{"$":0},"miyoshi":{"$":0},"moroyama":{"$":0},"nagatoro":{"$":0},"namegawa":{"$":0},"niiza":{"$":0},"ogano":{"$":0},"ogawa":{"$":0},"ogose":{"$":0},"okegawa":{"$":0},"omiya":{"$":0},"otaki":{"$":0},"ranzan":{"$":0},"ryokami":{"$":0},"saitama":{"$":0},"sakado":{"$":0},"satte":{"$":0},"sayama":{"$":0},"shiki":{"$":0},"shiraoka":{"$":0},"soka":{"$":0},"sugito":{"$":0},"toda":{"$":0},"tokigawa":{"$":0},"tokorozawa":{"$":0},"tsurugashima":{"$":0},"urawa":{"$":0},"warabi":{"$":0},"yashio":{"$":0},"yokoze":{"$":0},"yono":{"$":0},"yorii":{"$":0},"yoshida":{"$":0},"yoshikawa":{"$":0},"yoshimi":{"$":0}},"shiga":{"$":0,"aisho":{"$":0},"gamo":{"$":0},"higashiomi":{"$":0},"hikone":{"$":0},"koka":{"$":0},"konan":{"$":0},"kosei":{"$":0},"koto":{"$":0},"kusatsu":{"$":0},"maibara":{"$":0},"moriyama":{"$":0},"nagahama":{"$":0},"nishiazai":{"$":0},"notogawa":{"$":0},"omihachiman":{"$":0},"otsu":{"$":0},"ritto":{"$":0},"ryuoh":{"$":0},"takashima":{"$":0},"takatsuki":{"$":0},"torahime":{"$":0},"toyosato":{"$":0},"yasu":{"$":0}},"shimane":{"$":0,"akagi":{"$":0},"ama":{"$":0},"gotsu":{"$":0},"hamada":{"$":0},"higashiizumo":{"$":0},"hikawa":{"$":0},"hikimi":{"$":0},"izumo":{"$":0},"kakinoki":{"$":0},"masuda":{"$":0},"matsue":{"$":0},"misato":{"$":0},"nishinoshima":{"$":0},"ohda":{"$":0},"okinoshima":{"$":0},"okuizumo":{"$":0},"shimane":{"$":0},"tamayu":{"$":0},"tsuwano":{"$":0},"unnan":{"$":0},"yakumo":{"$":0},"yasugi":{"$":0},"yatsuka":{"$":0}},"shizuoka":{"$":0,"arai":{"$":0},"atami":{"$":0},"fuji":{"$":0},"fujieda":{"$":0},"fujikawa":{"$":0},"fujinomiya":{"$":0},"fukuroi":{"$":0},"gotemba":{"$":0},"haibara":{"$":0},"hamamatsu":{"$":0},"higashiizu":{"$":0},"ito":{"$":0},"iwata":{"$":0},"izu":{"$":0},"izunokuni":{"$":0},"kakegawa":{"$":0},"kannami":{"$":0},"kawanehon":{"$":0},"kawazu":{"$":0},"kikugawa":{"$":0},"kosai":{"$":0},"makinohara":{"$":0},"matsuzaki":{"$":0},"minamiizu":{"$":0},"mishima":{"$":0},"morimachi":{"$":0},"nishiizu":{"$":0},"numazu":{"$":0},"omaezaki":{"$":0},"shimada":{"$":0},"shimizu":{"$":0},"shimoda":{"$":0},"shizuoka":{"$":0},"susono":{"$":0},"yaizu":{"$":0},"yoshida":{"$":0}},"tochigi":{"$":0,"ashikaga":{"$":0},"bato":{"$":0},"haga":{"$":0},"ichikai":{"$":0},"iwafune":{"$":0},"kaminokawa":{"$":0},"kanuma":{"$":0},"karasuyama":{"$":0},"kuroiso":{"$":0},"mashiko":{"$":0},"mibu":{"$":0},"moka":{"$":0},"motegi":{"$":0},"nasu":{"$":0},"nasushiobara":{"$":0},"nikko":{"$":0},"nishikata":{"$":0},"nogi":{"$":0},"ohira":{"$":0},"ohtawara":{"$":0},"oyama":{"$":0},"sakura":{"$":0},"sano":{"$":0},"shimotsuke":{"$":0},"shioya":{"$":0},"takanezawa":{"$":0},"tochigi":{"$":0},"tsuga":{"$":0},"ujiie":{"$":0},"utsunomiya":{"$":0},"yaita":{"$":0}},"tokushima":{"$":0,"aizumi":{"$":0},"anan":{"$":0},"ichiba":{"$":0},"itano":{"$":0},"kainan":{"$":0},"komatsushima":{"$":0},"matsushige":{"$":0},"mima":{"$":0},"minami":{"$":0},"miyoshi":{"$":0},"mugi":{"$":0},"nakagawa":{"$":0},"naruto":{"$":0},"sanagochi":{"$":0},"shishikui":{"$":0},"tokushima":{"$":0},"wajiki":{"$":0}},"tokyo":{"$":0,"adachi":{"$":0},"akiruno":{"$":0},"akishima":{"$":0},"aogashima":{"$":0},"arakawa":{"$":0},"bunkyo":{"$":0},"chiyoda":{"$":0},"chofu":{"$":0},"chuo":{"$":0},"edogawa":{"$":0},"fuchu":{"$":0},"fussa":{"$":0},"hachijo":{"$":0},"hachioji":{"$":0},"hamura":{"$":0},"higashikurume":{"$":0},"higashimurayama":{"$":0},"higashiyamato":{"$":0},"hino":{"$":0},"hinode":{"$":0},"hinohara":{"$":0},"inagi":{"$":0},"itabashi":{"$":0},"katsushika":{"$":0},"kita":{"$":0},"kiyose":{"$":0},"kodaira":{"$":0},"koganei":{"$":0},"kokubunji":{"$":0},"komae":{"$":0},"koto":{"$":0},"kouzushima":{"$":0},"kunitachi":{"$":0},"machida":{"$":0},"meguro":{"$":0},"minato":{"$":0},"mitaka":{"$":0},"mizuho":{"$":0},"musashimurayama":{"$":0},"musashino":{"$":0},"nakano":{"$":0},"nerima":{"$":0},"ogasawara":{"$":0},"okutama":{"$":0},"ome":{"$":0},"oshima":{"$":0},"ota":{"$":0},"setagaya":{"$":0},"shibuya":{"$":0},"shinagawa":{"$":0},"shinjuku":{"$":0},"suginami":{"$":0},"sumida":{"$":0},"tachikawa":{"$":0},"taito":{"$":0},"tama":{"$":0},"toshima":{"$":0}},"tottori":{"$":0,"chizu":{"$":0},"hino":{"$":0},"kawahara":{"$":0},"koge":{"$":0},"kotoura":{"$":0},"misasa":{"$":0},"nanbu":{"$":0},"nichinan":{"$":0},"sakaiminato":{"$":0},"tottori":{"$":0},"wakasa":{"$":0},"yazu":{"$":0},"yonago":{"$":0}},"toyama":{"$":0,"asahi":{"$":0},"fuchu":{"$":0},"fukumitsu":{"$":0},"funahashi":{"$":0},"himi":{"$":0},"imizu":{"$":0},"inami":{"$":0},"johana":{"$":0},"kamiichi":{"$":0},"kurobe":{"$":0},"nakaniikawa":{"$":0},"namerikawa":{"$":0},"nanto":{"$":0},"nyuzen":{"$":0},"oyabe":{"$":0},"taira":{"$":0},"takaoka":{"$":0},"tateyama":{"$":0},"toga":{"$":0},"tonami":{"$":0},"toyama":{"$":0},"unazuki":{"$":0},"uozu":{"$":0},"yamada":{"$":0}},"wakayama":{"$":0,"arida":{"$":0},"aridagawa":{"$":0},"gobo":{"$":0},"hashimoto":{"$":0},"hidaka":{"$":0},"hirogawa":{"$":0},"inami":{"$":0},"iwade":{"$":0},"kainan":{"$":0},"kamitonda":{"$":0},"katsuragi":{"$":0},"kimino":{"$":0},"kinokawa":{"$":0},"kitayama":{"$":0},"koya":{"$":0},"koza":{"$":0},"kozagawa":{"$":0},"kudoyama":{"$":0},"kushimoto":{"$":0},"mihama":{"$":0},"misato":{"$":0},"nachikatsuura":{"$":0},"shingu":{"$":0},"shirahama":{"$":0},"taiji":{"$":0},"tanabe":{"$":0},"wakayama":{"$":0},"yuasa":{"$":0},"yura":{"$":0}},"yamagata":{"$":0,"asahi":{"$":0},"funagata":{"$":0},"higashine":{"$":0},"iide":{"$":0},"kahoku":{"$":0},"kaminoyama":{"$":0},"kaneyama":{"$":0},"kawanishi":{"$":0},"mamurogawa":{"$":0},"mikawa":{"$":0},"murayama":{"$":0},"nagai":{"$":0},"nakayama":{"$":0},"nanyo":{"$":0},"nishikawa":{"$":0},"obanazawa":{"$":0},"oe":{"$":0},"oguni":{"$":0},"ohkura":{"$":0},"oishida":{"$":0},"sagae":{"$":0},"sakata":{"$":0},"sakegawa":{"$":0},"shinjo":{"$":0},"shirataka":{"$":0},"shonai":{"$":0},"takahata":{"$":0},"tendo":{"$":0},"tozawa":{"$":0},"tsuruoka":{"$":0},"yamagata":{"$":0},"yamanobe":{"$":0},"yonezawa":{"$":0},"yuza":{"$":0}},"yamaguchi":{"$":0,"abu":{"$":0},"hagi":{"$":0},"hikari":{"$":0},"hofu":{"$":0},"iwakuni":{"$":0},"kudamatsu":{"$":0},"mitou":{"$":0},"nagato":{"$":0},"oshima":{"$":0},"shimonoseki":{"$":0},"shunan":{"$":0},"tabuse":{"$":0},"tokuyama":{"$":0},"toyota":{"$":0},"ube":{"$":0},"yuu":{"$":0}},"yamanashi":{"$":0,"chuo":{"$":0},"doshi":{"$":0},"fuefuki":{"$":0},"fujikawa":{"$":0},"fujikawaguchiko":{"$":0},"fujiyoshida":{"$":0},"hayakawa":{"$":0},"hokuto":{"$":0},"ichikawamisato":{"$":0},"kai":{"$":0},"kofu":{"$":0},"koshu":{"$":0},"kosuge":{"$":0},"minami-alps":{"$":0},"minobu":{"$":0},"nakamichi":{"$":0},"nanbu":{"$":0},"narusawa":{"$":0},"nirasaki":{"$":0},"nishikatsura":{"$":0},"oshino":{"$":0},"otsuki":{"$":0},"showa":{"$":0},"tabayama":{"$":0},"tsuru":{"$":0},"uenohara":{"$":0},"yamanakako":{"$":0},"yamanashi":{"$":0}},"xn--4pvxs":{"$":0},"xn--vgu402c":{"$":0},"xn--c3s14m":{"$":0},"xn--f6qx53a":{"$":0},"xn--8pvr4u":{"$":0},"xn--uist22h":{"$":0},"xn--djrs72d6uy":{"$":0},"xn--mkru45i":{"$":0},"xn--0trq7p7nn":{"$":0},"xn--8ltr62k":{"$":0},"xn--2m4a15e":{"$":0},"xn--efvn9s":{"$":0},"xn--32vp30h":{"$":0},"xn--4it797k":{"$":0},"xn--1lqs71d":{"$":0},"xn--5rtp49c":{"$":0},"xn--5js045d":{"$":0},"xn--ehqz56n":{"$":0},"xn--1lqs03n":{"$":0},"xn--qqqt11m":{"$":0},"xn--kbrq7o":{"$":0},"xn--pssu33l":{"$":0},"xn--ntsq17g":{"$":0},"xn--uisz3g":{"$":0},"xn--6btw5a":{"$":0},"xn--1ctwo":{"$":0},"xn--6orx2r":{"$":0},"xn--rht61e":{"$":0},"xn--rht27z":{"$":0},"xn--djty4k":{"$":0},"xn--nit225k":{"$":0},"xn--rht3d":{"$":0},"xn--klty5x":{"$":0},"xn--kltx9a":{"$":0},"xn--kltp7d":{"$":0},"xn--uuwu58a":{"$":0},"xn--zbx025d":{"$":0},"xn--ntso0iqx3a":{"$":0},"xn--elqq16h":{"$":0},"xn--4it168d":{"$":0},"xn--klt787d":{"$":0},"xn--rny31h":{"$":0},"xn--7t0a264c":{"$":0},"xn--5rtq34k":{"$":0},"xn--k7yn95e":{"$":0},"xn--tor131o":{"$":0},"xn--d5qv7z876c":{"$":0},"kawasaki":{"*":{"$":0}},"kitakyushu":{"*":{"$":0}},"kobe":{"*":{"$":0}},"nagoya":{"*":{"$":0}},"sapporo":{"*":{"$":0}},"sendai":{"*":{"$":0}},"yokohama":{"*":{"$":0}},"blogspot":{"$":0}},"ke":{"$":0,"ac":{"$":0},"co":{"$":0,"blogspot":{"$":0}},"go":{"$":0},"info":{"$":0},"me":{"$":0},"mobi":{"$":0},"ne":{"$":0},"or":{"$":0},"sc":{"$":0}},"kg":{"$":0,"org":{"$":0},"net":{"$":0},"com":{"$":0},"edu":{"$":0},"gov":{"$":0},"mil":{"$":0}},"kh":{"*":{"$":0}},"ki":{"$":0,"edu":{"$":0},"biz":{"$":0},"net":{"$":0},"org":{"$":0},"gov":{"$":0},"info":{"$":0},"com":{"$":0}},"km":{"$":0,"org":{"$":0},"nom":{"$":0},"gov":{"$":0},"prd":{"$":0},"tm":{"$":0},"edu":{"$":0},"mil":{"$":0},"ass":{"$":0},"com":{"$":0},"coop":{"$":0},"asso":{"$":0},"presse":{"$":0},"medecin":{"$":0},"notaires":{"$":0},"pharmaciens":{"$":0},"veterinaire":{"$":0},"gouv":{"$":0}},"kn":{"$":0,"net":{"$":0},"org":{"$":0},"edu":{"$":0},"gov":{"$":0}},"kp":{"$":0,"com":{"$":0},"edu":{"$":0},"gov":{"$":0},"org":{"$":0},"rep":{"$":0},"tra":{"$":0}},"kr":{"$":0,"ac":{"$":0},"co":{"$":0},"es":{"$":0},"go":{"$":0},"hs":{"$":0},"kg":{"$":0},"mil":{"$":0},"ms":{"$":0},"ne":{"$":0},"or":{"$":0},"pe":{"$":0},"re":{"$":0},"sc":{"$":0},"busan":{"$":0},"chungbuk":{"$":0},"chungnam":{"$":0},"daegu":{"$":0},"daejeon":{"$":0},"gangwon":{"$":0},"gwangju":{"$":0},"gyeongbuk":{"$":0},"gyeonggi":{"$":0},"gyeongnam":{"$":0},"incheon":{"$":0},"jeju":{"$":0},"jeonbuk":{"$":0},"jeonnam":{"$":0},"seoul":{"$":0},"ulsan":{"$":0},"blogspot":{"$":0}},"kw":{"*":{"$":0}},"ky":{"$":0,"edu":{"$":0},"gov":{"$":0},"com":{"$":0},"org":{"$":0},"net":{"$":0}},"kz":{"$":0,"org":{"$":0},"edu":{"$":0},"net":{"$":0},"gov":{"$":0},"mil":{"$":0},"com":{"$":0},"nym":{"$":0}},"la":{"$":0,"int":{"$":0},"net":{"$":0},"info":{"$":0},"edu":{"$":0},"gov":{"$":0},"per":{"$":0},"com":{"$":0},"org":{"$":0},"bnr":{"$":0},"c":{"$":0},"nym":{"$":0}},"lb":{"$":0,"com":{"$":0},"edu":{"$":0},"gov":{"$":0},"net":{"$":0},"org":{"$":0}},"lc":{"$":0,"com":{"$":0},"net":{"$":0},"co":{"$":0},"org":{"$":0},"edu":{"$":0},"gov":{"$":0},"oy":{"$":0}},"li":{"$":0,"blogspot":{"$":0},"nom":{"$":0},"nym":{"$":0}},"lk":{"$":0,"gov":{"$":0},"sch":{"$":0},"net":{"$":0},"int":{"$":0},"com":{"$":0},"org":{"$":0},"edu":{"$":0},"ngo":{"$":0},"soc":{"$":0},"web":{"$":0},"ltd":{"$":0},"assn":{"$":0},"grp":{"$":0},"hotel":{"$":0},"ac":{"$":0}},"lr":{"$":0,"com":{"$":0},"edu":{"$":0},"gov":{"$":0},"org":{"$":0},"net":{"$":0}},"ls":{"$":0,"co":{"$":0},"org":{"$":0}},"lt":{"$":0,"gov":{"$":0},"blogspot":{"$":0},"nym":{"$":0}},"lu":{"$":0,"blogspot":{"$":0},"nym":{"$":0}},"lv":{"$":0,"com":{"$":0},"edu":{"$":0},"gov":{"$":0},"org":{"$":0},"mil":{"$":0},"id":{"$":0},"net":{"$":0},"asn":{"$":0},"conf":{"$":0}},"ly":{"$":0,"com":{"$":0},"net":{"$":0},"gov":{"$":0},"plc":{"$":0},"edu":{"$":0},"sch":{"$":0},"med":{"$":0},"org":{"$":0},"id":{"$":0}},"ma":{"$":0,"co":{"$":0},"net":{"$":0},"gov":{"$":0},"org":{"$":0},"ac":{"$":0},"press":{"$":0}},"mc":{"$":0,"tm":{"$":0},"asso":{"$":0}},"md":{"$":0,"blogspot":{"$":0}},"me":{"$":0,"co":{"$":0},"net":{"$":0},"org":{"$":0},"edu":{"$":0},"ac":{"$":0},"gov":{"$":0},"its":{"$":0},"priv":{"$":0},"c66":{"$":0},"daplie":{"$":0,"localhost":{"$":0}},"filegear":{"$":0},"brasilia":{"$":0},"ddns":{"$":0},"dnsfor":{"$":0},"hopto":{"$":0},"loginto":{"$":0},"noip":{"$":0},"webhop":{"$":0},"nym":{"$":0},"diskstation":{"$":0},"dscloud":{"$":0},"i234":{"$":0},"myds":{"$":0},"synology":{"$":0},"wedeploy":{"$":0},"yombo":{"$":0}},"mg":{"$":0,"org":{"$":0},"nom":{"$":0},"gov":{"$":0},"prd":{"$":0},"tm":{"$":0},"edu":{"$":0},"mil":{"$":0},"com":{"$":0},"co":{"$":0}},"mh":{"$":0},"mil":{"$":0},"mk":{"$":0,"com":{"$":0},"org":{"$":0},"net":{"$":0},"edu":{"$":0},"gov":{"$":0},"inf":{"$":0},"name":{"$":0},"blogspot":{"$":0},"nom":{"$":0}},"ml":{"$":0,"com":{"$":0},"edu":{"$":0},"gouv":{"$":0},"gov":{"$":0},"net":{"$":0},"org":{"$":0},"presse":{"$":0}},"mm":{"*":{"$":0}},"mn":{"$":0,"gov":{"$":0},"edu":{"$":0},"org":{"$":0},"nyc":{"$":0}},"mo":{"$":0,"com":{"$":0},"net":{"$":0},"org":{"$":0},"edu":{"$":0},"gov":{"$":0}},"mobi":{"$":0,"dscloud":{"$":0}},"mp":{"$":0},"mq":{"$":0},"mr":{"$":0,"gov":{"$":0},"blogspot":{"$":0}},"ms":{"$":0,"com":{"$":0},"edu":{"$":0},"gov":{"$":0},"net":{"$":0},"org":{"$":0}},"mt":{"$":0,"com":{"$":0,"blogspot":{"$":0}},"edu":{"$":0},"net":{"$":0},"org":{"$":0}},"mu":{"$":0,"com":{"$":0},"net":{"$":0},"org":{"$":0},"gov":{"$":0},"ac":{"$":0},"co":{"$":0},"or":{"$":0}},"museum":{"$":0,"academy":{"$":0},"agriculture":{"$":0},"air":{"$":0},"airguard":{"$":0},"alabama":{"$":0},"alaska":{"$":0},"amber":{"$":0},"ambulance":{"$":0},"american":{"$":0},"americana":{"$":0},"americanantiques":{"$":0},"americanart":{"$":0},"amsterdam":{"$":0},"and":{"$":0},"annefrank":{"$":0},"anthro":{"$":0},"anthropology":{"$":0},"antiques":{"$":0},"aquarium":{"$":0},"arboretum":{"$":0},"archaeological":{"$":0},"archaeology":{"$":0},"architecture":{"$":0},"art":{"$":0},"artanddesign":{"$":0},"artcenter":{"$":0},"artdeco":{"$":0},"arteducation":{"$":0},"artgallery":{"$":0},"arts":{"$":0},"artsandcrafts":{"$":0},"asmatart":{"$":0},"assassination":{"$":0},"assisi":{"$":0},"association":{"$":0},"astronomy":{"$":0},"atlanta":{"$":0},"austin":{"$":0},"australia":{"$":0},"automotive":{"$":0},"aviation":{"$":0},"axis":{"$":0},"badajoz":{"$":0},"baghdad":{"$":0},"bahn":{"$":0},"bale":{"$":0},"baltimore":{"$":0},"barcelona":{"$":0},"baseball":{"$":0},"basel":{"$":0},"baths":{"$":0},"bauern":{"$":0},"beauxarts":{"$":0},"beeldengeluid":{"$":0},"bellevue":{"$":0},"bergbau":{"$":0},"berkeley":{"$":0},"berlin":{"$":0},"bern":{"$":0},"bible":{"$":0},"bilbao":{"$":0},"bill":{"$":0},"birdart":{"$":0},"birthplace":{"$":0},"bonn":{"$":0},"boston":{"$":0},"botanical":{"$":0},"botanicalgarden":{"$":0},"botanicgarden":{"$":0},"botany":{"$":0},"brandywinevalley":{"$":0},"brasil":{"$":0},"bristol":{"$":0},"british":{"$":0},"britishcolumbia":{"$":0},"broadcast":{"$":0},"brunel":{"$":0},"brussel":{"$":0},"brussels":{"$":0},"bruxelles":{"$":0},"building":{"$":0},"burghof":{"$":0},"bus":{"$":0},"bushey":{"$":0},"cadaques":{"$":0},"california":{"$":0},"cambridge":{"$":0},"can":{"$":0},"canada":{"$":0},"capebreton":{"$":0},"carrier":{"$":0},"cartoonart":{"$":0},"casadelamoneda":{"$":0},"castle":{"$":0},"castres":{"$":0},"celtic":{"$":0},"center":{"$":0},"chattanooga":{"$":0},"cheltenham":{"$":0},"chesapeakebay":{"$":0},"chicago":{"$":0},"children":{"$":0},"childrens":{"$":0},"childrensgarden":{"$":0},"chiropractic":{"$":0},"chocolate":{"$":0},"christiansburg":{"$":0},"cincinnati":{"$":0},"cinema":{"$":0},"circus":{"$":0},"civilisation":{"$":0},"civilization":{"$":0},"civilwar":{"$":0},"clinton":{"$":0},"clock":{"$":0},"coal":{"$":0},"coastaldefence":{"$":0},"cody":{"$":0},"coldwar":{"$":0},"collection":{"$":0},"colonialwilliamsburg":{"$":0},"coloradoplateau":{"$":0},"columbia":{"$":0},"columbus":{"$":0},"communication":{"$":0},"communications":{"$":0},"community":{"$":0},"computer":{"$":0},"computerhistory":{"$":0},"xn--comunicaes-v6a2o":{"$":0},"contemporary":{"$":0},"contemporaryart":{"$":0},"convent":{"$":0},"copenhagen":{"$":0},"corporation":{"$":0},"xn--correios-e-telecomunicaes-ghc29a":{"$":0},"corvette":{"$":0},"costume":{"$":0},"countryestate":{"$":0},"county":{"$":0},"crafts":{"$":0},"cranbrook":{"$":0},"creation":{"$":0},"cultural":{"$":0},"culturalcenter":{"$":0},"culture":{"$":0},"cyber":{"$":0},"cymru":{"$":0},"dali":{"$":0},"dallas":{"$":0},"database":{"$":0},"ddr":{"$":0},"decorativearts":{"$":0},"delaware":{"$":0},"delmenhorst":{"$":0},"denmark":{"$":0},"depot":{"$":0},"design":{"$":0},"detroit":{"$":0},"dinosaur":{"$":0},"discovery":{"$":0},"dolls":{"$":0},"donostia":{"$":0},"durham":{"$":0},"eastafrica":{"$":0},"eastcoast":{"$":0},"education":{"$":0},"educational":{"$":0},"egyptian":{"$":0},"eisenbahn":{"$":0},"elburg":{"$":0},"elvendrell":{"$":0},"embroidery":{"$":0},"encyclopedic":{"$":0},"england":{"$":0},"entomology":{"$":0},"environment":{"$":0},"environmentalconservation":{"$":0},"epilepsy":{"$":0},"essex":{"$":0},"estate":{"$":0},"ethnology":{"$":0},"exeter":{"$":0},"exhibition":{"$":0},"family":{"$":0},"farm":{"$":0},"farmequipment":{"$":0},"farmers":{"$":0},"farmstead":{"$":0},"field":{"$":0},"figueres":{"$":0},"filatelia":{"$":0},"film":{"$":0},"fineart":{"$":0},"finearts":{"$":0},"finland":{"$":0},"flanders":{"$":0},"florida":{"$":0},"force":{"$":0},"fortmissoula":{"$":0},"fortworth":{"$":0},"foundation":{"$":0},"francaise":{"$":0},"frankfurt":{"$":0},"franziskaner":{"$":0},"freemasonry":{"$":0},"freiburg":{"$":0},"fribourg":{"$":0},"frog":{"$":0},"fundacio":{"$":0},"furniture":{"$":0},"gallery":{"$":0},"garden":{"$":0},"gateway":{"$":0},"geelvinck":{"$":0},"gemological":{"$":0},"geology":{"$":0},"georgia":{"$":0},"giessen":{"$":0},"glas":{"$":0},"glass":{"$":0},"gorge":{"$":0},"grandrapids":{"$":0},"graz":{"$":0},"guernsey":{"$":0},"halloffame":{"$":0},"hamburg":{"$":0},"handson":{"$":0},"harvestcelebration":{"$":0},"hawaii":{"$":0},"health":{"$":0},"heimatunduhren":{"$":0},"hellas":{"$":0},"helsinki":{"$":0},"hembygdsforbund":{"$":0},"heritage":{"$":0},"histoire":{"$":0},"historical":{"$":0},"historicalsociety":{"$":0},"historichouses":{"$":0},"historisch":{"$":0},"historisches":{"$":0},"history":{"$":0},"historyofscience":{"$":0},"horology":{"$":0},"house":{"$":0},"humanities":{"$":0},"illustration":{"$":0},"imageandsound":{"$":0},"indian":{"$":0},"indiana":{"$":0},"indianapolis":{"$":0},"indianmarket":{"$":0},"intelligence":{"$":0},"interactive":{"$":0},"iraq":{"$":0},"iron":{"$":0},"isleofman":{"$":0},"jamison":{"$":0},"jefferson":{"$":0},"jerusalem":{"$":0},"jewelry":{"$":0},"jewish":{"$":0},"jewishart":{"$":0},"jfk":{"$":0},"journalism":{"$":0},"judaica":{"$":0},"judygarland":{"$":0},"juedisches":{"$":0},"juif":{"$":0},"karate":{"$":0},"karikatur":{"$":0},"kids":{"$":0},"koebenhavn":{"$":0},"koeln":{"$":0},"kunst":{"$":0},"kunstsammlung":{"$":0},"kunstunddesign":{"$":0},"labor":{"$":0},"labour":{"$":0},"lajolla":{"$":0},"lancashire":{"$":0},"landes":{"$":0},"lans":{"$":0},"xn--lns-qla":{"$":0},"larsson":{"$":0},"lewismiller":{"$":0},"lincoln":{"$":0},"linz":{"$":0},"living":{"$":0},"livinghistory":{"$":0},"localhistory":{"$":0},"london":{"$":0},"losangeles":{"$":0},"louvre":{"$":0},"loyalist":{"$":0},"lucerne":{"$":0},"luxembourg":{"$":0},"luzern":{"$":0},"mad":{"$":0},"madrid":{"$":0},"mallorca":{"$":0},"manchester":{"$":0},"mansion":{"$":0},"mansions":{"$":0},"manx":{"$":0},"marburg":{"$":0},"maritime":{"$":0},"maritimo":{"$":0},"maryland":{"$":0},"marylhurst":{"$":0},"media":{"$":0},"medical":{"$":0},"medizinhistorisches":{"$":0},"meeres":{"$":0},"memorial":{"$":0},"mesaverde":{"$":0},"michigan":{"$":0},"midatlantic":{"$":0},"military":{"$":0},"mill":{"$":0},"miners":{"$":0},"mining":{"$":0},"minnesota":{"$":0},"missile":{"$":0},"missoula":{"$":0},"modern":{"$":0},"moma":{"$":0},"money":{"$":0},"monmouth":{"$":0},"monticello":{"$":0},"montreal":{"$":0},"moscow":{"$":0},"motorcycle":{"$":0},"muenchen":{"$":0},"muenster":{"$":0},"mulhouse":{"$":0},"muncie":{"$":0},"museet":{"$":0},"museumcenter":{"$":0},"museumvereniging":{"$":0},"music":{"$":0},"national":{"$":0},"nationalfirearms":{"$":0},"nationalheritage":{"$":0},"nativeamerican":{"$":0},"naturalhistory":{"$":0},"naturalhistorymuseum":{"$":0},"naturalsciences":{"$":0},"nature":{"$":0},"naturhistorisches":{"$":0},"natuurwetenschappen":{"$":0},"naumburg":{"$":0},"naval":{"$":0},"nebraska":{"$":0},"neues":{"$":0},"newhampshire":{"$":0},"newjersey":{"$":0},"newmexico":{"$":0},"newport":{"$":0},"newspaper":{"$":0},"newyork":{"$":0},"niepce":{"$":0},"norfolk":{"$":0},"north":{"$":0},"nrw":{"$":0},"nuernberg":{"$":0},"nuremberg":{"$":0},"nyc":{"$":0},"nyny":{"$":0},"oceanographic":{"$":0},"oceanographique":{"$":0},"omaha":{"$":0},"online":{"$":0},"ontario":{"$":0},"openair":{"$":0},"oregon":{"$":0},"oregontrail":{"$":0},"otago":{"$":0},"oxford":{"$":0},"pacific":{"$":0},"paderborn":{"$":0},"palace":{"$":0},"paleo":{"$":0},"palmsprings":{"$":0},"panama":{"$":0},"paris":{"$":0},"pasadena":{"$":0},"pharmacy":{"$":0},"philadelphia":{"$":0},"philadelphiaarea":{"$":0},"philately":{"$":0},"phoenix":{"$":0},"photography":{"$":0},"pilots":{"$":0},"pittsburgh":{"$":0},"planetarium":{"$":0},"plantation":{"$":0},"plants":{"$":0},"plaza":{"$":0},"portal":{"$":0},"portland":{"$":0},"portlligat":{"$":0},"posts-and-telecommunications":{"$":0},"preservation":{"$":0},"presidio":{"$":0},"press":{"$":0},"project":{"$":0},"public":{"$":0},"pubol":{"$":0},"quebec":{"$":0},"railroad":{"$":0},"railway":{"$":0},"research":{"$":0},"resistance":{"$":0},"riodejaneiro":{"$":0},"rochester":{"$":0},"rockart":{"$":0},"roma":{"$":0},"russia":{"$":0},"saintlouis":{"$":0},"salem":{"$":0},"salvadordali":{"$":0},"salzburg":{"$":0},"sandiego":{"$":0},"sanfrancisco":{"$":0},"santabarbara":{"$":0},"santacruz":{"$":0},"santafe":{"$":0},"saskatchewan":{"$":0},"satx":{"$":0},"savannahga":{"$":0},"schlesisches":{"$":0},"schoenbrunn":{"$":0},"schokoladen":{"$":0},"school":{"$":0},"schweiz":{"$":0},"science":{"$":0},"scienceandhistory":{"$":0},"scienceandindustry":{"$":0},"sciencecenter":{"$":0},"sciencecenters":{"$":0},"science-fiction":{"$":0},"sciencehistory":{"$":0},"sciences":{"$":0},"sciencesnaturelles":{"$":0},"scotland":{"$":0},"seaport":{"$":0},"settlement":{"$":0},"settlers":{"$":0},"shell":{"$":0},"sherbrooke":{"$":0},"sibenik":{"$":0},"silk":{"$":0},"ski":{"$":0},"skole":{"$":0},"society":{"$":0},"sologne":{"$":0},"soundandvision":{"$":0},"southcarolina":{"$":0},"southwest":{"$":0},"space":{"$":0},"spy":{"$":0},"square":{"$":0},"stadt":{"$":0},"stalbans":{"$":0},"starnberg":{"$":0},"state":{"$":0},"stateofdelaware":{"$":0},"station":{"$":0},"steam":{"$":0},"steiermark":{"$":0},"stjohn":{"$":0},"stockholm":{"$":0},"stpetersburg":{"$":0},"stuttgart":{"$":0},"suisse":{"$":0},"surgeonshall":{"$":0},"surrey":{"$":0},"svizzera":{"$":0},"sweden":{"$":0},"sydney":{"$":0},"tank":{"$":0},"tcm":{"$":0},"technology":{"$":0},"telekommunikation":{"$":0},"television":{"$":0},"texas":{"$":0},"textile":{"$":0},"theater":{"$":0},"time":{"$":0},"timekeeping":{"$":0},"topology":{"$":0},"torino":{"$":0},"touch":{"$":0},"town":{"$":0},"transport":{"$":0},"tree":{"$":0},"trolley":{"$":0},"trust":{"$":0},"trustee":{"$":0},"uhren":{"$":0},"ulm":{"$":0},"undersea":{"$":0},"university":{"$":0},"usa":{"$":0},"usantiques":{"$":0},"usarts":{"$":0},"uscountryestate":{"$":0},"usculture":{"$":0},"usdecorativearts":{"$":0},"usgarden":{"$":0},"ushistory":{"$":0},"ushuaia":{"$":0},"uslivinghistory":{"$":0},"utah":{"$":0},"uvic":{"$":0},"valley":{"$":0},"vantaa":{"$":0},"versailles":{"$":0},"viking":{"$":0},"village":{"$":0},"virginia":{"$":0},"virtual":{"$":0},"virtuel":{"$":0},"vlaanderen":{"$":0},"volkenkunde":{"$":0},"wales":{"$":0},"wallonie":{"$":0},"war":{"$":0},"washingtondc":{"$":0},"watchandclock":{"$":0},"watch-and-clock":{"$":0},"western":{"$":0},"westfalen":{"$":0},"whaling":{"$":0},"wildlife":{"$":0},"williamsburg":{"$":0},"windmill":{"$":0},"workshop":{"$":0},"york":{"$":0},"yorkshire":{"$":0},"yosemite":{"$":0},"youth":{"$":0},"zoological":{"$":0},"zoology":{"$":0},"xn--9dbhblg6di":{"$":0},"xn--h1aegh":{"$":0}},"mv":{"$":0,"aero":{"$":0},"biz":{"$":0},"com":{"$":0},"coop":{"$":0},"edu":{"$":0},"gov":{"$":0},"info":{"$":0},"int":{"$":0},"mil":{"$":0},"museum":{"$":0},"name":{"$":0},"net":{"$":0},"org":{"$":0},"pro":{"$":0}},"mw":{"$":0,"ac":{"$":0},"biz":{"$":0},"co":{"$":0},"com":{"$":0},"coop":{"$":0},"edu":{"$":0},"gov":{"$":0},"int":{"$":0},"museum":{"$":0},"net":{"$":0},"org":{"$":0}},"mx":{"$":0,"com":{"$":0},"org":{"$":0},"gob":{"$":0},"edu":{"$":0},"net":{"$":0},"blogspot":{"$":0},"nym":{"$":0}},"my":{"$":0,"com":{"$":0},"net":{"$":0},"org":{"$":0},"gov":{"$":0},"edu":{"$":0},"mil":{"$":0},"name":{"$":0},"blogspot":{"$":0}},"mz":{"$":0,"ac":{"$":0},"adv":{"$":0},"co":{"$":0},"edu":{"$":0},"gov":{"$":0},"mil":{"$":0},"net":{"$":0},"org":{"$":0}},"na":{"$":0,"info":{"$":0},"pro":{"$":0},"name":{"$":0},"school":{"$":0},"or":{"$":0},"dr":{"$":0},"us":{"$":0},"mx":{"$":0},"ca":{"$":0},"in":{"$":0},"cc":{"$":0},"tv":{"$":0},"ws":{"$":0},"mobi":{"$":0},"co":{"$":0},"com":{"$":0},"org":{"$":0}},"name":{"$":0,"her":{"forgot":{"$":0}},"his":{"forgot":{"$":0}}},"nc":{"$":0,"asso":{"$":0},"nom":{"$":0}},"ne":{"$":0},"net":{"$":0,"alwaysdata":{"$":0},"cloudfront":{"$":0},"t3l3p0rt":{"$":0},"myfritz":{"$":0},"boomla":{"$":0},"bplaced":{"$":0},"square7":{"$":0},"gb":{"$":0},"hu":{"$":0},"jp":{"$":0},"se":{"$":0},"uk":{"$":0},"in":{"$":0},"cloudaccess":{"$":0},"cdn77-ssl":{"$":0},"cdn77":{"r":{"$":0}},"feste-ip":{"$":0},"knx-server":{"$":0},"static-access":{"$":0},"cryptonomic":{"*":{"$":0}},"debian":{"$":0},"at-band-camp":{"$":0},"blogdns":{"$":0},"broke-it":{"$":0},"buyshouses":{"$":0},"dnsalias":{"$":0},"dnsdojo":{"$":0},"does-it":{"$":0},"dontexist":{"$":0},"dynalias":{"$":0},"dynathome":{"$":0},"endofinternet":{"$":0},"from-az":{"$":0},"from-co":{"$":0},"from-la":{"$":0},"from-ny":{"$":0},"gets-it":{"$":0},"ham-radio-op":{"$":0},"homeftp":{"$":0},"homeip":{"$":0},"homelinux":{"$":0},"homeunix":{"$":0},"in-the-band":{"$":0},"is-a-chef":{"$":0},"is-a-geek":{"$":0},"isa-geek":{"$":0},"kicks-ass":{"$":0},"office-on-the":{"$":0},"podzone":{"$":0},"scrapper-site":{"$":0},"selfip":{"$":0},"sells-it":{"$":0},"servebbs":{"$":0},"serveftp":{"$":0},"thruhere":{"$":0},"webhop":{"$":0},"definima":{"$":0},"casacam":{"$":0},"dynu":{"$":0},"dynv6":{"$":0},"twmail":{"$":0},"ru":{"$":0},"channelsdvr":{"$":0},"fastlylb":{"$":0,"map":{"$":0}},"fastly":{"freetls":{"$":0},"map":{"$":0},"prod":{"a":{"$":0},"global":{"$":0}},"ssl":{"a":{"$":0},"b":{"$":0},"global":{"$":0}}},"flynnhosting":{"$":0},"cloudfunctions":{"$":0},"moonscale":{"$":0},"ipifony":{"$":0},"barsy":{"$":0},"azurewebsites":{"$":0},"azure-mobile":{"$":0},"cloudapp":{"$":0},"eating-organic":{"$":0},"mydissent":{"$":0},"myeffect":{"$":0},"mymediapc":{"$":0},"mypsx":{"$":0},"mysecuritycamera":{"$":0},"nhlfan":{"$":0},"no-ip":{"$":0},"pgafan":{"$":0},"privatizehealthinsurance":{"$":0},"bounceme":{"$":0},"ddns":{"$":0},"redirectme":{"$":0},"serveblog":{"$":0},"serveminecraft":{"$":0},"sytes":{"$":0},"rackmaze":{"$":0},"firewall-gateway":{"$":0},"dsmynas":{"$":0},"familyds":{"$":0},"za":{"$":0}},"nf":{"$":0,"com":{"$":0},"net":{"$":0},"per":{"$":0},"rec":{"$":0},"web":{"$":0},"arts":{"$":0},"firm":{"$":0},"info":{"$":0},"other":{"$":0},"store":{"$":0}},"ng":{"$":0,"com":{"$":0,"blogspot":{"$":0}},"edu":{"$":0},"gov":{"$":0},"i":{"$":0},"mil":{"$":0},"mobi":{"$":0},"name":{"$":0},"net":{"$":0},"org":{"$":0},"sch":{"$":0}},"ni":{"$":0,"ac":{"$":0},"biz":{"$":0},"co":{"$":0},"com":{"$":0},"edu":{"$":0},"gob":{"$":0},"in":{"$":0},"info":{"$":0},"int":{"$":0},"mil":{"$":0},"net":{"$":0},"nom":{"$":0},"org":{"$":0},"web":{"$":0}},"nl":{"$":0,"bv":{"$":0},"virtueeldomein":{"$":0},"co":{"$":0},"hosting-cluster":{"$":0},"blogspot":{"$":0},"transurl":{"*":{"$":0}},"cistron":{"$":0},"demon":{"$":0}},"no":{"$":0,"fhs":{"$":0},"vgs":{"$":0},"fylkesbibl":{"$":0},"folkebibl":{"$":0},"museum":{"$":0},"idrett":{"$":0},"priv":{"$":0},"mil":{"$":0},"stat":{"$":0},"dep":{"$":0},"kommune":{"$":0},"herad":{"$":0},"aa":{"$":0,"gs":{"$":0}},"ah":{"$":0,"gs":{"$":0}},"bu":{"$":0,"gs":{"$":0}},"fm":{"$":0,"gs":{"$":0}},"hl":{"$":0,"gs":{"$":0}},"hm":{"$":0,"gs":{"$":0}},"jan-mayen":{"$":0,"gs":{"$":0}},"mr":{"$":0,"gs":{"$":0}},"nl":{"$":0,"gs":{"$":0}},"nt":{"$":0,"gs":{"$":0}},"of":{"$":0,"gs":{"$":0}},"ol":{"$":0,"gs":{"$":0}},"oslo":{"$":0,"gs":{"$":0}},"rl":{"$":0,"gs":{"$":0}},"sf":{"$":0,"gs":{"$":0}},"st":{"$":0,"gs":{"$":0}},"svalbard":{"$":0,"gs":{"$":0}},"tm":{"$":0,"gs":{"$":0}},"tr":{"$":0,"gs":{"$":0}},"va":{"$":0,"gs":{"$":0}},"vf":{"$":0,"gs":{"$":0}},"akrehamn":{"$":0},"xn--krehamn-dxa":{"$":0},"algard":{"$":0},"xn--lgrd-poac":{"$":0},"arna":{"$":0},"brumunddal":{"$":0},"bryne":{"$":0},"bronnoysund":{"$":0},"xn--brnnysund-m8ac":{"$":0},"drobak":{"$":0},"xn--drbak-wua":{"$":0},"egersund":{"$":0},"fetsund":{"$":0},"floro":{"$":0},"xn--flor-jra":{"$":0},"fredrikstad":{"$":0},"hokksund":{"$":0},"honefoss":{"$":0},"xn--hnefoss-q1a":{"$":0},"jessheim":{"$":0},"jorpeland":{"$":0},"xn--jrpeland-54a":{"$":0},"kirkenes":{"$":0},"kopervik":{"$":0},"krokstadelva":{"$":0},"langevag":{"$":0},"xn--langevg-jxa":{"$":0},"leirvik":{"$":0},"mjondalen":{"$":0},"xn--mjndalen-64a":{"$":0},"mo-i-rana":{"$":0},"mosjoen":{"$":0},"xn--mosjen-eya":{"$":0},"nesoddtangen":{"$":0},"orkanger":{"$":0},"osoyro":{"$":0},"xn--osyro-wua":{"$":0},"raholt":{"$":0},"xn--rholt-mra":{"$":0},"sandnessjoen":{"$":0},"xn--sandnessjen-ogb":{"$":0},"skedsmokorset":{"$":0},"slattum":{"$":0},"spjelkavik":{"$":0},"stathelle":{"$":0},"stavern":{"$":0},"stjordalshalsen":{"$":0},"xn--stjrdalshalsen-sqb":{"$":0},"tananger":{"$":0},"tranby":{"$":0},"vossevangen":{"$":0},"afjord":{"$":0},"xn--fjord-lra":{"$":0},"agdenes":{"$":0},"al":{"$":0},"xn--l-1fa":{"$":0},"alesund":{"$":0},"xn--lesund-hua":{"$":0},"alstahaug":{"$":0},"alta":{"$":0},"xn--lt-liac":{"$":0},"alaheadju":{"$":0},"xn--laheadju-7ya":{"$":0},"alvdal":{"$":0},"amli":{"$":0},"xn--mli-tla":{"$":0},"amot":{"$":0},"xn--mot-tla":{"$":0},"andebu":{"$":0},"andoy":{"$":0},"xn--andy-ira":{"$":0},"andasuolo":{"$":0},"ardal":{"$":0},"xn--rdal-poa":{"$":0},"aremark":{"$":0},"arendal":{"$":0},"xn--s-1fa":{"$":0},"aseral":{"$":0},"xn--seral-lra":{"$":0},"asker":{"$":0},"askim":{"$":0},"askvoll":{"$":0},"askoy":{"$":0},"xn--asky-ira":{"$":0},"asnes":{"$":0},"xn--snes-poa":{"$":0},"audnedaln":{"$":0},"aukra":{"$":0},"aure":{"$":0},"aurland":{"$":0},"aurskog-holand":{"$":0},"xn--aurskog-hland-jnb":{"$":0},"austevoll":{"$":0},"austrheim":{"$":0},"averoy":{"$":0},"xn--avery-yua":{"$":0},"balestrand":{"$":0},"ballangen":{"$":0},"balat":{"$":0},"xn--blt-elab":{"$":0},"balsfjord":{"$":0},"bahccavuotna":{"$":0},"xn--bhccavuotna-k7a":{"$":0},"bamble":{"$":0},"bardu":{"$":0},"beardu":{"$":0},"beiarn":{"$":0},"bajddar":{"$":0},"xn--bjddar-pta":{"$":0},"baidar":{"$":0},"xn--bidr-5nac":{"$":0},"berg":{"$":0},"bergen":{"$":0},"berlevag":{"$":0},"xn--berlevg-jxa":{"$":0},"bearalvahki":{"$":0},"xn--bearalvhki-y4a":{"$":0},"bindal":{"$":0},"birkenes":{"$":0},"bjarkoy":{"$":0},"xn--bjarky-fya":{"$":0},"bjerkreim":{"$":0},"bjugn":{"$":0},"bodo":{"$":0},"xn--bod-2na":{"$":0},"badaddja":{"$":0},"xn--bdddj-mrabd":{"$":0},"budejju":{"$":0},"bokn":{"$":0},"bremanger":{"$":0},"bronnoy":{"$":0},"xn--brnny-wuac":{"$":0},"bygland":{"$":0},"bykle":{"$":0},"barum":{"$":0},"xn--brum-voa":{"$":0},"telemark":{"bo":{"$":0},"xn--b-5ga":{"$":0}},"nordland":{"bo":{"$":0},"xn--b-5ga":{"$":0},"heroy":{"$":0},"xn--hery-ira":{"$":0}},"bievat":{"$":0},"xn--bievt-0qa":{"$":0},"bomlo":{"$":0},"xn--bmlo-gra":{"$":0},"batsfjord":{"$":0},"xn--btsfjord-9za":{"$":0},"bahcavuotna":{"$":0},"xn--bhcavuotna-s4a":{"$":0},"dovre":{"$":0},"drammen":{"$":0},"drangedal":{"$":0},"dyroy":{"$":0},"xn--dyry-ira":{"$":0},"donna":{"$":0},"xn--dnna-gra":{"$":0},"eid":{"$":0},"eidfjord":{"$":0},"eidsberg":{"$":0},"eidskog":{"$":0},"eidsvoll":{"$":0},"eigersund":{"$":0},"elverum":{"$":0},"enebakk":{"$":0},"engerdal":{"$":0},"etne":{"$":0},"etnedal":{"$":0},"evenes":{"$":0},"evenassi":{"$":0},"xn--eveni-0qa01ga":{"$":0},"evje-og-hornnes":{"$":0},"farsund":{"$":0},"fauske":{"$":0},"fuossko":{"$":0},"fuoisku":{"$":0},"fedje":{"$":0},"fet":{"$":0},"finnoy":{"$":0},"xn--finny-yua":{"$":0},"fitjar":{"$":0},"fjaler":{"$":0},"fjell":{"$":0},"flakstad":{"$":0},"flatanger":{"$":0},"flekkefjord":{"$":0},"flesberg":{"$":0},"flora":{"$":0},"fla":{"$":0},"xn--fl-zia":{"$":0},"folldal":{"$":0},"forsand":{"$":0},"fosnes":{"$":0},"frei":{"$":0},"frogn":{"$":0},"froland":{"$":0},"frosta":{"$":0},"frana":{"$":0},"xn--frna-woa":{"$":0},"froya":{"$":0},"xn--frya-hra":{"$":0},"fusa":{"$":0},"fyresdal":{"$":0},"forde":{"$":0},"xn--frde-gra":{"$":0},"gamvik":{"$":0},"gangaviika":{"$":0},"xn--ggaviika-8ya47h":{"$":0},"gaular":{"$":0},"gausdal":{"$":0},"gildeskal":{"$":0},"xn--gildeskl-g0a":{"$":0},"giske":{"$":0},"gjemnes":{"$":0},"gjerdrum":{"$":0},"gjerstad":{"$":0},"gjesdal":{"$":0},"gjovik":{"$":0},"xn--gjvik-wua":{"$":0},"gloppen":{"$":0},"gol":{"$":0},"gran":{"$":0},"grane":{"$":0},"granvin":{"$":0},"gratangen":{"$":0},"grimstad":{"$":0},"grong":{"$":0},"kraanghke":{"$":0},"xn--kranghke-b0a":{"$":0},"grue":{"$":0},"gulen":{"$":0},"hadsel":{"$":0},"halden":{"$":0},"halsa":{"$":0},"hamar":{"$":0},"hamaroy":{"$":0},"habmer":{"$":0},"xn--hbmer-xqa":{"$":0},"hapmir":{"$":0},"xn--hpmir-xqa":{"$":0},"hammerfest":{"$":0},"hammarfeasta":{"$":0},"xn--hmmrfeasta-s4ac":{"$":0},"haram":{"$":0},"hareid":{"$":0},"harstad":{"$":0},"hasvik":{"$":0},"aknoluokta":{"$":0},"xn--koluokta-7ya57h":{"$":0},"hattfjelldal":{"$":0},"aarborte":{"$":0},"haugesund":{"$":0},"hemne":{"$":0},"hemnes":{"$":0},"hemsedal":{"$":0},"more-og-romsdal":{"heroy":{"$":0},"sande":{"$":0}},"xn--mre-og-romsdal-qqb":{"xn--hery-ira":{"$":0},"sande":{"$":0}},"hitra":{"$":0},"hjartdal":{"$":0},"hjelmeland":{"$":0},"hobol":{"$":0},"xn--hobl-ira":{"$":0},"hof":{"$":0},"hol":{"$":0},"hole":{"$":0},"holmestrand":{"$":0},"holtalen":{"$":0},"xn--holtlen-hxa":{"$":0},"hornindal":{"$":0},"horten":{"$":0},"hurdal":{"$":0},"hurum":{"$":0},"hvaler":{"$":0},"hyllestad":{"$":0},"hagebostad":{"$":0},"xn--hgebostad-g3a":{"$":0},"hoyanger":{"$":0},"xn--hyanger-q1a":{"$":0},"hoylandet":{"$":0},"xn--hylandet-54a":{"$":0},"ha":{"$":0},"xn--h-2fa":{"$":0},"ibestad":{"$":0},"inderoy":{"$":0},"xn--indery-fya":{"$":0},"iveland":{"$":0},"jevnaker":{"$":0},"jondal":{"$":0},"jolster":{"$":0},"xn--jlster-bya":{"$":0},"karasjok":{"$":0},"karasjohka":{"$":0},"xn--krjohka-hwab49j":{"$":0},"karlsoy":{"$":0},"galsa":{"$":0},"xn--gls-elac":{"$":0},"karmoy":{"$":0},"xn--karmy-yua":{"$":0},"kautokeino":{"$":0},"guovdageaidnu":{"$":0},"klepp":{"$":0},"klabu":{"$":0},"xn--klbu-woa":{"$":0},"kongsberg":{"$":0},"kongsvinger":{"$":0},"kragero":{"$":0},"xn--krager-gya":{"$":0},"kristiansand":{"$":0},"kristiansund":{"$":0},"krodsherad":{"$":0},"xn--krdsherad-m8a":{"$":0},"kvalsund":{"$":0},"rahkkeravju":{"$":0},"xn--rhkkervju-01af":{"$":0},"kvam":{"$":0},"kvinesdal":{"$":0},"kvinnherad":{"$":0},"kviteseid":{"$":0},"kvitsoy":{"$":0},"xn--kvitsy-fya":{"$":0},"kvafjord":{"$":0},"xn--kvfjord-nxa":{"$":0},"giehtavuoatna":{"$":0},"kvanangen":{"$":0},"xn--kvnangen-k0a":{"$":0},"navuotna":{"$":0},"xn--nvuotna-hwa":{"$":0},"kafjord":{"$":0},"xn--kfjord-iua":{"$":0},"gaivuotna":{"$":0},"xn--givuotna-8ya":{"$":0},"larvik":{"$":0},"lavangen":{"$":0},"lavagis":{"$":0},"loabat":{"$":0},"xn--loabt-0qa":{"$":0},"lebesby":{"$":0},"davvesiida":{"$":0},"leikanger":{"$":0},"leirfjord":{"$":0},"leka":{"$":0},"leksvik":{"$":0},"lenvik":{"$":0},"leangaviika":{"$":0},"xn--leagaviika-52b":{"$":0},"lesja":{"$":0},"levanger":{"$":0},"lier":{"$":0},"lierne":{"$":0},"lillehammer":{"$":0},"lillesand":{"$":0},"lindesnes":{"$":0},"lindas":{"$":0},"xn--linds-pra":{"$":0},"lom":{"$":0},"loppa":{"$":0},"lahppi":{"$":0},"xn--lhppi-xqa":{"$":0},"lund":{"$":0},"lunner":{"$":0},"luroy":{"$":0},"xn--lury-ira":{"$":0},"luster":{"$":0},"lyngdal":{"$":0},"lyngen":{"$":0},"ivgu":{"$":0},"lardal":{"$":0},"lerdal":{"$":0},"xn--lrdal-sra":{"$":0},"lodingen":{"$":0},"xn--ldingen-q1a":{"$":0},"lorenskog":{"$":0},"xn--lrenskog-54a":{"$":0},"loten":{"$":0},"xn--lten-gra":{"$":0},"malvik":{"$":0},"masoy":{"$":0},"xn--msy-ula0h":{"$":0},"muosat":{"$":0},"xn--muost-0qa":{"$":0},"mandal":{"$":0},"marker":{"$":0},"marnardal":{"$":0},"masfjorden":{"$":0},"meland":{"$":0},"meldal":{"$":0},"melhus":{"$":0},"meloy":{"$":0},"xn--mely-ira":{"$":0},"meraker":{"$":0},"xn--merker-kua":{"$":0},"moareke":{"$":0},"xn--moreke-jua":{"$":0},"midsund":{"$":0},"midtre-gauldal":{"$":0},"modalen":{"$":0},"modum":{"$":0},"molde":{"$":0},"moskenes":{"$":0},"moss":{"$":0},"mosvik":{"$":0},"malselv":{"$":0},"xn--mlselv-iua":{"$":0},"malatvuopmi":{"$":0},"xn--mlatvuopmi-s4a":{"$":0},"namdalseid":{"$":0},"aejrie":{"$":0},"namsos":{"$":0},"namsskogan":{"$":0},"naamesjevuemie":{"$":0},"xn--nmesjevuemie-tcba":{"$":0},"laakesvuemie":{"$":0},"nannestad":{"$":0},"narvik":{"$":0},"narviika":{"$":0},"naustdal":{"$":0},"nedre-eiker":{"$":0},"akershus":{"nes":{"$":0}},"buskerud":{"nes":{"$":0}},"nesna":{"$":0},"nesodden":{"$":0},"nesseby":{"$":0},"unjarga":{"$":0},"xn--unjrga-rta":{"$":0},"nesset":{"$":0},"nissedal":{"$":0},"nittedal":{"$":0},"nord-aurdal":{"$":0},"nord-fron":{"$":0},"nord-odal":{"$":0},"norddal":{"$":0},"nordkapp":{"$":0},"davvenjarga":{"$":0},"xn--davvenjrga-y4a":{"$":0},"nordre-land":{"$":0},"nordreisa":{"$":0},"raisa":{"$":0},"xn--risa-5na":{"$":0},"nore-og-uvdal":{"$":0},"notodden":{"$":0},"naroy":{"$":0},"xn--nry-yla5g":{"$":0},"notteroy":{"$":0},"xn--nttery-byae":{"$":0},"odda":{"$":0},"oksnes":{"$":0},"xn--ksnes-uua":{"$":0},"oppdal":{"$":0},"oppegard":{"$":0},"xn--oppegrd-ixa":{"$":0},"orkdal":{"$":0},"orland":{"$":0},"xn--rland-uua":{"$":0},"orskog":{"$":0},"xn--rskog-uua":{"$":0},"orsta":{"$":0},"xn--rsta-fra":{"$":0},"hedmark":{"os":{"$":0},"valer":{"$":0},"xn--vler-qoa":{"$":0}},"hordaland":{"os":{"$":0}},"osen":{"$":0},"osteroy":{"$":0},"xn--ostery-fya":{"$":0},"ostre-toten":{"$":0},"xn--stre-toten-zcb":{"$":0},"overhalla":{"$":0},"ovre-eiker":{"$":0},"xn--vre-eiker-k8a":{"$":0},"oyer":{"$":0},"xn--yer-zna":{"$":0},"oygarden":{"$":0},"xn--ygarden-p1a":{"$":0},"oystre-slidre":{"$":0},"xn--ystre-slidre-ujb":{"$":0},"porsanger":{"$":0},"porsangu":{"$":0},"xn--porsgu-sta26f":{"$":0},"porsgrunn":{"$":0},"radoy":{"$":0},"xn--rady-ira":{"$":0},"rakkestad":{"$":0},"rana":{"$":0},"ruovat":{"$":0},"randaberg":{"$":0},"rauma":{"$":0},"rendalen":{"$":0},"rennebu":{"$":0},"rennesoy":{"$":0},"xn--rennesy-v1a":{"$":0},"rindal":{"$":0},"ringebu":{"$":0},"ringerike":{"$":0},"ringsaker":{"$":0},"rissa":{"$":0},"risor":{"$":0},"xn--risr-ira":{"$":0},"roan":{"$":0},"rollag":{"$":0},"rygge":{"$":0},"ralingen":{"$":0},"xn--rlingen-mxa":{"$":0},"rodoy":{"$":0},"xn--rdy-0nab":{"$":0},"romskog":{"$":0},"xn--rmskog-bya":{"$":0},"roros":{"$":0},"xn--rros-gra":{"$":0},"rost":{"$":0},"xn--rst-0na":{"$":0},"royken":{"$":0},"xn--ryken-vua":{"$":0},"royrvik":{"$":0},"xn--ryrvik-bya":{"$":0},"rade":{"$":0},"xn--rde-ula":{"$":0},"salangen":{"$":0},"siellak":{"$":0},"saltdal":{"$":0},"salat":{"$":0},"xn--slt-elab":{"$":0},"xn--slat-5na":{"$":0},"samnanger":{"$":0},"vestfold":{"sande":{"$":0}},"sandefjord":{"$":0},"sandnes":{"$":0},"sandoy":{"$":0},"xn--sandy-yua":{"$":0},"sarpsborg":{"$":0},"sauda":{"$":0},"sauherad":{"$":0},"sel":{"$":0},"selbu":{"$":0},"selje":{"$":0},"seljord":{"$":0},"sigdal":{"$":0},"siljan":{"$":0},"sirdal":{"$":0},"skaun":{"$":0},"skedsmo":{"$":0},"ski":{"$":0},"skien":{"$":0},"skiptvet":{"$":0},"skjervoy":{"$":0},"xn--skjervy-v1a":{"$":0},"skierva":{"$":0},"xn--skierv-uta":{"$":0},"skjak":{"$":0},"xn--skjk-soa":{"$":0},"skodje":{"$":0},"skanland":{"$":0},"xn--sknland-fxa":{"$":0},"skanit":{"$":0},"xn--sknit-yqa":{"$":0},"smola":{"$":0},"xn--smla-hra":{"$":0},"snillfjord":{"$":0},"snasa":{"$":0},"xn--snsa-roa":{"$":0},"snoasa":{"$":0},"snaase":{"$":0},"xn--snase-nra":{"$":0},"sogndal":{"$":0},"sokndal":{"$":0},"sola":{"$":0},"solund":{"$":0},"songdalen":{"$":0},"sortland":{"$":0},"spydeberg":{"$":0},"stange":{"$":0},"stavanger":{"$":0},"steigen":{"$":0},"steinkjer":{"$":0},"stjordal":{"$":0},"xn--stjrdal-s1a":{"$":0},"stokke":{"$":0},"stor-elvdal":{"$":0},"stord":{"$":0},"stordal":{"$":0},"storfjord":{"$":0},"omasvuotna":{"$":0},"strand":{"$":0},"stranda":{"$":0},"stryn":{"$":0},"sula":{"$":0},"suldal":{"$":0},"sund":{"$":0},"sunndal":{"$":0},"surnadal":{"$":0},"sveio":{"$":0},"svelvik":{"$":0},"sykkylven":{"$":0},"sogne":{"$":0},"xn--sgne-gra":{"$":0},"somna":{"$":0},"xn--smna-gra":{"$":0},"sondre-land":{"$":0},"xn--sndre-land-0cb":{"$":0},"sor-aurdal":{"$":0},"xn--sr-aurdal-l8a":{"$":0},"sor-fron":{"$":0},"xn--sr-fron-q1a":{"$":0},"sor-odal":{"$":0},"xn--sr-odal-q1a":{"$":0},"sor-varanger":{"$":0},"xn--sr-varanger-ggb":{"$":0},"matta-varjjat":{"$":0},"xn--mtta-vrjjat-k7af":{"$":0},"sorfold":{"$":0},"xn--srfold-bya":{"$":0},"sorreisa":{"$":0},"xn--srreisa-q1a":{"$":0},"sorum":{"$":0},"xn--srum-gra":{"$":0},"tana":{"$":0},"deatnu":{"$":0},"time":{"$":0},"tingvoll":{"$":0},"tinn":{"$":0},"tjeldsund":{"$":0},"dielddanuorri":{"$":0},"tjome":{"$":0},"xn--tjme-hra":{"$":0},"tokke":{"$":0},"tolga":{"$":0},"torsken":{"$":0},"tranoy":{"$":0},"xn--trany-yua":{"$":0},"tromso":{"$":0},"xn--troms-zua":{"$":0},"tromsa":{"$":0},"romsa":{"$":0},"trondheim":{"$":0},"troandin":{"$":0},"trysil":{"$":0},"trana":{"$":0},"xn--trna-woa":{"$":0},"trogstad":{"$":0},"xn--trgstad-r1a":{"$":0},"tvedestrand":{"$":0},"tydal":{"$":0},"tynset":{"$":0},"tysfjord":{"$":0},"divtasvuodna":{"$":0},"divttasvuotna":{"$":0},"tysnes":{"$":0},"tysvar":{"$":0},"xn--tysvr-vra":{"$":0},"tonsberg":{"$":0},"xn--tnsberg-q1a":{"$":0},"ullensaker":{"$":0},"ullensvang":{"$":0},"ulvik":{"$":0},"utsira":{"$":0},"vadso":{"$":0},"xn--vads-jra":{"$":0},"cahcesuolo":{"$":0},"xn--hcesuolo-7ya35b":{"$":0},"vaksdal":{"$":0},"valle":{"$":0},"vang":{"$":0},"vanylven":{"$":0},"vardo":{"$":0},"xn--vard-jra":{"$":0},"varggat":{"$":0},"xn--vrggt-xqad":{"$":0},"vefsn":{"$":0},"vaapste":{"$":0},"vega":{"$":0},"vegarshei":{"$":0},"xn--vegrshei-c0a":{"$":0},"vennesla":{"$":0},"verdal":{"$":0},"verran":{"$":0},"vestby":{"$":0},"vestnes":{"$":0},"vestre-slidre":{"$":0},"vestre-toten":{"$":0},"vestvagoy":{"$":0},"xn--vestvgy-ixa6o":{"$":0},"vevelstad":{"$":0},"vik":{"$":0},"vikna":{"$":0},"vindafjord":{"$":0},"volda":{"$":0},"voss":{"$":0},"varoy":{"$":0},"xn--vry-yla5g":{"$":0},"vagan":{"$":0},"xn--vgan-qoa":{"$":0},"voagat":{"$":0},"vagsoy":{"$":0},"xn--vgsy-qoa0j":{"$":0},"vaga":{"$":0},"xn--vg-yiab":{"$":0},"ostfold":{"valer":{"$":0}},"xn--stfold-9xa":{"xn--vler-qoa":{"$":0}},"co":{"$":0},"blogspot":{"$":0}},"np":{"*":{"$":0}},"nr":{"$":0,"biz":{"$":0},"info":{"$":0},"gov":{"$":0},"edu":{"$":0},"org":{"$":0},"net":{"$":0},"com":{"$":0}},"nu":{"$":0,"merseine":{"$":0},"mine":{"$":0},"shacknet":{"$":0},"nom":{"$":0}},"nz":{"$":0,"ac":{"$":0},"co":{"$":0,"blogspot":{"$":0}},"cri":{"$":0},"geek":{"$":0},"gen":{"$":0},"govt":{"$":0},"health":{"$":0},"iwi":{"$":0},"kiwi":{"$":0},"maori":{"$":0},"mil":{"$":0},"xn--mori-qsa":{"$":0},"net":{"$":0},"org":{"$":0},"parliament":{"$":0},"school":{"$":0},"nym":{"$":0}},"om":{"$":0,"co":{"$":0},"com":{"$":0},"edu":{"$":0},"gov":{"$":0},"med":{"$":0},"museum":{"$":0},"net":{"$":0},"org":{"$":0},"pro":{"$":0}},"onion":{"$":0},"org":{"$":0,"amune":{"tele":{"$":0}},"pimienta":{"$":0},"poivron":{"$":0},"potager":{"$":0},"sweetpepper":{"$":0},"ae":{"$":0},"us":{"$":0},"certmgr":{"$":0},"cdn77":{"c":{"$":0},"rsc":{"$":0}},"cdn77-secure":{"origin":{"ssl":{"$":0}}},"cloudns":{"$":0},"duckdns":{"$":0},"tunk":{"$":0},"dyndns":{"$":0,"go":{"$":0},"home":{"$":0}},"blogdns":{"$":0},"blogsite":{"$":0},"boldlygoingnowhere":{"$":0},"dnsalias":{"$":0},"dnsdojo":{"$":0},"doesntexist":{"$":0},"dontexist":{"$":0},"doomdns":{"$":0},"dvrdns":{"$":0},"dynalias":{"$":0},"endofinternet":{"$":0},"endoftheinternet":{"$":0},"from-me":{"$":0},"game-host":{"$":0},"gotdns":{"$":0},"hobby-site":{"$":0},"homedns":{"$":0},"homeftp":{"$":0},"homelinux":{"$":0},"homeunix":{"$":0},"is-a-bruinsfan":{"$":0},"is-a-candidate":{"$":0},"is-a-celticsfan":{"$":0},"is-a-chef":{"$":0},"is-a-geek":{"$":0},"is-a-knight":{"$":0},"is-a-linux-user":{"$":0},"is-a-patsfan":{"$":0},"is-a-soxfan":{"$":0},"is-found":{"$":0},"is-lost":{"$":0},"is-saved":{"$":0},"is-very-bad":{"$":0},"is-very-evil":{"$":0},"is-very-good":{"$":0},"is-very-nice":{"$":0},"is-very-sweet":{"$":0},"isa-geek":{"$":0},"kicks-ass":{"$":0},"misconfused":{"$":0},"podzone":{"$":0},"readmyblog":{"$":0},"selfip":{"$":0},"sellsyourhome":{"$":0},"servebbs":{"$":0},"serveftp":{"$":0},"servegame":{"$":0},"stuff-4-sale":{"$":0},"webhop":{"$":0},"ddnss":{"$":0},"accesscam":{"$":0},"camdvr":{"$":0},"freeddns":{"$":0},"mywire":{"$":0},"webredirect":{"$":0},"eu":{"$":0,"al":{"$":0},"asso":{"$":0},"at":{"$":0},"au":{"$":0},"be":{"$":0},"bg":{"$":0},"ca":{"$":0},"cd":{"$":0},"ch":{"$":0},"cn":{"$":0},"cy":{"$":0},"cz":{"$":0},"de":{"$":0},"dk":{"$":0},"edu":{"$":0},"ee":{"$":0},"es":{"$":0},"fi":{"$":0},"fr":{"$":0},"gr":{"$":0},"hr":{"$":0},"hu":{"$":0},"ie":{"$":0},"il":{"$":0},"in":{"$":0},"int":{"$":0},"is":{"$":0},"it":{"$":0},"jp":{"$":0},"kr":{"$":0},"lt":{"$":0},"lu":{"$":0},"lv":{"$":0},"mc":{"$":0},"me":{"$":0},"mk":{"$":0},"mt":{"$":0},"my":{"$":0},"net":{"$":0},"ng":{"$":0},"nl":{"$":0},"no":{"$":0},"nz":{"$":0},"paris":{"$":0},"pl":{"$":0},"pt":{"$":0},"q-a":{"$":0},"ro":{"$":0},"ru":{"$":0},"se":{"$":0},"si":{"$":0},"sk":{"$":0},"tr":{"$":0},"uk":{"$":0},"us":{"$":0}},"twmail":{"$":0},"fedorainfracloud":{"$":0},"fedorapeople":{"$":0},"fedoraproject":{"cloud":{"$":0},"os":{"app":{"$":0}},"stg":{"os":{"app":{"$":0}}}},"hepforge":{"$":0},"js":{"$":0},"bmoattachments":{"$":0},"cable-modem":{"$":0},"collegefan":{"$":0},"couchpotatofries":{"$":0},"mlbfan":{"$":0},"mysecuritycamera":{"$":0},"nflfan":{"$":0},"read-books":{"$":0},"ufcfan":{"$":0},"hopto":{"$":0},"myftp":{"$":0},"no-ip":{"$":0},"zapto":{"$":0},"my-firewall":{"$":0},"myfirewall":{"$":0},"spdns":{"$":0},"dsmynas":{"$":0},"familyds":{"$":0},"tuxfamily":{"$":0},"diskstation":{"$":0},"hk":{"$":0},"wmflabs":{"$":0},"za":{"$":0}},"pa":{"$":0,"ac":{"$":0},"gob":{"$":0},"com":{"$":0},"org":{"$":0},"sld":{"$":0},"edu":{"$":0},"net":{"$":0},"ing":{"$":0},"abo":{"$":0},"med":{"$":0},"nom":{"$":0}},"pe":{"$":0,"edu":{"$":0},"gob":{"$":0},"nom":{"$":0},"mil":{"$":0},"org":{"$":0},"com":{"$":0},"net":{"$":0},"blogspot":{"$":0},"nym":{"$":0}},"pf":{"$":0,"com":{"$":0},"org":{"$":0},"edu":{"$":0}},"pg":{"*":{"$":0}},"ph":{"$":0,"com":{"$":0},"net":{"$":0},"org":{"$":0},"gov":{"$":0},"edu":{"$":0},"ngo":{"$":0},"mil":{"$":0},"i":{"$":0}},"pk":{"$":0,"com":{"$":0},"net":{"$":0},"edu":{"$":0},"org":{"$":0},"fam":{"$":0},"biz":{"$":0},"web":{"$":0},"gov":{"$":0},"gob":{"$":0},"gok":{"$":0},"gon":{"$":0},"gop":{"$":0},"gos":{"$":0},"info":{"$":0}},"pl":{"$":0,"com":{"$":0},"net":{"$":0},"org":{"$":0},"aid":{"$":0},"agro":{"$":0},"atm":{"$":0},"auto":{"$":0},"biz":{"$":0},"edu":{"$":0},"gmina":{"$":0},"gsm":{"$":0},"info":{"$":0},"mail":{"$":0},"miasta":{"$":0},"media":{"$":0},"mil":{"$":0},"nieruchomosci":{"$":0},"nom":{"$":0},"pc":{"$":0},"powiat":{"$":0},"priv":{"$":0},"realestate":{"$":0},"rel":{"$":0},"sex":{"$":0},"shop":{"$":0},"sklep":{"$":0},"sos":{"$":0},"szkola":{"$":0},"targi":{"$":0},"tm":{"$":0},"tourism":{"$":0},"travel":{"$":0},"turystyka":{"$":0},"gov":{"$":0,"ap":{"$":0},"ic":{"$":0},"is":{"$":0},"us":{"$":0},"kmpsp":{"$":0},"kppsp":{"$":0},"kwpsp":{"$":0},"psp":{"$":0},"wskr":{"$":0},"kwp":{"$":0},"mw":{"$":0},"ug":{"$":0},"um":{"$":0},"umig":{"$":0},"ugim":{"$":0},"upow":{"$":0},"uw":{"$":0},"starostwo":{"$":0},"pa":{"$":0},"po":{"$":0},"psse":{"$":0},"pup":{"$":0},"rzgw":{"$":0},"sa":{"$":0},"so":{"$":0},"sr":{"$":0},"wsa":{"$":0},"sko":{"$":0},"uzs":{"$":0},"wiih":{"$":0},"winb":{"$":0},"pinb":{"$":0},"wios":{"$":0},"witd":{"$":0},"wzmiuw":{"$":0},"piw":{"$":0},"wiw":{"$":0},"griw":{"$":0},"wif":{"$":0},"oum":{"$":0},"sdn":{"$":0},"zp":{"$":0},"uppo":{"$":0},"mup":{"$":0},"wuoz":{"$":0},"konsulat":{"$":0},"oirm":{"$":0}},"augustow":{"$":0},"babia-gora":{"$":0},"bedzin":{"$":0},"beskidy":{"$":0},"bialowieza":{"$":0},"bialystok":{"$":0},"bielawa":{"$":0},"bieszczady":{"$":0},"boleslawiec":{"$":0},"bydgoszcz":{"$":0},"bytom":{"$":0},"cieszyn":{"$":0},"czeladz":{"$":0},"czest":{"$":0},"dlugoleka":{"$":0},"elblag":{"$":0},"elk":{"$":0},"glogow":{"$":0},"gniezno":{"$":0},"gorlice":{"$":0},"grajewo":{"$":0},"ilawa":{"$":0},"jaworzno":{"$":0},"jelenia-gora":{"$":0},"jgora":{"$":0},"kalisz":{"$":0},"kazimierz-dolny":{"$":0},"karpacz":{"$":0},"kartuzy":{"$":0},"kaszuby":{"$":0},"katowice":{"$":0},"kepno":{"$":0},"ketrzyn":{"$":0},"klodzko":{"$":0},"kobierzyce":{"$":0},"kolobrzeg":{"$":0},"konin":{"$":0},"konskowola":{"$":0},"kutno":{"$":0},"lapy":{"$":0},"lebork":{"$":0},"legnica":{"$":0},"lezajsk":{"$":0},"limanowa":{"$":0},"lomza":{"$":0},"lowicz":{"$":0},"lubin":{"$":0},"lukow":{"$":0},"malbork":{"$":0},"malopolska":{"$":0},"mazowsze":{"$":0},"mazury":{"$":0},"mielec":{"$":0},"mielno":{"$":0},"mragowo":{"$":0},"naklo":{"$":0},"nowaruda":{"$":0},"nysa":{"$":0},"olawa":{"$":0},"olecko":{"$":0},"olkusz":{"$":0},"olsztyn":{"$":0},"opoczno":{"$":0},"opole":{"$":0},"ostroda":{"$":0},"ostroleka":{"$":0},"ostrowiec":{"$":0},"ostrowwlkp":{"$":0},"pila":{"$":0},"pisz":{"$":0},"podhale":{"$":0},"podlasie":{"$":0},"polkowice":{"$":0},"pomorze":{"$":0},"pomorskie":{"$":0},"prochowice":{"$":0},"pruszkow":{"$":0},"przeworsk":{"$":0},"pulawy":{"$":0},"radom":{"$":0},"rawa-maz":{"$":0},"rybnik":{"$":0},"rzeszow":{"$":0},"sanok":{"$":0},"sejny":{"$":0},"slask":{"$":0},"slupsk":{"$":0},"sosnowiec":{"$":0},"stalowa-wola":{"$":0},"skoczow":{"$":0},"starachowice":{"$":0},"stargard":{"$":0},"suwalki":{"$":0},"swidnica":{"$":0},"swiebodzin":{"$":0},"swinoujscie":{"$":0},"szczecin":{"$":0},"szczytno":{"$":0},"tarnobrzeg":{"$":0},"tgory":{"$":0},"turek":{"$":0},"tychy":{"$":0},"ustka":{"$":0},"walbrzych":{"$":0},"warmia":{"$":0},"warszawa":{"$":0},"waw":{"$":0},"wegrow":{"$":0},"wielun":{"$":0},"wlocl":{"$":0},"wloclawek":{"$":0},"wodzislaw":{"$":0},"wolomin":{"$":0},"wroclaw":{"$":0},"zachpomor":{"$":0},"zagan":{"$":0},"zarow":{"$":0},"zgora":{"$":0},"zgorzelec":{"$":0},"beep":{"$":0},"co":{"$":0},"art":{"$":0},"gliwice":{"$":0},"krakow":{"$":0},"poznan":{"$":0},"wroc":{"$":0},"zakopane":{"$":0},"gda":{"$":0},"gdansk":{"$":0},"gdynia":{"$":0},"med":{"$":0},"sopot":{"$":0}},"pm":{"$":0},"pn":{"$":0,"gov":{"$":0},"co":{"$":0},"org":{"$":0},"edu":{"$":0},"net":{"$":0}},"post":{"$":0},"pr":{"$":0,"com":{"$":0},"net":{"$":0},"org":{"$":0},"gov":{"$":0},"edu":{"$":0},"isla":{"$":0},"pro":{"$":0},"biz":{"$":0},"info":{"$":0},"name":{"$":0},"est":{"$":0},"prof":{"$":0},"ac":{"$":0}},"pro":{"$":0,"aaa":{"$":0},"aca":{"$":0},"acct":{"$":0},"avocat":{"$":0},"bar":{"$":0},"cpa":{"$":0},"eng":{"$":0},"jur":{"$":0},"law":{"$":0},"med":{"$":0},"recht":{"$":0},"cloudns":{"$":0}},"ps":{"$":0,"edu":{"$":0},"gov":{"$":0},"sec":{"$":0},"plo":{"$":0},"com":{"$":0},"org":{"$":0},"net":{"$":0}},"pt":{"$":0,"net":{"$":0},"gov":{"$":0},"org":{"$":0},"edu":{"$":0},"int":{"$":0},"publ":{"$":0},"com":{"$":0},"nome":{"$":0},"blogspot":{"$":0},"nym":{"$":0}},"pw":{"$":0,"co":{"$":0},"ne":{"$":0},"or":{"$":0},"ed":{"$":0},"go":{"$":0},"belau":{"$":0},"cloudns":{"$":0},"nom":{"$":0}},"py":{"$":0,"com":{"$":0},"coop":{"$":0},"edu":{"$":0},"gov":{"$":0},"mil":{"$":0},"net":{"$":0},"org":{"$":0}},"qa":{"$":0,"com":{"$":0},"edu":{"$":0},"gov":{"$":0},"mil":{"$":0},"name":{"$":0},"net":{"$":0},"org":{"$":0},"sch":{"$":0},"blogspot":{"$":0},"nom":{"$":0}},"re":{"$":0,"asso":{"$":0},"com":{"$":0},"nom":{"$":0},"blogspot":{"$":0}},"ro":{"$":0,"arts":{"$":0},"com":{"$":0},"firm":{"$":0},"info":{"$":0},"nom":{"$":0},"nt":{"$":0},"org":{"$":0},"rec":{"$":0},"store":{"$":0},"tm":{"$":0},"www":{"$":0},"shop":{"$":0},"blogspot":{"$":0}},"rs":{"$":0,"ac":{"$":0},"co":{"$":0},"edu":{"$":0},"gov":{"$":0},"in":{"$":0},"org":{"$":0},"blogspot":{"$":0},"nom":{"$":0}},"ru":{"$":0,"ac":{"$":0},"edu":{"$":0},"gov":{"$":0},"int":{"$":0},"mil":{"$":0},"test":{"$":0},"adygeya":{"$":0},"bashkiria":{"$":0},"bir":{"$":0},"cbg":{"$":0},"com":{"$":0},"dagestan":{"$":0},"grozny":{"$":0},"kalmykia":{"$":0},"kustanai":{"$":0},"marine":{"$":0},"mordovia":{"$":0},"msk":{"$":0},"mytis":{"$":0},"nalchik":{"$":0},"nov":{"$":0},"pyatigorsk":{"$":0},"spb":{"$":0},"vladikavkaz":{"$":0},"vladimir":{"$":0},"blogspot":{"$":0},"cldmail":{"hb":{"$":0}},"net":{"$":0},"org":{"$":0},"pp":{"$":0}},"rw":{"$":0,"gov":{"$":0},"net":{"$":0},"edu":{"$":0},"ac":{"$":0},"com":{"$":0},"co":{"$":0},"int":{"$":0},"mil":{"$":0},"gouv":{"$":0}},"sa":{"$":0,"com":{"$":0},"net":{"$":0},"org":{"$":0},"gov":{"$":0},"med":{"$":0},"pub":{"$":0},"edu":{"$":0},"sch":{"$":0}},"sb":{"$":0,"com":{"$":0},"edu":{"$":0},"gov":{"$":0},"net":{"$":0},"org":{"$":0}},"sc":{"$":0,"com":{"$":0},"gov":{"$":0},"net":{"$":0},"org":{"$":0},"edu":{"$":0}},"sd":{"$":0,"com":{"$":0},"net":{"$":0},"org":{"$":0},"edu":{"$":0},"med":{"$":0},"tv":{"$":0},"gov":{"$":0},"info":{"$":0}},"se":{"$":0,"a":{"$":0},"ac":{"$":0},"b":{"$":0},"bd":{"$":0},"brand":{"$":0},"c":{"$":0},"d":{"$":0},"e":{"$":0},"f":{"$":0},"fh":{"$":0},"fhsk":{"$":0},"fhv":{"$":0},"g":{"$":0},"h":{"$":0},"i":{"$":0},"k":{"$":0},"komforb":{"$":0},"kommunalforbund":{"$":0},"komvux":{"$":0},"l":{"$":0},"lanbib":{"$":0},"m":{"$":0},"n":{"$":0},"naturbruksgymn":{"$":0},"o":{"$":0},"org":{"$":0},"p":{"$":0},"parti":{"$":0},"pp":{"$":0},"press":{"$":0},"r":{"$":0},"s":{"$":0},"t":{"$":0},"tm":{"$":0},"u":{"$":0},"w":{"$":0},"x":{"$":0},"y":{"$":0},"z":{"$":0},"com":{"$":0},"blogspot":{"$":0}},"sg":{"$":0,"com":{"$":0},"net":{"$":0},"org":{"$":0},"gov":{"$":0},"edu":{"$":0},"per":{"$":0},"blogspot":{"$":0}},"sh":{"$":0,"com":{"$":0},"net":{"$":0},"gov":{"$":0},"org":{"$":0},"mil":{"$":0},"hashbang":{"$":0},"platform":{"*":{"$":0}},"wedeploy":{"$":0},"now":{"$":0}},"si":{"$":0,"blogspot":{"$":0},"nom":{"$":0}},"sj":{"$":0},"sk":{"$":0,"blogspot":{"$":0},"nym":{"$":0}},"sl":{"$":0,"com":{"$":0},"net":{"$":0},"edu":{"$":0},"gov":{"$":0},"org":{"$":0}},"sm":{"$":0},"sn":{"$":0,"art":{"$":0},"com":{"$":0},"edu":{"$":0},"gouv":{"$":0},"org":{"$":0},"perso":{"$":0},"univ":{"$":0},"blogspot":{"$":0}},"so":{"$":0,"com":{"$":0},"net":{"$":0},"org":{"$":0}},"sr":{"$":0},"st":{"$":0,"co":{"$":0},"com":{"$":0},"consulado":{"$":0},"edu":{"$":0},"embaixada":{"$":0},"gov":{"$":0},"mil":{"$":0},"net":{"$":0},"org":{"$":0},"principe":{"$":0},"saotome":{"$":0},"store":{"$":0}},"su":{"$":0,"abkhazia":{"$":0},"adygeya":{"$":0},"aktyubinsk":{"$":0},"arkhangelsk":{"$":0},"armenia":{"$":0},"ashgabad":{"$":0},"azerbaijan":{"$":0},"balashov":{"$":0},"bashkiria":{"$":0},"bryansk":{"$":0},"bukhara":{"$":0},"chimkent":{"$":0},"dagestan":{"$":0},"east-kazakhstan":{"$":0},"exnet":{"$":0},"georgia":{"$":0},"grozny":{"$":0},"ivanovo":{"$":0},"jambyl":{"$":0},"kalmykia":{"$":0},"kaluga":{"$":0},"karacol":{"$":0},"karaganda":{"$":0},"karelia":{"$":0},"khakassia":{"$":0},"krasnodar":{"$":0},"kurgan":{"$":0},"kustanai":{"$":0},"lenug":{"$":0},"mangyshlak":{"$":0},"mordovia":{"$":0},"msk":{"$":0},"murmansk":{"$":0},"nalchik":{"$":0},"navoi":{"$":0},"north-kazakhstan":{"$":0},"nov":{"$":0},"obninsk":{"$":0},"penza":{"$":0},"pokrovsk":{"$":0},"sochi":{"$":0},"spb":{"$":0},"tashkent":{"$":0},"termez":{"$":0},"togliatti":{"$":0},"troitsk":{"$":0},"tselinograd":{"$":0},"tula":{"$":0},"tuva":{"$":0},"vladikavkaz":{"$":0},"vladimir":{"$":0},"vologda":{"$":0},"nym":{"$":0}},"sv":{"$":0,"com":{"$":0},"edu":{"$":0},"gob":{"$":0},"org":{"$":0},"red":{"$":0}},"sx":{"$":0,"gov":{"$":0},"nym":{"$":0}},"sy":{"$":0,"edu":{"$":0},"gov":{"$":0},"net":{"$":0},"mil":{"$":0},"com":{"$":0},"org":{"$":0}},"sz":{"$":0,"co":{"$":0},"ac":{"$":0},"org":{"$":0}},"tc":{"$":0},"td":{"$":0,"blogspot":{"$":0}},"tel":{"$":0},"tf":{"$":0},"tg":{"$":0},"th":{"$":0,"ac":{"$":0},"co":{"$":0},"go":{"$":0},"in":{"$":0},"mi":{"$":0},"net":{"$":0},"or":{"$":0}},"tj":{"$":0,"ac":{"$":0},"biz":{"$":0},"co":{"$":0},"com":{"$":0},"edu":{"$":0},"go":{"$":0},"gov":{"$":0},"int":{"$":0},"mil":{"$":0},"name":{"$":0},"net":{"$":0},"nic":{"$":0},"org":{"$":0},"test":{"$":0},"web":{"$":0}},"tk":{"$":0},"tl":{"$":0,"gov":{"$":0}},"tm":{"$":0,"com":{"$":0},"co":{"$":0},"org":{"$":0},"net":{"$":0},"nom":{"$":0},"gov":{"$":0},"mil":{"$":0},"edu":{"$":0}},"tn":{"$":0,"com":{"$":0},"ens":{"$":0},"fin":{"$":0},"gov":{"$":0},"ind":{"$":0},"intl":{"$":0},"nat":{"$":0},"net":{"$":0},"org":{"$":0},"info":{"$":0},"perso":{"$":0},"tourism":{"$":0},"edunet":{"$":0},"rnrt":{"$":0},"rns":{"$":0},"rnu":{"$":0},"mincom":{"$":0},"agrinet":{"$":0},"defense":{"$":0},"turen":{"$":0}},"to":{"$":0,"com":{"$":0},"gov":{"$":0},"net":{"$":0},"org":{"$":0},"edu":{"$":0},"mil":{"$":0},"vpnplus":{"$":0}},"tr":{"$":0,"com":{"$":0,"blogspot":{"$":0}},"info":{"$":0},"biz":{"$":0},"net":{"$":0},"org":{"$":0},"web":{"$":0},"gen":{"$":0},"tv":{"$":0},"av":{"$":0},"dr":{"$":0},"bbs":{"$":0},"name":{"$":0},"tel":{"$":0},"gov":{"$":0},"bel":{"$":0},"pol":{"$":0},"mil":{"$":0},"k12":{"$":0},"edu":{"$":0},"kep":{"$":0},"nc":{"$":0,"gov":{"$":0}}},"travel":{"$":0},"tt":{"$":0,"co":{"$":0},"com":{"$":0},"org":{"$":0},"net":{"$":0},"biz":{"$":0},"info":{"$":0},"pro":{"$":0},"int":{"$":0},"coop":{"$":0},"jobs":{"$":0},"mobi":{"$":0},"travel":{"$":0},"museum":{"$":0},"aero":{"$":0},"name":{"$":0},"gov":{"$":0},"edu":{"$":0}},"tv":{"$":0,"dyndns":{"$":0},"better-than":{"$":0},"on-the-web":{"$":0},"worse-than":{"$":0}},"tw":{"$":0,"edu":{"$":0},"gov":{"$":0},"mil":{"$":0},"com":{"$":0,"mymailer":{"$":0}},"net":{"$":0},"org":{"$":0},"idv":{"$":0},"game":{"$":0},"ebiz":{"$":0},"club":{"$":0},"xn--zf0ao64a":{"$":0},"xn--uc0atv":{"$":0},"xn--czrw28b":{"$":0},"url":{"$":0},"blogspot":{"$":0},"nym":{"$":0}},"tz":{"$":0,"ac":{"$":0},"co":{"$":0},"go":{"$":0},"hotel":{"$":0},"info":{"$":0},"me":{"$":0},"mil":{"$":0},"mobi":{"$":0},"ne":{"$":0},"or":{"$":0},"sc":{"$":0},"tv":{"$":0}},"ua":{"$":0,"com":{"$":0},"edu":{"$":0},"gov":{"$":0},"in":{"$":0},"net":{"$":0},"org":{"$":0},"cherkassy":{"$":0},"cherkasy":{"$":0},"chernigov":{"$":0},"chernihiv":{"$":0},"chernivtsi":{"$":0},"chernovtsy":{"$":0},"ck":{"$":0},"cn":{"$":0},"cr":{"$":0},"crimea":{"$":0},"cv":{"$":0},"dn":{"$":0},"dnepropetrovsk":{"$":0},"dnipropetrovsk":{"$":0},"dominic":{"$":0},"donetsk":{"$":0},"dp":{"$":0},"if":{"$":0},"ivano-frankivsk":{"$":0},"kh":{"$":0},"kharkiv":{"$":0},"kharkov":{"$":0},"kherson":{"$":0},"khmelnitskiy":{"$":0},"khmelnytskyi":{"$":0},"kiev":{"$":0},"kirovograd":{"$":0},"km":{"$":0},"kr":{"$":0},"krym":{"$":0},"ks":{"$":0},"kv":{"$":0},"kyiv":{"$":0},"lg":{"$":0},"lt":{"$":0},"lugansk":{"$":0},"lutsk":{"$":0},"lv":{"$":0},"lviv":{"$":0},"mk":{"$":0},"mykolaiv":{"$":0},"nikolaev":{"$":0},"od":{"$":0},"odesa":{"$":0},"odessa":{"$":0},"pl":{"$":0},"poltava":{"$":0},"rivne":{"$":0},"rovno":{"$":0},"rv":{"$":0},"sb":{"$":0},"sebastopol":{"$":0},"sevastopol":{"$":0},"sm":{"$":0},"sumy":{"$":0},"te":{"$":0},"ternopil":{"$":0},"uz":{"$":0},"uzhgorod":{"$":0},"vinnica":{"$":0},"vinnytsia":{"$":0},"vn":{"$":0},"volyn":{"$":0},"yalta":{"$":0},"zaporizhzhe":{"$":0},"zaporizhzhia":{"$":0},"zhitomir":{"$":0},"zhytomyr":{"$":0},"zp":{"$":0},"zt":{"$":0},"cc":{"$":0},"inf":{"$":0},"ltd":{"$":0},"biz":{"$":0},"co":{"$":0},"pp":{"$":0}},"ug":{"$":0,"co":{"$":0},"or":{"$":0},"ac":{"$":0},"sc":{"$":0},"go":{"$":0},"ne":{"$":0},"com":{"$":0},"org":{"$":0},"blogspot":{"$":0},"nom":{"$":0}},"uk":{"$":0,"ac":{"$":0},"co":{"$":0,"blogspot":{"$":0},"nh-serv":{"$":0},"no-ip":{"$":0},"wellbeingzone":{"$":0}},"gov":{"$":0,"service":{"$":0},"homeoffice":{"$":0}},"ltd":{"$":0},"me":{"$":0},"net":{"$":0},"nhs":{"$":0},"org":{"$":0},"plc":{"$":0},"police":{"$":0},"sch":{"*":{"$":0}}},"us":{"$":0,"dni":{"$":0},"fed":{"$":0},"isa":{"$":0},"kids":{"$":0},"nsn":{"$":0},"ak":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"al":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"ar":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"as":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"az":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"ca":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"co":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"ct":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"dc":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"de":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"fl":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"ga":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"gu":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"hi":{"$":0,"cc":{"$":0},"lib":{"$":0}},"ia":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"id":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"il":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"in":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"ks":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"ky":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"la":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"ma":{"$":0,"k12":{"$":0,"pvt":{"$":0},"chtr":{"$":0},"paroch":{"$":0}},"cc":{"$":0},"lib":{"$":0}},"md":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"me":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"mi":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0},"ann-arbor":{"$":0},"cog":{"$":0},"dst":{"$":0},"eaton":{"$":0},"gen":{"$":0},"mus":{"$":0},"tec":{"$":0},"washtenaw":{"$":0}},"mn":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"mo":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"ms":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"mt":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"nc":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"nd":{"$":0,"cc":{"$":0},"lib":{"$":0}},"ne":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"nh":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"nj":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"nm":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"nv":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"ny":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"oh":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"ok":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"or":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"pa":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"pr":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"ri":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"sc":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"sd":{"$":0,"cc":{"$":0},"lib":{"$":0}},"tn":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"tx":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"ut":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"vi":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"vt":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"va":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"wa":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"wi":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"wv":{"$":0,"cc":{"$":0}},"wy":{"$":0,"k12":{"$":0},"cc":{"$":0},"lib":{"$":0}},"cloudns":{"$":0},"drud":{"$":0},"is-by":{"$":0},"land-4-sale":{"$":0},"stuff-4-sale":{"$":0},"golffan":{"$":0},"noip":{"$":0},"pointto":{"$":0}},"uy":{"$":0,"com":{"$":0,"blogspot":{"$":0}},"edu":{"$":0},"gub":{"$":0},"mil":{"$":0},"net":{"$":0},"org":{"$":0},"nom":{"$":0}},"uz":{"$":0,"co":{"$":0},"com":{"$":0},"net":{"$":0},"org":{"$":0}},"va":{"$":0},"vc":{"$":0,"com":{"$":0},"net":{"$":0},"org":{"$":0},"gov":{"$":0},"mil":{"$":0},"edu":{"$":0},"nom":{"$":0}},"ve":{"$":0,"arts":{"$":0},"co":{"$":0},"com":{"$":0},"e12":{"$":0},"edu":{"$":0},"firm":{"$":0},"gob":{"$":0},"gov":{"$":0},"info":{"$":0},"int":{"$":0},"mil":{"$":0},"net":{"$":0},"org":{"$":0},"rec":{"$":0},"store":{"$":0},"tec":{"$":0},"web":{"$":0}},"vg":{"$":0,"nom":{"$":0}},"vi":{"$":0,"co":{"$":0},"com":{"$":0},"k12":{"$":0},"net":{"$":0},"org":{"$":0}},"vn":{"$":0,"com":{"$":0},"net":{"$":0},"org":{"$":0},"edu":{"$":0},"gov":{"$":0},"int":{"$":0},"ac":{"$":0},"biz":{"$":0},"info":{"$":0},"name":{"$":0},"pro":{"$":0},"health":{"$":0},"blogspot":{"$":0}},"vu":{"$":0,"com":{"$":0},"edu":{"$":0},"net":{"$":0},"org":{"$":0}},"wf":{"$":0},"ws":{"$":0,"com":{"$":0},"net":{"$":0},"org":{"$":0},"gov":{"$":0},"edu":{"$":0},"advisor":{"*":{"$":0}},"dyndns":{"$":0},"mypets":{"$":0}},"yt":{"$":0},"xn--mgbaam7a8h":{"$":0},"xn--y9a3aq":{"$":0},"xn--54b7fta0cc":{"$":0},"xn--90ae":{"$":0},"xn--90ais":{"$":0},"xn--fiqs8s":{"$":0},"xn--fiqz9s":{"$":0},"xn--lgbbat1ad8j":{"$":0},"xn--wgbh1c":{"$":0},"xn--e1a4c":{"$":0},"xn--node":{"$":0},"xn--qxam":{"$":0},"xn--j6w193g":{"$":0},"xn--2scrj9c":{"$":0},"xn--3hcrj9c":{"$":0},"xn--45br5cyl":{"$":0},"xn--h2breg3eve":{"$":0},"xn--h2brj9c8c":{"$":0},"xn--mgbgu82a":{"$":0},"xn--rvc1e0am3e":{"$":0},"xn--h2brj9c":{"$":0},"xn--mgbbh1a71e":{"$":0},"xn--fpcrj9c3d":{"$":0},"xn--gecrj9c":{"$":0},"xn--s9brj9c":{"$":0},"xn--45brj9c":{"$":0},"xn--xkc2dl3a5ee0h":{"$":0},"xn--mgba3a4f16a":{"$":0},"xn--mgba3a4fra":{"$":0},"xn--mgbtx2b":{"$":0},"xn--mgbayh7gpa":{"$":0},"xn--3e0b707e":{"$":0},"xn--80ao21a":{"$":0},"xn--fzc2c9e2c":{"$":0},"xn--xkc2al3hye2a":{"$":0},"xn--mgbc0a9azcg":{"$":0},"xn--d1alf":{"$":0},"xn--l1acc":{"$":0},"xn--mix891f":{"$":0},"xn--mix082f":{"$":0},"xn--mgbx4cd0ab":{"$":0},"xn--mgb9awbf":{"$":0},"xn--mgbai9azgqp6j":{"$":0},"xn--mgbai9a5eva00b":{"$":0},"xn--ygbi2ammx":{"$":0},"xn--90a3ac":{"$":0,"xn--o1ac":{"$":0},"xn--c1avg":{"$":0},"xn--90azh":{"$":0},"xn--d1at":{"$":0},"xn--o1ach":{"$":0},"xn--80au":{"$":0}},"xn--p1ai":{"$":0},"xn--wgbl6a":{"$":0},"xn--mgberp4a5d4ar":{"$":0},"xn--mgberp4a5d4a87g":{"$":0},"xn--mgbqly7c0a67fbc":{"$":0},"xn--mgbqly7cvafr":{"$":0},"xn--mgbpl2fh":{"$":0},"xn--yfro4i67o":{"$":0},"xn--clchc0ea0b2g2a9gcd":{"$":0},"xn--ogbpf8fl":{"$":0},"xn--mgbtf8fl":{"$":0},"xn--o3cw4h":{"$":0,"xn--12c1fe0br":{"$":0},"xn--12co0c3b4eva":{"$":0},"xn--h3cuzk1di":{"$":0},"xn--o3cyx2a":{"$":0},"xn--m3ch0j3a":{"$":0},"xn--12cfi8ixb8l":{"$":0}},"xn--pgbs0dh":{"$":0},"xn--kpry57d":{"$":0},"xn--kprw13d":{"$":0},"xn--nnx388a":{"$":0},"xn--j1amh":{"$":0},"xn--mgb2ddes":{"$":0},"xxx":{"$":0},"ye":{"*":{"$":0}},"za":{"ac":{"$":0},"agric":{"$":0},"alt":{"$":0},"co":{"$":0,"blogspot":{"$":0}},"edu":{"$":0},"gov":{"$":0},"grondar":{"$":0},"law":{"$":0},"mil":{"$":0},"net":{"$":0},"ngo":{"$":0},"nis":{"$":0},"nom":{"$":0},"org":{"$":0},"school":{"$":0},"tm":{"$":0},"web":{"$":0}},"zm":{"$":0,"ac":{"$":0},"biz":{"$":0},"co":{"$":0},"com":{"$":0},"edu":{"$":0},"gov":{"$":0},"info":{"$":0},"mil":{"$":0},"net":{"$":0},"org":{"$":0},"sch":{"$":0}},"zw":{"$":0,"ac":{"$":0},"co":{"$":0},"gov":{"$":0},"mil":{"$":0},"org":{"$":0}},"aaa":{"$":0},"aarp":{"$":0},"abarth":{"$":0},"abb":{"$":0},"abbott":{"$":0},"abbvie":{"$":0},"abc":{"$":0},"able":{"$":0},"abogado":{"$":0},"abudhabi":{"$":0},"academy":{"$":0},"accenture":{"$":0},"accountant":{"$":0},"accountants":{"$":0},"aco":{"$":0},"active":{"$":0},"actor":{"$":0},"adac":{"$":0},"ads":{"$":0},"adult":{"$":0},"aeg":{"$":0},"aetna":{"$":0},"afamilycompany":{"$":0},"afl":{"$":0},"africa":{"$":0},"agakhan":{"$":0},"agency":{"$":0},"aig":{"$":0},"aigo":{"$":0},"airbus":{"$":0},"airforce":{"$":0},"airtel":{"$":0},"akdn":{"$":0},"alfaromeo":{"$":0},"alibaba":{"$":0},"alipay":{"$":0},"allfinanz":{"$":0},"allstate":{"$":0},"ally":{"$":0},"alsace":{"$":0},"alstom":{"$":0},"americanexpress":{"$":0},"americanfamily":{"$":0},"amex":{"$":0},"amfam":{"$":0},"amica":{"$":0},"amsterdam":{"$":0},"analytics":{"$":0},"android":{"$":0},"anquan":{"$":0},"anz":{"$":0},"aol":{"$":0},"apartments":{"$":0},"app":{"$":0},"apple":{"$":0},"aquarelle":{"$":0},"arab":{"$":0},"aramco":{"$":0},"archi":{"$":0},"army":{"$":0},"art":{"$":0},"arte":{"$":0},"asda":{"$":0},"associates":{"$":0},"athleta":{"$":0},"attorney":{"$":0},"auction":{"$":0},"audi":{"$":0},"audible":{"$":0},"audio":{"$":0},"auspost":{"$":0},"author":{"$":0},"auto":{"$":0},"autos":{"$":0},"avianca":{"$":0},"aws":{"$":0},"axa":{"$":0},"azure":{"$":0},"baby":{"$":0},"baidu":{"$":0},"banamex":{"$":0},"bananarepublic":{"$":0},"band":{"$":0},"bank":{"$":0},"bar":{"$":0},"barcelona":{"$":0},"barclaycard":{"$":0},"barclays":{"$":0},"barefoot":{"$":0},"bargains":{"$":0},"baseball":{"$":0},"basketball":{"$":0},"bauhaus":{"$":0},"bayern":{"$":0},"bbc":{"$":0},"bbt":{"$":0},"bbva":{"$":0},"bcg":{"$":0},"bcn":{"$":0},"beats":{"$":0},"beauty":{"$":0},"beer":{"$":0},"bentley":{"$":0},"berlin":{"$":0},"best":{"$":0},"bestbuy":{"$":0},"bet":{"$":0},"bharti":{"$":0},"bible":{"$":0},"bid":{"$":0},"bike":{"$":0},"bing":{"$":0},"bingo":{"$":0},"bio":{"$":0},"black":{"$":0},"blackfriday":{"$":0},"blanco":{"$":0},"blockbuster":{"$":0},"blog":{"$":0},"bloomberg":{"$":0},"blue":{"$":0},"bms":{"$":0},"bmw":{"$":0},"bnl":{"$":0},"bnpparibas":{"$":0},"boats":{"$":0},"boehringer":{"$":0},"bofa":{"$":0},"bom":{"$":0},"bond":{"$":0},"boo":{"$":0},"book":{"$":0},"booking":{"$":0},"boots":{"$":0},"bosch":{"$":0},"bostik":{"$":0},"boston":{"$":0},"bot":{"$":0},"boutique":{"$":0},"box":{"$":0},"bradesco":{"$":0},"bridgestone":{"$":0},"broadway":{"$":0},"broker":{"$":0},"brother":{"$":0},"brussels":{"$":0},"budapest":{"$":0},"bugatti":{"$":0},"build":{"$":0},"builders":{"$":0},"business":{"$":0},"buy":{"$":0},"buzz":{"$":0},"bzh":{"$":0},"cab":{"$":0},"cafe":{"$":0},"cal":{"$":0},"call":{"$":0},"calvinklein":{"$":0},"cam":{"$":0},"camera":{"$":0},"camp":{"$":0},"cancerresearch":{"$":0},"canon":{"$":0},"capetown":{"$":0},"capital":{"$":0},"capitalone":{"$":0},"car":{"$":0},"caravan":{"$":0},"cards":{"$":0},"care":{"$":0},"career":{"$":0},"careers":{"$":0},"cars":{"$":0},"cartier":{"$":0},"casa":{"$":0},"case":{"$":0},"caseih":{"$":0},"cash":{"$":0},"casino":{"$":0},"catering":{"$":0},"catholic":{"$":0},"cba":{"$":0},"cbn":{"$":0},"cbre":{"$":0},"cbs":{"$":0},"ceb":{"$":0},"center":{"$":0},"ceo":{"$":0},"cern":{"$":0},"cfa":{"$":0},"cfd":{"$":0},"chanel":{"$":0},"channel":{"$":0},"chase":{"$":0},"chat":{"$":0},"cheap":{"$":0},"chintai":{"$":0},"christmas":{"$":0},"chrome":{"$":0},"chrysler":{"$":0},"church":{"$":0},"cipriani":{"$":0},"circle":{"$":0},"cisco":{"$":0},"citadel":{"$":0},"citi":{"$":0},"citic":{"$":0},"city":{"$":0},"cityeats":{"$":0},"claims":{"$":0},"cleaning":{"$":0},"click":{"$":0},"clinic":{"$":0},"clinique":{"$":0},"clothing":{"$":0},"cloud":{"$":0,"statics":{"*":{"$":0}},"magentosite":{"*":{"$":0}},"vapor":{"$":0},"sensiosite":{"*":{"$":0}},"trafficplex":{"$":0}},"club":{"$":0,"cloudns":{"$":0}},"clubmed":{"$":0},"coach":{"$":0},"codes":{"$":0},"coffee":{"$":0},"college":{"$":0},"cologne":{"$":0},"comcast":{"$":0},"commbank":{"$":0},"community":{"$":0},"company":{"$":0},"compare":{"$":0},"computer":{"$":0},"comsec":{"$":0},"condos":{"$":0},"construction":{"$":0},"consulting":{"$":0},"contact":{"$":0},"contractors":{"$":0},"cooking":{"$":0},"cookingchannel":{"$":0},"cool":{"$":0,"de":{"$":0}},"corsica":{"$":0},"country":{"$":0},"coupon":{"$":0},"coupons":{"$":0},"courses":{"$":0},"credit":{"$":0},"creditcard":{"$":0},"creditunion":{"$":0},"cricket":{"$":0},"crown":{"$":0},"crs":{"$":0},"cruise":{"$":0},"cruises":{"$":0},"csc":{"$":0},"cuisinella":{"$":0},"cymru":{"$":0},"cyou":{"$":0},"dabur":{"$":0},"dad":{"$":0},"dance":{"$":0},"data":{"$":0},"date":{"$":0},"dating":{"$":0},"datsun":{"$":0},"day":{"$":0},"dclk":{"$":0},"dds":{"$":0},"deal":{"$":0},"dealer":{"$":0},"deals":{"$":0},"degree":{"$":0},"delivery":{"$":0},"dell":{"$":0},"deloitte":{"$":0},"delta":{"$":0},"democrat":{"$":0},"dental":{"$":0},"dentist":{"$":0},"desi":{"$":0},"design":{"$":0},"dev":{"$":0},"dhl":{"$":0},"diamonds":{"$":0},"diet":{"$":0},"digital":{"$":0},"direct":{"$":0},"directory":{"$":0},"discount":{"$":0},"discover":{"$":0},"dish":{"$":0},"diy":{"$":0},"dnp":{"$":0},"docs":{"$":0},"doctor":{"$":0},"dodge":{"$":0},"dog":{"$":0},"doha":{"$":0},"domains":{"$":0},"dot":{"$":0},"download":{"$":0},"drive":{"$":0},"dtv":{"$":0},"dubai":{"$":0},"duck":{"$":0},"dunlop":{"$":0},"duns":{"$":0},"dupont":{"$":0},"durban":{"$":0},"dvag":{"$":0},"dvr":{"$":0},"earth":{"$":0},"eat":{"$":0},"eco":{"$":0},"edeka":{"$":0},"education":{"$":0},"email":{"$":0},"emerck":{"$":0},"energy":{"$":0},"engineer":{"$":0},"engineering":{"$":0},"enterprises":{"$":0},"epost":{"$":0},"epson":{"$":0},"equipment":{"$":0},"ericsson":{"$":0},"erni":{"$":0},"esq":{"$":0},"estate":{"$":0,"compute":{"*":{"$":0}}},"esurance":{"$":0},"etisalat":{"$":0},"eurovision":{"$":0},"eus":{"$":0,"party":{"user":{"$":0}}},"events":{"$":0},"everbank":{"$":0},"exchange":{"$":0},"expert":{"$":0},"exposed":{"$":0},"express":{"$":0},"extraspace":{"$":0},"fage":{"$":0},"fail":{"$":0},"fairwinds":{"$":0},"faith":{"$":0,"ybo":{"$":0}},"family":{"$":0},"fan":{"$":0},"fans":{"$":0},"farm":{"$":0,"storj":{"$":0}},"farmers":{"$":0},"fashion":{"$":0},"fast":{"$":0},"fedex":{"$":0},"feedback":{"$":0},"ferrari":{"$":0},"ferrero":{"$":0},"fiat":{"$":0},"fidelity":{"$":0},"fido":{"$":0},"film":{"$":0},"final":{"$":0},"finance":{"$":0},"financial":{"$":0},"fire":{"$":0},"firestone":{"$":0},"firmdale":{"$":0},"fish":{"$":0},"fishing":{"$":0},"fit":{"$":0,"ptplus":{"$":0}},"fitness":{"$":0},"flickr":{"$":0},"flights":{"$":0},"flir":{"$":0},"florist":{"$":0},"flowers":{"$":0},"fly":{"$":0},"foo":{"$":0},"food":{"$":0},"foodnetwork":{"$":0},"football":{"$":0},"ford":{"$":0},"forex":{"$":0},"forsale":{"$":0},"forum":{"$":0},"foundation":{"$":0},"fox":{"$":0},"free":{"$":0},"fresenius":{"$":0},"frl":{"$":0},"frogans":{"$":0},"frontdoor":{"$":0},"frontier":{"$":0},"ftr":{"$":0},"fujitsu":{"$":0},"fujixerox":{"$":0},"fun":{"$":0},"fund":{"$":0},"furniture":{"$":0},"futbol":{"$":0},"fyi":{"$":0},"gal":{"$":0},"gallery":{"$":0},"gallo":{"$":0},"gallup":{"$":0},"game":{"$":0},"games":{"$":0},"gap":{"$":0},"garden":{"$":0},"gbiz":{"$":0},"gdn":{"$":0},"gea":{"$":0},"gent":{"$":0},"genting":{"$":0},"george":{"$":0},"ggee":{"$":0},"gift":{"$":0},"gifts":{"$":0},"gives":{"$":0},"giving":{"$":0},"glade":{"$":0},"glass":{"$":0},"gle":{"$":0},"global":{"$":0},"globo":{"$":0},"gmail":{"$":0},"gmbh":{"$":0},"gmo":{"$":0},"gmx":{"$":0},"godaddy":{"$":0},"gold":{"$":0},"goldpoint":{"$":0},"golf":{"$":0},"goo":{"$":0},"goodhands":{"$":0},"goodyear":{"$":0},"goog":{"$":0,"cloud":{"$":0}},"google":{"$":0},"gop":{"$":0},"got":{"$":0},"grainger":{"$":0},"graphics":{"$":0},"gratis":{"$":0},"green":{"$":0},"gripe":{"$":0},"grocery":{"$":0},"group":{"$":0},"guardian":{"$":0},"gucci":{"$":0},"guge":{"$":0},"guide":{"$":0},"guitars":{"$":0},"guru":{"$":0},"hair":{"$":0},"hamburg":{"$":0},"hangout":{"$":0},"haus":{"$":0},"hbo":{"$":0},"hdfc":{"$":0},"hdfcbank":{"$":0},"health":{"$":0},"healthcare":{"$":0},"help":{"$":0},"helsinki":{"$":0},"here":{"$":0},"hermes":{"$":0},"hgtv":{"$":0},"hiphop":{"$":0},"hisamitsu":{"$":0},"hitachi":{"$":0},"hiv":{"$":0},"hkt":{"$":0},"hockey":{"$":0},"holdings":{"$":0},"holiday":{"$":0},"homedepot":{"$":0},"homegoods":{"$":0},"homes":{"$":0},"homesense":{"$":0},"honda":{"$":0},"honeywell":{"$":0},"horse":{"$":0},"hospital":{"$":0},"host":{"$":0,"cloudaccess":{"$":0},"freesite":{"$":0}},"hosting":{"$":0,"opencraft":{"$":0}},"hot":{"$":0},"hoteles":{"$":0},"hotels":{"$":0},"hotmail":{"$":0},"house":{"$":0},"how":{"$":0},"hsbc":{"$":0},"hughes":{"$":0},"hyatt":{"$":0},"hyundai":{"$":0},"ibm":{"$":0},"icbc":{"$":0},"ice":{"$":0},"icu":{"$":0},"ieee":{"$":0},"ifm":{"$":0},"ikano":{"$":0},"imamat":{"$":0},"imdb":{"$":0},"immo":{"$":0},"immobilien":{"$":0},"industries":{"$":0},"infiniti":{"$":0},"ing":{"$":0},"ink":{"$":0},"institute":{"$":0},"insurance":{"$":0},"insure":{"$":0},"intel":{"$":0},"international":{"$":0},"intuit":{"$":0},"investments":{"$":0},"ipiranga":{"$":0},"irish":{"$":0},"iselect":{"$":0},"ismaili":{"$":0},"ist":{"$":0},"istanbul":{"$":0},"itau":{"$":0},"itv":{"$":0},"iveco":{"$":0},"iwc":{"$":0},"jaguar":{"$":0},"java":{"$":0},"jcb":{"$":0},"jcp":{"$":0},"jeep":{"$":0},"jetzt":{"$":0},"jewelry":{"$":0},"jio":{"$":0},"jlc":{"$":0},"jll":{"$":0},"jmp":{"$":0},"jnj":{"$":0},"joburg":{"$":0},"jot":{"$":0},"joy":{"$":0},"jpmorgan":{"$":0},"jprs":{"$":0},"juegos":{"$":0},"juniper":{"$":0},"kaufen":{"$":0},"kddi":{"$":0},"kerryhotels":{"$":0},"kerrylogistics":{"$":0},"kerryproperties":{"$":0},"kfh":{"$":0},"kia":{"$":0},"kim":{"$":0},"kinder":{"$":0},"kindle":{"$":0},"kitchen":{"$":0},"kiwi":{"$":0},"koeln":{"$":0},"komatsu":{"$":0},"kosher":{"$":0},"kpmg":{"$":0},"kpn":{"$":0},"krd":{"$":0,"co":{"$":0},"edu":{"$":0}},"kred":{"$":0},"kuokgroup":{"$":0},"kyoto":{"$":0},"lacaixa":{"$":0},"ladbrokes":{"$":0},"lamborghini":{"$":0},"lamer":{"$":0},"lancaster":{"$":0},"lancia":{"$":0},"lancome":{"$":0},"land":{"$":0,"static":{"$":0,"dev":{"$":0},"sites":{"$":0}}},"landrover":{"$":0},"lanxess":{"$":0},"lasalle":{"$":0},"lat":{"$":0},"latino":{"$":0},"latrobe":{"$":0},"law":{"$":0},"lawyer":{"$":0},"lds":{"$":0},"lease":{"$":0},"leclerc":{"$":0},"lefrak":{"$":0},"legal":{"$":0},"lego":{"$":0},"lexus":{"$":0},"lgbt":{"$":0},"liaison":{"$":0},"lidl":{"$":0},"life":{"$":0},"lifeinsurance":{"$":0},"lifestyle":{"$":0},"lighting":{"$":0},"like":{"$":0},"lilly":{"$":0},"limited":{"$":0},"limo":{"$":0},"lincoln":{"$":0},"linde":{"$":0},"link":{"$":0,"cyon":{"$":0},"mypep":{"$":0}},"lipsy":{"$":0},"live":{"$":0},"living":{"$":0},"lixil":{"$":0},"loan":{"$":0},"loans":{"$":0},"locker":{"$":0},"locus":{"$":0},"loft":{"$":0},"lol":{"$":0},"london":{"$":0},"lotte":{"$":0},"lotto":{"$":0},"love":{"$":0},"lpl":{"$":0},"lplfinancial":{"$":0},"ltd":{"$":0},"ltda":{"$":0},"lundbeck":{"$":0},"lupin":{"$":0},"luxe":{"$":0},"luxury":{"$":0},"macys":{"$":0},"madrid":{"$":0},"maif":{"$":0},"maison":{"$":0},"makeup":{"$":0},"man":{"$":0},"management":{"$":0,"router":{"$":0}},"mango":{"$":0},"map":{"$":0},"market":{"$":0},"marketing":{"$":0},"markets":{"$":0},"marriott":{"$":0},"marshalls":{"$":0},"maserati":{"$":0},"mattel":{"$":0},"mba":{"$":0},"mckinsey":{"$":0},"med":{"$":0},"media":{"$":0},"meet":{"$":0},"melbourne":{"$":0},"meme":{"$":0},"memorial":{"$":0},"men":{"$":0},"menu":{"$":0},"meo":{"$":0},"merckmsd":{"$":0},"metlife":{"$":0},"miami":{"$":0},"microsoft":{"$":0},"mini":{"$":0},"mint":{"$":0},"mit":{"$":0},"mitsubishi":{"$":0},"mlb":{"$":0},"mls":{"$":0},"mma":{"$":0},"mobile":{"$":0},"mobily":{"$":0},"moda":{"$":0},"moe":{"$":0},"moi":{"$":0},"mom":{"$":0},"monash":{"$":0},"money":{"$":0},"monster":{"$":0},"mopar":{"$":0},"mormon":{"$":0},"mortgage":{"$":0},"moscow":{"$":0},"moto":{"$":0},"motorcycles":{"$":0},"mov":{"$":0},"movie":{"$":0},"movistar":{"$":0},"msd":{"$":0},"mtn":{"$":0},"mtpc":{"$":0},"mtr":{"$":0},"mutual":{"$":0},"nab":{"$":0},"nadex":{"$":0},"nagoya":{"$":0},"nationwide":{"$":0},"natura":{"$":0},"navy":{"$":0},"nba":{"$":0},"nec":{"$":0},"netbank":{"$":0},"netflix":{"$":0},"network":{"$":0,"alces":{"*":{"$":0}}},"neustar":{"$":0},"new":{"$":0},"newholland":{"$":0},"news":{"$":0},"next":{"$":0},"nextdirect":{"$":0},"nexus":{"$":0},"nfl":{"$":0},"ngo":{"$":0},"nhk":{"$":0},"nico":{"$":0},"nike":{"$":0},"nikon":{"$":0},"ninja":{"$":0},"nissan":{"$":0},"nissay":{"$":0},"nokia":{"$":0},"northwesternmutual":{"$":0},"norton":{"$":0},"now":{"$":0},"nowruz":{"$":0},"nowtv":{"$":0},"nra":{"$":0},"nrw":{"$":0},"ntt":{"$":0},"nyc":{"$":0},"obi":{"$":0},"observer":{"$":0},"off":{"$":0},"office":{"$":0},"okinawa":{"$":0},"olayan":{"$":0},"olayangroup":{"$":0},"oldnavy":{"$":0},"ollo":{"$":0},"omega":{"$":0},"one":{"$":0,"homelink":{"$":0}},"ong":{"$":0},"onl":{"$":0},"online":{"$":0,"barsy":{"$":0}},"onyourside":{"$":0},"ooo":{"$":0},"open":{"$":0},"oracle":{"$":0},"orange":{"$":0},"organic":{"$":0},"origins":{"$":0},"osaka":{"$":0},"otsuka":{"$":0},"ott":{"$":0},"ovh":{"$":0,"nerdpol":{"$":0}},"page":{"$":0},"panasonic":{"$":0},"panerai":{"$":0},"paris":{"$":0},"pars":{"$":0},"partners":{"$":0},"parts":{"$":0},"party":{"$":0,"ybo":{"$":0}},"passagens":{"$":0},"pay":{"$":0},"pccw":{"$":0},"pet":{"$":0},"pfizer":{"$":0},"pharmacy":{"$":0},"phd":{"$":0},"philips":{"$":0},"phone":{"$":0},"photo":{"$":0},"photography":{"$":0},"photos":{"$":0},"physio":{"$":0},"piaget":{"$":0},"pics":{"$":0},"pictet":{"$":0},"pictures":{"1337":{"$":0},"$":0},"pid":{"$":0},"pin":{"$":0},"ping":{"$":0},"pink":{"$":0},"pioneer":{"$":0},"pizza":{"$":0},"place":{"$":0},"play":{"$":0},"playstation":{"$":0},"plumbing":{"$":0},"plus":{"$":0},"pnc":{"$":0},"pohl":{"$":0},"poker":{"$":0},"politie":{"$":0},"porn":{"$":0},"pramerica":{"$":0},"praxi":{"$":0},"press":{"$":0},"prime":{"$":0},"prod":{"$":0},"productions":{"$":0},"prof":{"$":0},"progressive":{"$":0},"promo":{"$":0},"properties":{"$":0},"property":{"$":0},"protection":{"$":0},"pru":{"$":0},"prudential":{"$":0},"pub":{"$":0},"pwc":{"$":0},"qpon":{"$":0},"quebec":{"$":0},"quest":{"$":0},"qvc":{"$":0},"racing":{"$":0},"radio":{"$":0},"raid":{"$":0},"read":{"$":0},"realestate":{"$":0},"realtor":{"$":0},"realty":{"$":0},"recipes":{"$":0},"red":{"$":0},"redstone":{"$":0},"redumbrella":{"$":0},"rehab":{"$":0},"reise":{"$":0},"reisen":{"$":0},"reit":{"$":0},"reliance":{"$":0},"ren":{"$":0},"rent":{"$":0},"rentals":{"$":0},"repair":{"$":0},"report":{"$":0},"republican":{"$":0},"rest":{"$":0},"restaurant":{"$":0},"review":{"$":0,"ybo":{"$":0}},"reviews":{"$":0},"rexroth":{"$":0},"rich":{"$":0},"richardli":{"$":0},"ricoh":{"$":0},"rightathome":{"$":0},"ril":{"$":0},"rio":{"$":0},"rip":{"$":0,"clan":{"$":0}},"rmit":{"$":0},"rocher":{"$":0},"rocks":{"$":0,"myddns":{"$":0},"lima-city":{"$":0},"webspace":{"$":0}},"rodeo":{"$":0},"rogers":{"$":0},"room":{"$":0},"rsvp":{"$":0},"rugby":{"$":0},"ruhr":{"$":0},"run":{"$":0},"rwe":{"$":0},"ryukyu":{"$":0},"saarland":{"$":0},"safe":{"$":0},"safety":{"$":0},"sakura":{"$":0},"sale":{"$":0},"salon":{"$":0},"samsclub":{"$":0},"samsung":{"$":0},"sandvik":{"$":0},"sandvikcoromant":{"$":0},"sanofi":{"$":0},"sap":{"$":0},"sapo":{"$":0},"sarl":{"$":0},"sas":{"$":0},"save":{"$":0},"saxo":{"$":0},"sbi":{"$":0},"sbs":{"$":0},"sca":{"$":0},"scb":{"$":0},"schaeffler":{"$":0},"schmidt":{"$":0},"scholarships":{"$":0},"school":{"$":0},"schule":{"$":0},"schwarz":{"$":0},"science":{"$":0,"ybo":{"$":0}},"scjohnson":{"$":0},"scor":{"$":0},"scot":{"$":0},"search":{"$":0},"seat":{"$":0},"secure":{"$":0},"security":{"$":0},"seek":{"$":0},"select":{"$":0},"sener":{"$":0},"services":{"$":0},"ses":{"$":0},"seven":{"$":0},"sew":{"$":0},"sex":{"$":0},"sexy":{"$":0},"sfr":{"$":0},"shangrila":{"$":0},"sharp":{"$":0},"shaw":{"$":0},"shell":{"$":0},"shia":{"$":0},"shiksha":{"$":0},"shoes":{"$":0},"shop":{"$":0},"shopping":{"$":0},"shouji":{"$":0},"show":{"$":0},"showtime":{"$":0},"shriram":{"$":0},"silk":{"$":0},"sina":{"$":0},"singles":{"$":0},"site":{"$":0,"cyon":{"$":0},"platformsh":{"*":{"$":0}},"byen":{"$":0}},"ski":{"$":0},"skin":{"$":0},"sky":{"$":0},"skype":{"$":0},"sling":{"$":0},"smart":{"$":0},"smile":{"$":0},"sncf":{"$":0},"soccer":{"$":0},"social":{"$":0},"softbank":{"$":0},"software":{"$":0},"sohu":{"$":0},"solar":{"$":0},"solutions":{"$":0},"song":{"$":0},"sony":{"$":0},"soy":{"$":0},"space":{"$":0,"stackspace":{"$":0},"uber":{"$":0},"xs4all":{"$":0}},"spiegel":{"$":0},"spot":{"$":0},"spreadbetting":{"$":0},"srl":{"$":0},"srt":{"$":0},"stada":{"$":0},"staples":{"$":0},"star":{"$":0},"starhub":{"$":0},"statebank":{"$":0},"statefarm":{"$":0},"statoil":{"$":0},"stc":{"$":0},"stcgroup":{"$":0},"stockholm":{"$":0},"storage":{"$":0},"store":{"$":0},"stream":{"$":0},"studio":{"$":0},"study":{"$":0},"style":{"$":0},"sucks":{"$":0},"supplies":{"$":0},"supply":{"$":0},"support":{"$":0,"barsy":{"$":0}},"surf":{"$":0},"surgery":{"$":0},"suzuki":{"$":0},"swatch":{"$":0},"swiftcover":{"$":0},"swiss":{"$":0},"sydney":{"$":0},"symantec":{"$":0},"systems":{"$":0,"knightpoint":{"$":0}},"tab":{"$":0},"taipei":{"$":0},"talk":{"$":0},"taobao":{"$":0},"target":{"$":0},"tatamotors":{"$":0},"tatar":{"$":0},"tattoo":{"$":0},"tax":{"$":0},"taxi":{"$":0},"tci":{"$":0},"tdk":{"$":0},"team":{"$":0},"tech":{"$":0},"technology":{"$":0},"telecity":{"$":0},"telefonica":{"$":0},"temasek":{"$":0},"tennis":{"$":0},"teva":{"$":0},"thd":{"$":0},"theater":{"$":0},"theatre":{"$":0},"tiaa":{"$":0},"tickets":{"$":0},"tienda":{"$":0},"tiffany":{"$":0},"tips":{"$":0},"tires":{"$":0},"tirol":{"$":0},"tjmaxx":{"$":0},"tjx":{"$":0},"tkmaxx":{"$":0},"tmall":{"$":0},"today":{"$":0},"tokyo":{"$":0},"tools":{"$":0},"top":{"$":0},"toray":{"$":0},"toshiba":{"$":0},"total":{"$":0},"tours":{"$":0},"town":{"$":0},"toyota":{"$":0},"toys":{"$":0},"trade":{"$":0,"ybo":{"$":0}},"trading":{"$":0},"training":{"$":0},"travelchannel":{"$":0},"travelers":{"$":0},"travelersinsurance":{"$":0},"trust":{"$":0},"trv":{"$":0},"tube":{"$":0},"tui":{"$":0},"tunes":{"$":0},"tushu":{"$":0},"tvs":{"$":0},"ubank":{"$":0},"ubs":{"$":0},"uconnect":{"$":0},"unicom":{"$":0},"university":{"$":0},"uno":{"$":0},"uol":{"$":0},"ups":{"$":0},"vacations":{"$":0},"vana":{"$":0},"vanguard":{"$":0},"vegas":{"$":0},"ventures":{"$":0},"verisign":{"$":0},"versicherung":{"$":0},"vet":{"$":0},"viajes":{"$":0},"video":{"$":0},"vig":{"$":0},"viking":{"$":0},"villas":{"$":0},"vin":{"$":0},"vip":{"$":0},"virgin":{"$":0},"visa":{"$":0},"vision":{"$":0},"vista":{"$":0},"vistaprint":{"$":0},"viva":{"$":0},"vivo":{"$":0},"vlaanderen":{"$":0},"vodka":{"$":0},"volkswagen":{"$":0},"volvo":{"$":0},"vote":{"$":0},"voting":{"$":0},"voto":{"$":0},"voyage":{"$":0},"vuelos":{"$":0},"wales":{"$":0},"walmart":{"$":0},"walter":{"$":0},"wang":{"$":0},"wanggou":{"$":0},"warman":{"$":0},"watch":{"$":0},"watches":{"$":0},"weather":{"$":0},"weatherchannel":{"$":0},"webcam":{"$":0},"weber":{"$":0},"website":{"$":0},"wed":{"$":0},"wedding":{"$":0},"weibo":{"$":0},"weir":{"$":0},"whoswho":{"$":0},"wien":{"$":0},"wiki":{"$":0},"williamhill":{"$":0},"win":{"$":0},"windows":{"$":0},"wine":{"$":0},"winners":{"$":0},"wme":{"$":0},"wolterskluwer":{"$":0},"woodside":{"$":0},"work":{"$":0},"works":{"$":0},"world":{"$":0},"wow":{"$":0},"wtc":{"$":0},"wtf":{"$":0},"xbox":{"$":0},"xerox":{"$":0},"xfinity":{"$":0},"xihuan":{"$":0},"xin":{"$":0},"xn--11b4c3d":{"$":0},"xn--1ck2e1b":{"$":0},"xn--1qqw23a":{"$":0},"xn--30rr7y":{"$":0},"xn--3bst00m":{"$":0},"xn--3ds443g":{"$":0},"xn--3oq18vl8pn36a":{"$":0},"xn--3pxu8k":{"$":0},"xn--42c2d9a":{"$":0},"xn--45q11c":{"$":0},"xn--4gbrim":{"$":0},"xn--55qw42g":{"$":0},"xn--55qx5d":{"$":0},"xn--5su34j936bgsg":{"$":0},"xn--5tzm5g":{"$":0},"xn--6frz82g":{"$":0},"xn--6qq986b3xl":{"$":0},"xn--80adxhks":{"$":0},"xn--80aqecdr1a":{"$":0},"xn--80asehdb":{"$":0},"xn--80aswg":{"$":0},"xn--8y0a063a":{"$":0},"xn--9dbq2a":{"$":0},"xn--9et52u":{"$":0},"xn--9krt00a":{"$":0},"xn--b4w605ferd":{"$":0},"xn--bck1b9a5dre4c":{"$":0},"xn--c1avg":{"$":0},"xn--c2br7g":{"$":0},"xn--cck2b3b":{"$":0},"xn--cg4bki":{"$":0},"xn--czr694b":{"$":0},"xn--czrs0t":{"$":0},"xn--czru2d":{"$":0},"xn--d1acj3b":{"$":0},"xn--eckvdtc9d":{"$":0},"xn--efvy88h":{"$":0},"xn--estv75g":{"$":0},"xn--fct429k":{"$":0},"xn--fhbei":{"$":0},"xn--fiq228c5hs":{"$":0},"xn--fiq64b":{"$":0},"xn--fjq720a":{"$":0},"xn--flw351e":{"$":0},"xn--fzys8d69uvgm":{"$":0},"xn--g2xx48c":{"$":0},"xn--gckr3f0f":{"$":0},"xn--gk3at1e":{"$":0},"xn--hxt814e":{"$":0},"xn--i1b6b1a6a2e":{"$":0},"xn--imr513n":{"$":0},"xn--io0a7i":{"$":0},"xn--j1aef":{"$":0},"xn--jlq61u9w7b":{"$":0},"xn--jvr189m":{"$":0},"xn--kcrx77d1x4a":{"$":0},"xn--kpu716f":{"$":0},"xn--kput3i":{"$":0},"xn--mgba3a3ejt":{"$":0},"xn--mgba7c0bbn0a":{"$":0},"xn--mgbaakc7dvf":{"$":0},"xn--mgbab2bd":{"$":0},"xn--mgbb9fbpob":{"$":0},"xn--mgbca7dzdo":{"$":0},"xn--mgbi4ecexp":{"$":0},"xn--mgbt3dhd":{"$":0},"xn--mk1bu44c":{"$":0},"xn--mxtq1m":{"$":0},"xn--ngbc5azd":{"$":0},"xn--ngbe9e0a":{"$":0},"xn--ngbrx":{"$":0},"xn--nqv7f":{"$":0},"xn--nqv7fs00ema":{"$":0},"xn--nyqy26a":{"$":0},"xn--p1acf":{"$":0},"xn--pbt977c":{"$":0},"xn--pssy2u":{"$":0},"xn--q9jyb4c":{"$":0},"xn--qcka1pmc":{"$":0},"xn--rhqv96g":{"$":0},"xn--rovu88b":{"$":0},"xn--ses554g":{"$":0},"xn--t60b56a":{"$":0},"xn--tckwe":{"$":0},"xn--tiq49xqyj":{"$":0},"xn--unup4y":{"$":0},"xn--vermgensberater-ctb":{"$":0},"xn--vermgensberatung-pwb":{"$":0},"xn--vhquv":{"$":0},"xn--vuq861b":{"$":0},"xn--w4r85el8fhu5dnra":{"$":0},"xn--w4rs40l":{"$":0},"xn--xhq521b":{"$":0},"xn--zfr164b":{"$":0},"xperia":{"$":0},"xyz":{"$":0,"blogsite":{"$":0},"fhapp":{"$":0}},"yachts":{"$":0},"yahoo":{"$":0},"yamaxun":{"$":0},"yandex":{"$":0},"yodobashi":{"$":0},"yoga":{"$":0},"yokohama":{"$":0},"you":{"$":0},"youtube":{"$":0},"yun":{"$":0},"zappos":{"$":0},"zara":{"$":0},"zero":{"$":0},"zip":{"$":0},"zippo":{"$":0},"zone":{"$":0,"triton":{"*":{"$":0}},"lima":{"$":0}},"zuerich":{"$":0}}}
},{}]},{},[1])(1)
});


=== File: ./v3/data/inject/disabled.js ===
----------------------------------------
chrome.runtime.sendMessage({
  'cmd': 'state',
  'active': false
});




=== File: ./v3/data/inject/test.js ===
----------------------------------------
console.info('testing script');



=== File: ./v3/data/inject/block/isolated.js ===
----------------------------------------
/* global navigation */

/* Checks
  1.
  https://chrome.google.com/webstore/detail/aefkmifgmaafnojlojpnekbpbmjiiogg
  FF -> The page’s settings blocked the loading of a resource at inline (“script-src”)

  2.
  https://www.w3schools.com/jsref/tryit.asp?filename=tryjsref_win_open

  3. test on incognito and private mode

  4. https://webbrowsertools.com/popup-blocker/?fire_on_start

  5. test reverse mode

  6.
    https://codepen.io/pipr/pen/VwpVyZQ
    https://codepen.io/pipr/pen/LYWMpdR
    https://codepen.io/pipr/pen/XWMoPog
    https://codepen.io/pipr/pen/YzZdOdJ

  7.
    https://patrickhlauke.github.io/recaptcha/
*/

// we need to define global variables. Using self.scope may conflict with an element on page
const scope = {};
scope.requests = []; // initial requests before interface is ready

/* port is used to communicate between chrome and page scripts */
let port;
try {
  port = document.getElementById('ppop-port');
  port.remove();
}
catch (e) {
  port = document.createElement('span');
  port.id = 'ppop-port';
  document.documentElement.append(port);
}

/* preferences */
const prefs = window.prefs = new Proxy({}, {
  set(obj, key, value) {
    obj[key] = value;

    if (key === 'enabled') {
      port.dataset[key] = value === true;
      if (window === window.top) {
        chrome.runtime.sendMessage({
          'cmd': 'state',
          'active': value === true
        });
      }
    }
    return true;
  }
});

/* is enabled */
try { // SVG documents
  port.dataset.enabled = true;
}
catch (e) {}
chrome.storage.onChanged.addListener(ps => {
  if (ps.enabled) {
    prefs.enabled = ps.enabled.newValue;
  }
});

/* record fake window's executed commands */
const records = {};

/* page redirection; prevent the page redirection when popup opening is unsuccessful for 2 seconds */
const redirect = {
  prefs: {
    'block-page-redirection': false,
    'block-page-redirection-period': 2000,
    'block-page-redirection-hostnames': [],
    'block-page-redirection-same-origin': true
  },
  timeout: null,
  beforeunload(e) {
    if (redirect.href) {
      try {
        const {origin, hostname} = new URL(redirect.href);

        // do not block same origin
        if (redirect.prefs['block-page-redirection-same-origin'] && (
          origin.includes(location.hostname) ||
          location.origin.includes(hostname)
        )) {
          return true;
        }
        if (redirect.prefs['block-page-redirection-hostnames'].includes(hostname)) {
          return true;
        }
      }
      catch (e) {
        console.warn('block redirect error', e);
      }
    }

    e.returnValue = 'false';
  },
  block() {
    if (window.top === window) {
      if (redirect.prefs && redirect.prefs['block-page-redirection']) {
        addEventListener('beforeunload', redirect.beforeunload, true);
        clearTimeout(redirect.timeout);
        redirect.timeout = setTimeout(redirect.release, redirect.prefs['block-page-redirection-period']);
      }
    }
  },
  release() {
    removeEventListener('beforeunload', redirect.beforeunload, true);
    clearTimeout(redirect.timeout);
  }
};
// get notified on navigation
if (typeof navigation !== 'undefined' && window.top === window) {
  navigation.addEventListener('navigate', navigateEvent => {
    redirect.href = navigateEvent.destination.url;
  });
}
chrome.storage.local.get(redirect.prefs, prefs => Object.assign(redirect.prefs, prefs));

/* recording window.open */
const record = e => {
  e.stopPropagation();
  const request = e.detail;
  records[request.id].push(request);
};
port.addEventListener('record', record);

/* channel */
const policy = e => {
  e.stopPropagation();

  // make sure the request is from our script; see example 1
  if (e.target === port) {
    if (port.dataset.enabled !== 'false') {
      const request = e.detail;
      const {block, id, href, hostname} = blocker.policy(request);
      port.setAttribute('eid', id);
      port.setAttribute('block', block);

      if (block) {
        redirect.block();

        chrome.runtime.sendMessage({
          cmd: 'popup-request',
          type: request.type,
          href,
          hostname,
          id
        });
      }
    }
    // when a new iframe is loaded and the blocker is disabled but the preferences are not yet ported
    else {
      port.setAttribute('block', false);
    }
  }
};
port.addEventListener('policy', policy);

/* blocker */
const blocker = {};

blocker.hasBase = a => {
  // https://github.com/schomery/popup-blocker/issues/86
  // only check the closest base
  const base = [a, ...document.querySelectorAll('base')]
    .map(e => e && e.target ? e.target : '')
    .filter(b => b).shift();

  if (!base || base.toLowerCase() === '_self' || base.toLowerCase() === '_top') {
    return false;
  }
  // the linked page opens in a named frame
  if (typeof window[base] === 'object') {
    return false;
  }
  try { // might be cross-origin
    if (typeof parent[base] === 'object') {
      return false;
    }
  }
  catch (e) {}
  if (typeof isFirefox !== 'undefined') {
    try {
      if (document.querySelector(`[name="${base}"]`)) {
        return false;
      }
    }
    catch (e) {}
    try {
      if (parent.document.querySelector(`[name="${base}"]`)) {
        return false;
      }
    }
    catch (e) {}
  }
  return true;
};

blocker.policy = request => {
  const target = document.activeElement || document.documentElement;
  const {type} = request;
  let href = request.href;
  let hostname = '';
  let block = true;
  let sameContext = false;

  if (type === 'element.click') {
    const a = 'closest' in target ? (target.closest('[target]') || target.closest('a')) : null;
    href = href || (a ? a.href || a.action : '');

    // we are blocking either if a is found or href is provided; see method 12/4
    block = Boolean(a) || href;
  }
  // always run window open on the same context
  if (type === 'window.open') {
    sameContext = true;
  }
  else {
    block = block && blocker.hasBase({
      target: request.target
    });
  }
  // block if
  if (request.metaKey && request.isTrusted === false) { // see method 12/5
    block = true;
  }
  if ('button' in request && request.button !== 0 && request.isTrusted === false) { // see method 12/2
    block = true;
  }
  // do not block if
  if (request.defaultPrevented || (request.metaKey && request.isTrusted)) {
    block = false;
  }
  // do not block A[download]
  if (request.tag === 'A' && request.download) {
    block = false;
  }
  // fixing
  if (block) {
    // fix relative href
    if (href && href.indexOf(':') === -1) {
      const a = document.createElement('a');
      a.setAttribute('href', href);
      href = a.href;
    }
    // create a unique id when "href" is not usable
    if (!href || href.startsWith('about:')) {
      target.dataset.ppbid = target.dataset.ppbid || Math.random();
    }
    if (href) {
      try {
        const configs = blocker.policy.configs;

        const loc = new URL(href);
        hostname = loc.hostname;
        // allow popups from the same hostname
        if (configs.domain) {
          try { // if they are not in the same origin
            const h = window.top.location.hostname;
            if (h && hostname && (h.endsWith('.' + hostname) || hostname.endsWith('.' + h) || hostname === h)) {
              block = false;
            }
          }
          catch (e) {}
        }
        // protocol matching
        if (loc.protocol && configs.protocols.indexOf(loc.protocol) !== -1) {
          block = false;
        }
        // white-list matching
        if (hostname) {
          for (const h of configs['popup-hosts']) {
            if (h.endsWith('.' + hostname) || hostname.endsWith('.' + h) || hostname === h) {
              block = false;
            }
          }
        }
      }
      catch (e) {}
    }
  }

  const id = target.dataset.ppbid || Math.random();
  if (sameContext) {
    records[id] = [];
    records[id].args = request.args;
  }
  return {
    id,
    href,
    hostname,
    sameContext,
    block
  };
};
blocker.policy.configs = {
  'domain': false,
  'protocols': ['magnet:'],
  'popup-hosts': ['google.com', 'bing.com', 't.co', 'twitter.com', 'disqus.com', 'login.yahoo.com', 'mail.google.com']
};
chrome.storage.local.get(blocker.policy.configs, ps => Object.assign(blocker.policy.configs, ps));
chrome.storage.onChanged.addListener(ps => {
  Object.keys(ps).filter(k => k in blocker.policy.configs).forEach(k => blocker.policy.configs[k] = ps[k].newValue);
});

/* messaging */
chrome.runtime.onMessage.addListener((request, sender, response) => {
  // apply popup-accept on the context where it is originally requested
  if (request.cmd === 'popup-accepted') {
    port.dataset.enabled = false;

    chrome.runtime.sendMessage({
      cmd: 'run-records',
      url: request.url,
      records: records[request.id],
      args: records[request.id]?.args || []
    }, () => {
      delete records[request.id];
      port.dataset.enabled = prefs.enabled;
    });
  }
  else if (request.cmd === 'use-shadow') {
    port.dataset.shadow = true;
  }
  else if (request.cmd === 'release-beforeunload') {
    redirect.release();
    response(true); // Edge thing!
  }
});



=== File: ./v3/data/inject/block/main.js ===
----------------------------------------
/* this is the entire unprotected code */
{
  /* port is used to communicate between chrome and page scripts */
  let port;
  try {
    port = document.getElementById('ppop-port');
    port.remove();
  }
  catch (e) {
    port = document.createElement('span');
    port.id = 'ppop-port';
    document.documentElement.append(port);
  }

  const post = (name, detail) => port.dispatchEvent(new CustomEvent(name, {
    detail
  }));

  /*
    aggressive: 1; basic protection
    aggressive: 2; basic protection + frame protection
    aggressive: 3; basic protection + frame protection + mutation protection
  */
  const uncode = (aggressive = 3) => {
    /* validate a request */
    const policy = (type, element, event, extra = {}) => {
      if (port.dataset.enabled === 'false') {
        return {
          block: false
        };
      }
      if (event) {
        extra.defaultPrevented = event.defaultPrevented;
        extra.metaKey = event.metaKey || event.ctrlKey;
        extra.button = event.button || 0;
        extra.isTrusted = event.isTrusted;
      }
      post('policy', {
        type,
        href: element.action || element.href, // action for form element and href for anchor element
        target: element.target,
        download: element.download,
        tag: element.tagName,
        ...extra
      });
      return {
        id: port.getAttribute('eid'),
        block: port.getAttribute('block') === 'true'
      };
    };
    /* simulate a window */
    const simulate = (id, root = {}, tree = []) => new Proxy(root, { // window.location.replace
      get(obj, key) {
        return typeof root[key] === 'function' ? function(...args) {
          post('record', {
            id,
            tree,
            action: {
              method: key,
              args
            }
          });
        } : simulate(id, root[key], [...tree, key]);
      },
      set(obj, key, value) {
        if (value) {
          post('record', {
            id,
            tree,
            action: {
              value,
              prop: key
            }
          });
        }
        return true;
      }
    });
    const protected = new WeakMap(); // keep reference of all protected window objects

    /* blocker */
    const blocker = {};

    blocker.frame = target => {
      const {src, tagName} = target;
      if (src && (tagName === 'IFRAME' || tagName === 'FRAME')) {
        const s = src.toLowerCase();
        if (s.startsWith('javascript:') || s.startsWith('data:')) {
          try {
            blocker.install(target.contentWindow);
          }
          catch (e) {}
        }
      }
    };

    blocker.onclick = e => {
      const a = e.target.closest('[target]') || e.target.closest('a');

      // if this is not a form or anchor element, ignore the click
      if (a && policy('element.click', a, e).block) {
        blocker.onclick.pointer.apply(e);
        return true;
      }
    };
    blocker.onclick.pointer = MouseEvent.prototype.preventDefault;

    blocker.install = (w = window) => {
      if (port.dataset.enabled === 'false' || protected.has(w)) {
        return;
      }
      const d = w.document;
      protected.set(w);

      /* overwrites */
      const {HTMLAnchorElement, HTMLFormElement} = w;
      HTMLAnchorElement.prototype.click = new Proxy(HTMLAnchorElement.prototype.click, {
        apply(target, self, args) {
          const {block} = policy('dynamic.a.click', self);
          return block ? undefined : Reflect.apply(target, self, args);
        }
      });
      HTMLAnchorElement.prototype.dispatchEvent = new Proxy(HTMLAnchorElement.prototype.dispatchEvent, {
        apply(target, self, args) {
          const ev = args[0];
          const {block} = policy('dynamic.a.dispatch', self, ev);
          return block ? false : Reflect.apply(target, self, args);
        }
      });
      HTMLFormElement.prototype.submit = new Proxy(HTMLFormElement.prototype.submit, {
        apply(target, self, args) {
          const {block} = policy('dynamic.form.submit', self);
          return block ? false : Reflect.apply(target, self, args);
        }
      });
      HTMLFormElement.prototype.dispatchEvent = new Proxy(HTMLFormElement.prototype.dispatchEvent, {
        apply(target, self, args) {
          const {block} = policy('dynamic.form.dispatch', self);
          return block ? false : Reflect.apply(target, self, args);
        }
      });

      /* iframe mess */
      if (aggressive > 2) {
        const {HTMLIFrameElement, HTMLFrameElement} = w;

        const wf = Object.getOwnPropertyDescriptor(HTMLFrameElement.prototype, 'contentWindow');
        Object.defineProperty(HTMLFrameElement.prototype, 'contentWindow', {
          configurable: true,
          enumerable: true,
          get: function() {
            const w = wf.get.call(this);
            try {
              blocker.install(w);
            }
            catch (e) {}
            Object.defineProperty(this, 'contentWindow', {
              configurable: true,
              enumerable: true,
              value: w
            });
            return w;
          }
        });
        const wif = Object.getOwnPropertyDescriptor(HTMLIFrameElement.prototype, 'contentWindow');
        Object.defineProperty(HTMLIFrameElement.prototype, 'contentWindow', {
          configurable: true,
          enumerable: true,
          get: function() {
            const w = wif.get.call(this);
            try {
              blocker.install(w);
            }
            catch (e) {}
            Object.defineProperty(this, 'contentWindow', {
              configurable: true,
              enumerable: true,
              value: w
            });
            return w;
          }
        });
        const cf = Object.getOwnPropertyDescriptor(HTMLFrameElement.prototype, 'contentDocument');
        Object.defineProperty(HTMLFrameElement.prototype, 'contentDocument', {
          configurable: true,
          enumerable: true,
          get: function() {
            const d = cf.get.call(this);
            try {
              blocker.install(d.defaultView);
            }
            catch (e) {}
            Object.defineProperty(this, 'contentDocument', {
              configurable: true,
              enumerable: true,
              value: d
            });
            return d;
          }
        });
        const cif = Object.getOwnPropertyDescriptor(HTMLIFrameElement.prototype, 'contentDocument');
        Object.defineProperty(HTMLIFrameElement.prototype, 'contentDocument', {
          configurable: true,
          enumerable: true,
          get: function() {
            const d = cif.get.call(this);
            try {
              blocker.install(d.defaultView);
            }
            catch (e) {}
            Object.defineProperty(this, 'contentDocument', {
              configurable: true,
              enumerable: true,
              value: d
            });
            return d;
          }
        });
      }

      /* iframe creation with innerHTML */
      if (aggressive > 2) {
        new MutationObserver(ms => {
          for (const m of ms) {
            for (const e of m.addedNodes) {
              blocker.frame(e);
              if (e.childElementCount) {
                [...e.querySelectorAll('frame,iframe')].forEach(blocker.frame);
              }
            }
          }
        }).observe(d, {childList: true, subtree: true});
      }

      /* click */
      d.addEventListener('click', blocker.onclick, true); // with capture;

      /* window.open */
      w.open = new Proxy(w.open, {
        apply(target, self, args) {
          // do not block if window is opened inside a frame
          const name = args[1];
          if (name && typeof name === 'string' && frames[name]) {
            return Reflect.apply(target, self, args);
          }

          const {id, block} = policy('window.open', {
            href: args.length ? args[0] : ''
          }, null, {
            args
          });
          if (block) { // return a window or a window-liked object
            if (port.dataset.shadow === 'true') {
              const iframe = document.createElement('iframe');
              iframe.style.display = 'none';
              document.body.appendChild(iframe);
              return iframe.contentWindow;
            }
            else {
              return simulate(id, window);
            }
          }
          return Reflect.apply(target, self, args);
        }
      });

      /* DOM replacement (document.open removes all the DOM listeners) */
      let dHTML = d.documentElement;
      d.write = new Proxy(d.write, {
        apply(target, self, args) {
          const r = Reflect.apply(target, self, args);
          if (dHTML !== self.documentElement) {
            dHTML = self.documentElement;
            self.addEventListener('click', blocker.onclick, true);
          }
          return r;
        }
      });
    };
    blocker.remove = (w = window, d = document) => {
      if (port.dataset.enabled === 'false' && protected.has(w)) {
        protected.delete(w);
        d.removeEventListener('click', blocker.onclick);
      }
    };

    // always install since we do not know the enabling status right now
    blocker.install();

    // receive configure
    new MutationObserver(() => {
      blocker[port.dataset.enabled === 'false' ? 'remove' : 'install']();
    }).observe(port, {
      attributes: true,
      attributeFilter: ['data-enabled']
    });
  };

  if (port.dataset) { // SVG documents
    uncode(3);
  }
}



=== File: ./v3/data/inject/block/isolated.css ===
----------------------------------------
@layer {
  iframe.pp-blocker {
    all: initial;
    z-index: calc(infinity) !important;
    color-scheme: light !important;
    position: fixed !important;
    width: 420px !important;
    max-width: 80vw !important;
    height: var(--height, 65px) !important;
    background: transparent !important;
    border-radius: 0 !important;
    border: none !important;
  }

  #ppop-port {
    display: none;
  }
}



=== File: ./manifest.json ===
----------------------------------------
{
  "manifest_version": 2,
  "name": "Popup Blocker",
  "version": "1.0",
  "description": "A simple popup blocker extension",
  "permissions": [
    "tabs",
    "webRequest",
    "webRequestBlocking",
    "<all_urls>"
  ],
  "background": {
    "scripts": ["background.js"]
  },
  "browser_action": {
    "default_popup": "popup.html"
  }
}



